######################################################################
## PARAM_CARD AUTOMATICALY GENERATED BY MG5                       ####
######################################################################
###################################
## INFORMATION FOR SPINFO
###################################
BLOCK SPINFO #      program information
      1 sphenosarah # spectrum calculator
      2 v4.0.5 # version number of spheno
      9 4.14.1 # version number of sarah
###################################
## INFORMATION FOR MODSEL
###################################
BLOCK MODSEL #      input parameters
      1 0 # susy scale input
      2 1 # boundary conditions
      6 1 # switching on flavour violation
###################################
## INFORMATION FOR MINPAR
###################################
BLOCK MINPAR #      input parameters
      1 0.000000e+00 # m0
      2 0.000000e+00 # m12
      3 3.000000e+01 # tanbeta
      4 0.000000e+00 # signummu
      5 0.000000e+00 # azero
###################################
## INFORMATION FOR EXTPAR
###################################
BLOCK EXTPAR #      input parameters
      1 1.200000e+03 # m1input
      2 1.900000e+03 # m2input
      3 4.000000e+03 # m3input
      23 1.500000e+02 # muinput
      24 1.140000e+06 # ma2input
      25 3.000000e+01 # tanbeta
###################################
## INFORMATION FOR GAUGEGUT
###################################
BLOCK GAUGEGUT Q= 1.000000e+03 #      (gut scale)
      1 4.670222e-01 # g1(q)
      2 6.365959e-01 # g2(q)
      3 1.024549e+00 # g3(q)
###################################
## INFORMATION FOR SMINPUTS
###################################
BLOCK SMINPUTS #      sm parameters
      1 1.279320e+02 # alpha_em^-1(mz)^msbar
      2 1.166370e-05 # g_mu [gev^-2]
      3 1.180021e-01 # alpha_s(mz)^msbar
      4 9.118870e+01 # m_z(pole)
      5 4.180000e+00 # m_b(m_b), msbar
      6 1.720000e+02 # m_t(pole)
      7 1.776690e+00 # m_tau(pole)
###################################
## INFORMATION FOR VCKMIN
###################################
BLOCK VCKMIN #      ckm matrix, wolfenstein parameterization
      1 2.253500e-01 # lambda
      2 8.110000e-01 # a
      3 1.310000e-01 # rho bar
      4 3.450000e-01 # eta bar
###################################
## INFORMATION FOR VCKM
###################################
BLOCK VCKM Q= 1.000000e+03 #      re(ckm) at the susy scale
      1 1 9.741672e-01 # re(v_11)
      1 2 2.258013e-01 # re(v_12)
      1 3 3.467499e-03 # re(v_13)
      2 1 -2.257497e-01 # re(v_21)
      2 2 9.733108e-01 # re(v_22)
      2 3 4.126849e-02 # re(v_23)
      3 1 5.943524e-03 # re(v_31)
      3 2 -4.098520e-02 # re(v_32)
      3 3 9.991421e-01 # re(v_33)
###################################
## INFORMATION FOR GAUGE
###################################
BLOCK GAUGE Q= 1.000000e+03 #      (susy scale)
      1 3.617538e-01 # g1
      2 6.365959e-01 # g2
      3 1.024549e+00 # g3
###################################
## INFORMATION FOR HMIX
###################################
BLOCK HMIX Q= 1.000000e+03 #      (susy scale)
      1 1.500000e+02 # mu
      101 3.795782e+04 # bmu
      102 8.143655e+00 # vd
      103 2.443096e+02 # vu
      3 2.444453e+02 # v
      10 1.537476e+00 # betah
      11 -3.384551e-02 # alphah
###################################
## INFORMATION FOR IMHMIX
###################################
BLOCK IMHMIX Q= 1.000000e+03 #      (susy scale)
      1 0.000000e+00 # mu
      101 0.000000e+00 # bmu
###################################
## INFORMATION FOR MSOFT
###################################
BLOCK MSOFT Q= 1.000000e+03 #      (susy scale)
      21 1.120230e+06 # mhd2
      22 -2.523023e+04 # mhu2
      1 1.200000e+03 # m1
      2 1.900000e+03 # m2
      3 4.000000e+03 # m3
###################################
## INFORMATION FOR IMMSOFT
###################################
BLOCK IMMSOFT Q= 1.000000e+03 #      (susy scale)
      1 0.000000e+00 # m1
      2 0.000000e+00 # m2
      3 0.000000e+00 # m3
###################################
## INFORMATION FOR PHASES
###################################
BLOCK PHASES Q= 1.000000e+03 #      (susy scale)
      1 1.000000e+00 # pg
###################################
## INFORMATION FOR IMPHASES
###################################
BLOCK IMPHASES Q= 1.000000e+03 #      (susy scale)
      1 0.000000e+00 # pg
###################################
## INFORMATION FOR YD
###################################
BLOCK YD Q= 1.000000e+03 #      (susy scale)
      1 1 4.118344e-04 # real(yd(1,1),dp)
      1 2 -1.911337e-20 # real(yd(1,2),dp)
      1 3 -6.032394e-25 # real(yd(1,3),dp)
      2 1 -4.927187e-19 # real(yd(2,1),dp)
      2 2 7.824916e-03 # real(yd(2,2),dp)
      2 3 7.665885e-22 # real(yd(2,3),dp)
      3 1 -2.569706e-21 # real(yd(3,1),dp)
      3 2 4.688286e-20 # real(yd(3,2),dp)
      3 3 3.971744e-01 # real(yd(3,3),dp)
###################################
## INFORMATION FOR IMYD
###################################
BLOCK IMYD Q= 1.000000e+03 #      (susy scale)
      1 1 0.000000e+00 # aimag(yd(1,1))
      1 2 0.000000e+00 # aimag(yd(1,2))
      1 3 0.000000e+00 # aimag(yd(1,3))
      2 1 0.000000e+00 # aimag(yd(2,1))
      2 2 0.000000e+00 # aimag(yd(2,2))
      2 3 0.000000e+00 # aimag(yd(2,3))
      3 1 0.000000e+00 # aimag(yd(3,1))
      3 2 0.000000e+00 # aimag(yd(3,2))
      3 3 0.000000e+00 # aimag(yd(3,3))
###################################
## INFORMATION FOR YE
###################################
BLOCK YE Q= 1.000000e+03 #      (susy scale)
      1 1 8.857939e-05 # real(ye(1,1),dp)
      1 2 0.000000e+00 # real(ye(1,2),dp)
      1 3 0.000000e+00 # real(ye(1,3),dp)
      2 1 0.000000e+00 # real(ye(2,1),dp)
      2 2 1.831541e-02 # real(ye(2,2),dp)
      2 3 0.000000e+00 # real(ye(2,3),dp)
      3 1 0.000000e+00 # real(ye(3,1),dp)
      3 2 0.000000e+00 # real(ye(3,2),dp)
      3 3 3.080043e-01 # real(ye(3,3),dp)
###################################
## INFORMATION FOR IMYE
###################################
BLOCK IMYE Q= 1.000000e+03 #      (susy scale)
      1 1 0.000000e+00 # aimag(ye(1,1))
      1 2 0.000000e+00 # aimag(ye(1,2))
      1 3 0.000000e+00 # aimag(ye(1,3))
      2 1 0.000000e+00 # aimag(ye(2,1))
      2 2 0.000000e+00 # aimag(ye(2,2))
      2 3 0.000000e+00 # aimag(ye(2,3))
      3 1 0.000000e+00 # aimag(ye(3,1))
      3 2 0.000000e+00 # aimag(ye(3,2))
      3 3 0.000000e+00 # aimag(ye(3,3))
###################################
## INFORMATION FOR YU
###################################
BLOCK YU Q= 1.000000e+03 #      (susy scale)
      1 1 6.891278e-06 # real(yu(1,1),dp)
      1 2 7.494595e-20 # real(yu(1,2),dp)
      1 3 1.129319e-23 # real(yu(1,3),dp)
      2 1 -3.773753e-17 # real(yu(2,1),dp)
      2 2 3.447570e-03 # real(yu(2,2),dp)
      2 3 9.427045e-20 # real(yu(2,3),dp)
      3 1 -9.250548e-19 # real(yu(3,1),dp)
      3 2 3.857598e-18 # real(yu(3,2),dp)
      3 3 8.348170e-01 # real(yu(3,3),dp)
###################################
## INFORMATION FOR IMYU
###################################
BLOCK IMYU Q= 1.000000e+03 #      (susy scale)
      1 1 0.000000e+00 # aimag(yu(1,1))
      1 2 0.000000e+00 # aimag(yu(1,2))
      1 3 0.000000e+00 # aimag(yu(1,3))
      2 1 0.000000e+00 # aimag(yu(2,1))
      2 2 0.000000e+00 # aimag(yu(2,2))
      2 3 0.000000e+00 # aimag(yu(2,3))
      3 1 0.000000e+00 # aimag(yu(3,1))
      3 2 0.000000e+00 # aimag(yu(3,2))
      3 3 0.000000e+00 # aimag(yu(3,3))
###################################
## INFORMATION FOR TD
###################################
BLOCK TD Q= 1.000000e+03 #      (susy scale)
      1 1 0.000000e+00 # real(td(1,1),dp)
      1 2 0.000000e+00 # real(td(1,2),dp)
      1 3 0.000000e+00 # real(td(1,3),dp)
      2 1 0.000000e+00 # real(td(2,1),dp)
      2 2 0.000000e+00 # real(td(2,2),dp)
      2 3 0.000000e+00 # real(td(2,3),dp)
      3 1 0.000000e+00 # real(td(3,1),dp)
      3 2 0.000000e+00 # real(td(3,2),dp)
      3 3 0.000000e+00 # real(td(3,3),dp)
###################################
## INFORMATION FOR IMTD
###################################
BLOCK IMTD Q= 1.000000e+03 #      (susy scale)
      1 1 0.000000e+00 # aimag(td(1,1))
      1 2 0.000000e+00 # aimag(td(1,2))
      1 3 0.000000e+00 # aimag(td(1,3))
      2 1 0.000000e+00 # aimag(td(2,1))
      2 2 0.000000e+00 # aimag(td(2,2))
      2 3 0.000000e+00 # aimag(td(2,3))
      3 1 0.000000e+00 # aimag(td(3,1))
      3 2 0.000000e+00 # aimag(td(3,2))
      3 3 0.000000e+00 # aimag(td(3,3))
###################################
## INFORMATION FOR TE
###################################
BLOCK TE Q= 1.000000e+03 #      (susy scale)
      1 1 0.000000e+00 # real(te(1,1),dp)
      1 2 0.000000e+00 # real(te(1,2),dp)
      1 3 0.000000e+00 # real(te(1,3),dp)
      2 1 0.000000e+00 # real(te(2,1),dp)
      2 2 0.000000e+00 # real(te(2,2),dp)
      2 3 0.000000e+00 # real(te(2,3),dp)
      3 1 0.000000e+00 # real(te(3,1),dp)
      3 2 0.000000e+00 # real(te(3,2),dp)
      3 3 0.000000e+00 # real(te(3,3),dp)
###################################
## INFORMATION FOR IMTE
###################################
BLOCK IMTE Q= 1.000000e+03 #      (susy scale)
      1 1 0.000000e+00 # aimag(te(1,1))
      1 2 0.000000e+00 # aimag(te(1,2))
      1 3 0.000000e+00 # aimag(te(1,3))
      2 1 0.000000e+00 # aimag(te(2,1))
      2 2 0.000000e+00 # aimag(te(2,2))
      2 3 0.000000e+00 # aimag(te(2,3))
      3 1 0.000000e+00 # aimag(te(3,1))
      3 2 0.000000e+00 # aimag(te(3,2))
      3 3 0.000000e+00 # aimag(te(3,3))
###################################
## INFORMATION FOR TU
###################################
BLOCK TU Q= 1.000000e+03 #      (susy scale)
      1 1 -4.177871e-09 # real(tu(1,1),dp)
      1 2 -4.972320e-08 # real(tu(1,2),dp)
      1 3 -1.213615e-06 # real(tu(1,3),dp)
      2 1 -2.471792e-05 # real(tu(2,1),dp)
      2 2 -2.941820e-04 # real(tu(2,2),dp)
      2 3 -7.180226e-03 # real(tu(2,3),dp)
      3 1 1.100670e+01 # real(tu(3,1),dp)
      3 2 1.309970e+02 # real(tu(3,2),dp)
      3 3 3.197299e+03 # real(tu(3,3),dp)
###################################
## INFORMATION FOR IMTU
###################################
BLOCK IMTU Q= 1.000000e+03 #      (susy scale)
      1 1 0.000000e+00 # aimag(tu(1,1))
      1 2 0.000000e+00 # aimag(tu(1,2))
      1 3 0.000000e+00 # aimag(tu(1,3))
      2 1 0.000000e+00 # aimag(tu(2,1))
      2 2 0.000000e+00 # aimag(tu(2,2))
      2 3 0.000000e+00 # aimag(tu(2,3))
      3 1 0.000000e+00 # aimag(tu(3,1))
      3 2 0.000000e+00 # aimag(tu(3,2))
      3 3 0.000000e+00 # aimag(tu(3,3))
###################################
## INFORMATION FOR MSQ2
###################################
BLOCK MSQ2 Q= 1.000000e+03 #      (susy scale)
      1 1 7.600000e+06 # real(mq2(1,1),dp)
      1 2 4.656042e-02 # real(mq2(1,2),dp)
      1 3 -4.783385e+00 # real(mq2(1,3),dp)
      2 1 4.656042e-02 # real(mq2(2,1),dp)
      2 2 7.700000e+06 # real(mq2(2,2),dp)
      2 3 6.599003e+01 # real(mq2(2,3),dp)
      3 1 -4.783385e+00 # real(mq2(3,1),dp)
      3 2 6.599003e+01 # real(mq2(3,2),dp)
      3 3 7.500000e+06 # real(mq2(3,3),dp)
###################################
## INFORMATION FOR IMMSQ2
###################################
BLOCK IMMSQ2 Q= 1.000000e+03 #      (susy scale)
      1 1 0.000000e+00 # aimag(mq2(1,1))
      1 2 0.000000e+00 # aimag(mq2(1,2))
      1 3 0.000000e+00 # aimag(mq2(1,3))
      2 1 0.000000e+00 # aimag(mq2(2,1))
      2 2 0.000000e+00 # aimag(mq2(2,2))
      2 3 0.000000e+00 # aimag(mq2(2,3))
      3 1 0.000000e+00 # aimag(mq2(3,1))
      3 2 0.000000e+00 # aimag(mq2(3,2))
      3 3 0.000000e+00 # aimag(mq2(3,3))
###################################
## INFORMATION FOR MSL2
###################################
BLOCK MSL2 Q= 1.000000e+03 #      (susy scale)
      1 1 2.000000e+06 # real(ml2(1,1),dp)
      1 2 0.000000e+00 # real(ml2(1,2),dp)
      1 3 0.000000e+00 # real(ml2(1,3),dp)
      2 1 0.000000e+00 # real(ml2(2,1),dp)
      2 2 2.000000e+06 # real(ml2(2,2),dp)
      2 3 0.000000e+00 # real(ml2(2,3),dp)
      3 1 0.000000e+00 # real(ml2(3,1),dp)
      3 2 0.000000e+00 # real(ml2(3,2),dp)
      3 3 2.000000e+06 # real(ml2(3,3),dp)
###################################
## INFORMATION FOR IMMSL2
###################################
BLOCK IMMSL2 Q= 1.000000e+03 #      (susy scale)
      1 1 0.000000e+00 # aimag(ml2(1,1))
      1 2 0.000000e+00 # aimag(ml2(1,2))
      1 3 0.000000e+00 # aimag(ml2(1,3))
      2 1 0.000000e+00 # aimag(ml2(2,1))
      2 2 0.000000e+00 # aimag(ml2(2,2))
      2 3 0.000000e+00 # aimag(ml2(2,3))
      3 1 0.000000e+00 # aimag(ml2(3,1))
      3 2 0.000000e+00 # aimag(ml2(3,2))
      3 3 0.000000e+00 # aimag(ml2(3,3))
###################################
## INFORMATION FOR MSD2
###################################
BLOCK MSD2 Q= 1.000000e+03 #      (susy scale)
      1 1 7.500000e+06 # real(md2(1,1),dp)
      1 2 4.639273e-03 # real(md2(1,2),dp)
      1 3 1.154806e-02 # real(md2(1,3),dp)
      2 1 4.639273e-03 # real(md2(2,1),dp)
      2 2 7.600000e+06 # real(md2(2,2),dp)
      2 3 -1.009079e+00 # real(md2(2,3),dp)
      3 1 1.154806e-02 # real(md2(3,1),dp)
      3 2 -1.009079e+00 # real(md2(3,2),dp)
      3 3 7.800000e+06 # real(md2(3,3),dp)
###################################
## INFORMATION FOR IMMSD2
###################################
BLOCK IMMSD2 Q= 1.000000e+03 #      (susy scale)
      1 1 0.000000e+00 # aimag(md2(1,1))
      1 2 0.000000e+00 # aimag(md2(1,2))
      1 3 0.000000e+00 # aimag(md2(1,3))
      2 1 0.000000e+00 # aimag(md2(2,1))
      2 2 0.000000e+00 # aimag(md2(2,2))
      2 3 0.000000e+00 # aimag(md2(2,3))
      3 1 0.000000e+00 # aimag(md2(3,1))
      3 2 0.000000e+00 # aimag(md2(3,2))
      3 3 0.000000e+00 # aimag(md2(3,3))
###################################
## INFORMATION FOR MSU2
###################################
BLOCK MSU2 Q= 1.000000e+03 #      (susy scale)
      1 1 7.300000e+06 # real(mu2(1,1),dp)
      1 2 -8.480348e-11 # real(mu2(1,2),dp)
      1 3 3.795752e-05 # real(mu2(1,3),dp)
      2 1 -8.480348e-11 # real(mu2(2,1),dp)
      2 2 7.300000e+06 # real(mu2(2,2),dp)
      2 3 2.245716e-01 # real(mu2(2,3),dp)
      3 1 3.795752e-05 # real(mu2(3,1),dp)
      3 2 2.245716e-01 # real(mu2(3,2),dp)
      3 3 7.200000e+06 # real(mu2(3,3),dp)
###################################
## INFORMATION FOR IMMSU2
###################################
BLOCK IMMSU2 Q= 1.000000e+03 #      (susy scale)
      1 1 0.000000e+00 # aimag(mu2(1,1))
      1 2 0.000000e+00 # aimag(mu2(1,2))
      1 3 0.000000e+00 # aimag(mu2(1,3))
      2 1 0.000000e+00 # aimag(mu2(2,1))
      2 2 0.000000e+00 # aimag(mu2(2,2))
      2 3 0.000000e+00 # aimag(mu2(2,3))
      3 1 0.000000e+00 # aimag(mu2(3,1))
      3 2 0.000000e+00 # aimag(mu2(3,2))
      3 3 0.000000e+00 # aimag(mu2(3,3))
###################################
## INFORMATION FOR MSE2
###################################
BLOCK MSE2 Q= 1.000000e+03 #      (susy scale)
      1 1 2.000000e+06 # real(me2(1,1),dp)
      1 2 0.000000e+00 # real(me2(1,2),dp)
      1 3 0.000000e+00 # real(me2(1,3),dp)
      2 1 0.000000e+00 # real(me2(2,1),dp)
      2 2 2.000000e+06 # real(me2(2,2),dp)
      2 3 0.000000e+00 # real(me2(2,3),dp)
      3 1 0.000000e+00 # real(me2(3,1),dp)
      3 2 0.000000e+00 # real(me2(3,2),dp)
      3 3 2.000000e+06 # real(me2(3,3),dp)
###################################
## INFORMATION FOR IMMSE2
###################################
BLOCK IMMSE2 Q= 1.000000e+03 #      (susy scale)
      1 1 0.000000e+00 # aimag(me2(1,1))
      1 2 0.000000e+00 # aimag(me2(1,2))
      1 3 0.000000e+00 # aimag(me2(1,3))
      2 1 0.000000e+00 # aimag(me2(2,1))
      2 2 0.000000e+00 # aimag(me2(2,2))
      2 3 0.000000e+00 # aimag(me2(2,3))
      3 1 0.000000e+00 # aimag(me2(3,1))
      3 2 0.000000e+00 # aimag(me2(3,2))
      3 3 0.000000e+00 # aimag(me2(3,3))
###################################
## INFORMATION FOR MASS
###################################
BLOCK MASS #      mass spectrum
      1000001 2.612049e+03 # sd_1
      1000003 2.621973e+03 # sd_2
      1000005 2.631802e+03 # sd_3
      2000001 2.632101e+03 # sd_4
      2000003 2.651679e+03 # sd_5
      2000005 2.673529e+03 # sd_6
      1000002 2.480489e+03 # su_1
      1000004 2.570945e+03 # su_2
      1000006 2.570945e+03 # su_3
      2000002 2.630970e+03 # su_4
      2000004 2.650558e+03 # su_5
      2000006 2.714549e+03 # su_6
      1000011 1.414793e+03 # se_1
      1000013 1.418863e+03 # se_2
      1000015 1.418949e+03 # se_3
      2000011 1.419230e+03 # se_4
      2000013 1.419306e+03 # se_5
      2000015 1.420648e+03 # se_6
      1000012 1.415754e+03 # sv_1
      1000014 1.416668e+03 # sv_2
      1000016 1.416671e+03 # sv_3
      25 1.253953e+02 # hh_1
      35 1.272231e+03 # hh_2
      36 1.272212e+03 # ah_2
      37 1.281038e+03 # hpm_2
      22 0.000000e+00 # vp
      23 9.118870e+01 # vz
      21 0.000000e+00 # vg
      24 7.983012e+01 # vwm
      1 5.000000e-03 # fd_1
      3 9.500000e-02 # fd_2
      5 4.180000e+00 # fd_3
      2 2.500000e-03 # fu_1
      4 1.270000e+00 # fu_2
      6 1.720000e+02 # fu_3
      11 5.109989e-04 # fe_1
      13 1.056584e-01 # fe_2
      15 1.776690e+00 # fe_3
      12 0.000000e+00 # fv_1
      14 0.000000e+00 # fv_2
      16 0.000000e+00 # fv_3
      1000021 3.767031e+03 # glu
      1000022 1.534976e+02 # chi_1
      1000023 1.579779e+02 # chi_2
      1000025 1.207526e+03 # chi_3
      1000035 1.932528e+03 # chi_4
      1000024 1.559784e+02 # cha_1
      1000037 1.932723e+03 # cha_2
###################################
## INFORMATION FOR LSP
###################################
BLOCK LSP #      lsp and nlsp
      1 1.000022e+06 # lsp
      2 1.000024e+06 # nlsp
###################################
## INFORMATION FOR DSQMIX
###################################
BLOCK DSQMIX Q= 1.000000e+03 #      ()
      1 1 9.706723e-05 # real(zd(1,1),dp)
      1 2 1.403858e-09 # real(zd(1,2),dp)
      1 3 -3.546134e-07 # real(zd(1,3),dp)
      1 4 1.000000e+00 # real(zd(1,4),dp)
      1 5 6.337378e-12 # real(zd(1,5),dp)
      1 6 -9.375307e-09 # real(zd(1,6),dp)
      2 1 3.536858e-03 # real(zd(2,1),dp)
      2 2 -8.202146e-03 # real(zd(2,2),dp)
      2 3 -9.993679e-01 # real(zd(2,3),dp)
      2 4 -6.980133e-07 # real(zd(2,4),dp)
      2 5 -3.213970e-05 # real(zd(2,5),dp)
      2 6 -3.440979e-02 # real(zd(2,6),dp)
      3 1 -4.122155e-05 # real(zd(3,1),dp)
      3 2 -1.862730e-03 # real(zd(3,2),dp)
      3 3 4.722687e-05 # real(zd(3,3),dp)
      3 4 4.026982e-09 # real(zd(3,4),dp)
      3 5 -9.999983e-01 # real(zd(3,5),dp)
      3 6 2.185939e-06 # real(zd(3,6),dp)
      4 1 9.999937e-01 # real(zd(4,1),dp)
      4 2 1.164334e-04 # real(zd(4,2),dp)
      4 3 3.533081e-03 # real(zd(4,3),dp)
      4 4 -9.706537e-05 # real(zd(4,4),dp)
      4 5 -4.127107e-05 # real(zd(4,5),dp)
      4 6 1.463134e-04 # real(zd(4,6),dp)
      5 1 -8.749492e-05 # real(zd(5,1),dp)
      5 2 9.999646e-01 # real(zd(5,2),dp)
      5 3 -8.186634e-03 # real(zd(5,3),dp)
      5 4 4.180378e-09 # real(zd(5,4),dp)
      5 5 -1.863052e-03 # real(zd(5,5),dp)
      5 6 -5.999906e-04 # real(zd(5,6),dp)
      6 1 -2.467694e-05 # real(zd(6,1),dp)
      6 2 3.179106e-04 # real(zd(6,2),dp)
      6 3 -3.441385e-02 # real(zd(6,3),dp)
      6 4 -4.389819e-10 # real(zd(6,4),dp)
      6 5 -3.177836e-08 # real(zd(6,5),dp)
      6 6 9.994076e-01 # real(zd(6,6),dp)
###################################
## INFORMATION FOR IMDSQMIX
###################################
BLOCK IMDSQMIX Q= 1.000000e+03 #      ()
      1 1 0.000000e+00 # aimag(zd(1,1))
      1 2 0.000000e+00 # aimag(zd(1,2))
      1 3 0.000000e+00 # aimag(zd(1,3))
      1 4 0.000000e+00 # aimag(zd(1,4))
      1 5 0.000000e+00 # aimag(zd(1,5))
      1 6 0.000000e+00 # aimag(zd(1,6))
      2 1 0.000000e+00 # aimag(zd(2,1))
      2 2 0.000000e+00 # aimag(zd(2,2))
      2 3 0.000000e+00 # aimag(zd(2,3))
      2 4 0.000000e+00 # aimag(zd(2,4))
      2 5 0.000000e+00 # aimag(zd(2,5))
      2 6 0.000000e+00 # aimag(zd(2,6))
      3 1 0.000000e+00 # aimag(zd(3,1))
      3 2 0.000000e+00 # aimag(zd(3,2))
      3 3 0.000000e+00 # aimag(zd(3,3))
      3 4 0.000000e+00 # aimag(zd(3,4))
      3 5 0.000000e+00 # aimag(zd(3,5))
      3 6 0.000000e+00 # aimag(zd(3,6))
      4 1 0.000000e+00 # aimag(zd(4,1))
      4 2 0.000000e+00 # aimag(zd(4,2))
      4 3 0.000000e+00 # aimag(zd(4,3))
      4 4 0.000000e+00 # aimag(zd(4,4))
      4 5 0.000000e+00 # aimag(zd(4,5))
      4 6 0.000000e+00 # aimag(zd(4,6))
      5 1 0.000000e+00 # aimag(zd(5,1))
      5 2 0.000000e+00 # aimag(zd(5,2))
      5 3 0.000000e+00 # aimag(zd(5,3))
      5 4 0.000000e+00 # aimag(zd(5,4))
      5 5 0.000000e+00 # aimag(zd(5,5))
      5 6 0.000000e+00 # aimag(zd(5,6))
      6 1 0.000000e+00 # aimag(zd(6,1))
      6 2 0.000000e+00 # aimag(zd(6,2))
      6 3 0.000000e+00 # aimag(zd(6,3))
      6 4 0.000000e+00 # aimag(zd(6,4))
      6 5 0.000000e+00 # aimag(zd(6,5))
      6 6 0.000000e+00 # aimag(zd(6,6))
###################################
## INFORMATION FOR SNUMIX
###################################
BLOCK SNUMIX Q= 1.000000e+03 #      ()
      1 1 0.000000e+00 # real(zv(1,1),dp)
      1 2 0.000000e+00 # real(zv(1,2),dp)
      1 3 1.000000e+00 # real(zv(1,3),dp)
      2 1 0.000000e+00 # real(zv(2,1),dp)
      2 2 1.000000e+00 # real(zv(2,2),dp)
      2 3 0.000000e+00 # real(zv(2,3),dp)
      3 1 1.000000e+00 # real(zv(3,1),dp)
      3 2 0.000000e+00 # real(zv(3,2),dp)
      3 3 0.000000e+00 # real(zv(3,3),dp)
###################################
## INFORMATION FOR IMSNUMIX
###################################
BLOCK IMSNUMIX Q= 1.000000e+03 #      ()
      1 1 0.000000e+00 # aimag(zv(1,1))
      1 2 0.000000e+00 # aimag(zv(1,2))
      1 3 0.000000e+00 # aimag(zv(1,3))
      2 1 0.000000e+00 # aimag(zv(2,1))
      2 2 0.000000e+00 # aimag(zv(2,2))
      2 3 0.000000e+00 # aimag(zv(2,3))
      3 1 0.000000e+00 # aimag(zv(3,1))
      3 2 0.000000e+00 # aimag(zv(3,2))
      3 3 0.000000e+00 # aimag(zv(3,3))
###################################
## INFORMATION FOR USQMIX
###################################
BLOCK USQMIX Q= 1.000000e+03 #      ()
      1 1 7.629192e-05 # real(zu(1,1),dp)
      1 2 -4.624515e-04 # real(zu(1,2),dp)
      1 3 6.326801e-01 # real(zu(1,3),dp)
      1 4 -2.265691e-09 # real(zu(1,4),dp)
      1 5 -1.248373e-05 # real(zu(1,5),dp)
      1 6 -7.744131e-01 # real(zu(1,6),dp)
      2 1 1.308801e-06 # real(zu(2,1),dp)
      2 2 2.157529e-07 # real(zu(2,2),dp)
      2 3 -3.207360e-10 # real(zu(2,3),dp)
      2 4 -1.000000e+00 # real(zu(2,4),dp)
      2 5 2.208068e-05 # real(zu(2,5),dp)
      2 6 2.307805e-09 # real(zu(2,6),dp)
      3 1 -1.513422e-04 # real(zu(3,1),dp)
      3 2 4.884991e-04 # real(zu(3,2),dp)
      3 3 4.252030e-08 # real(zu(3,3),dp)
      3 4 -2.208077e-05 # real(zu(3,4),dp)
      3 5 -9.999999e-01 # real(zu(3,5),dp)
      3 6 1.584835e-05 # real(zu(3,6),dp)
      4 1 -9.999996e-01 # real(zu(4,1),dp)
      4 2 -8.987237e-05 # real(zu(4,2),dp)
      4 3 7.354094e-04 # real(zu(4,3),dp)
      4 4 -1.305478e-06 # real(zu(4,4),dp)
      4 5 1.513063e-04 # real(zu(4,5),dp)
      4 6 5.023503e-04 # real(zu(4,6),dp)
      5 1 8.280039e-05 # real(zu(5,1),dp)
      5 2 -9.999690e-01 # real(zu(5,2),dp)
      5 3 -6.366872e-03 # real(zu(5,3),dp)
      5 4 -2.264344e-07 # real(zu(5,4),dp)
      5 5 -4.885698e-04 # real(zu(5,5),dp)
      5 6 -4.604446e-03 # real(zu(5,6),dp)
      6 1 -8.880161e-04 # real(zu(6,1),dp)
      6 2 7.843658e-03 # real(zu(6,2),dp)
      6 3 -7.743868e-01 # real(zu(6,3),dp)
      6 4 -8.161843e-10 # real(zu(6,4),dp)
      6 5 -6.093585e-06 # real(zu(6,5),dp)
      6 6 -6.326633e-01 # real(zu(6,6),dp)
###################################
## INFORMATION FOR IMUSQMIX
###################################
BLOCK IMUSQMIX Q= 1.000000e+03 #      ()
      1 1 0.000000e+00 # aimag(zu(1,1))
      1 2 0.000000e+00 # aimag(zu(1,2))
      1 3 0.000000e+00 # aimag(zu(1,3))
      1 4 0.000000e+00 # aimag(zu(1,4))
      1 5 0.000000e+00 # aimag(zu(1,5))
      1 6 0.000000e+00 # aimag(zu(1,6))
      2 1 0.000000e+00 # aimag(zu(2,1))
      2 2 0.000000e+00 # aimag(zu(2,2))
      2 3 0.000000e+00 # aimag(zu(2,3))
      2 4 0.000000e+00 # aimag(zu(2,4))
      2 5 0.000000e+00 # aimag(zu(2,5))
      2 6 0.000000e+00 # aimag(zu(2,6))
      3 1 0.000000e+00 # aimag(zu(3,1))
      3 2 0.000000e+00 # aimag(zu(3,2))
      3 3 0.000000e+00 # aimag(zu(3,3))
      3 4 0.000000e+00 # aimag(zu(3,4))
      3 5 0.000000e+00 # aimag(zu(3,5))
      3 6 0.000000e+00 # aimag(zu(3,6))
      4 1 0.000000e+00 # aimag(zu(4,1))
      4 2 0.000000e+00 # aimag(zu(4,2))
      4 3 0.000000e+00 # aimag(zu(4,3))
      4 4 0.000000e+00 # aimag(zu(4,4))
      4 5 0.000000e+00 # aimag(zu(4,5))
      4 6 0.000000e+00 # aimag(zu(4,6))
      5 1 0.000000e+00 # aimag(zu(5,1))
      5 2 0.000000e+00 # aimag(zu(5,2))
      5 3 0.000000e+00 # aimag(zu(5,3))
      5 4 0.000000e+00 # aimag(zu(5,4))
      5 5 0.000000e+00 # aimag(zu(5,5))
      5 6 0.000000e+00 # aimag(zu(5,6))
      6 1 0.000000e+00 # aimag(zu(6,1))
      6 2 0.000000e+00 # aimag(zu(6,2))
      6 3 0.000000e+00 # aimag(zu(6,3))
      6 4 0.000000e+00 # aimag(zu(6,4))
      6 5 0.000000e+00 # aimag(zu(6,5))
      6 6 0.000000e+00 # aimag(zu(6,6))
###################################
## INFORMATION FOR SELMIX
###################################
BLOCK SELMIX Q= 1.000000e+03 #      ()
      1 1 -0.000000e+00 # real(ze(1,1),dp)
      1 2 -0.000000e+00 # real(ze(1,2),dp)
      1 3 -6.355631e-01 # real(ze(1,3),dp)
      1 4 -0.000000e+00 # real(ze(1,4),dp)
      1 5 -0.000000e+00 # real(ze(1,5),dp)
      1 6 -7.720489e-01 # real(ze(1,6),dp)
      2 1 -0.000000e+00 # real(ze(2,1),dp)
      2 2 4.877209e-01 # real(ze(2,2),dp)
      2 3 -0.000000e+00 # real(ze(2,3),dp)
      2 4 -0.000000e+00 # real(ze(2,4),dp)
      2 5 8.729996e-01 # real(ze(2,5),dp)
      2 6 -0.000000e+00 # real(ze(2,6),dp)
      3 1 -3.993119e-03 # real(ze(3,1),dp)
      3 2 -0.000000e+00 # real(ze(3,2),dp)
      3 3 -0.000000e+00 # real(ze(3,3),dp)
      3 4 -9.999920e-01 # real(ze(3,4),dp)
      3 5 -0.000000e+00 # real(ze(3,5),dp)
      3 6 -0.000000e+00 # real(ze(3,6),dp)
      4 1 -9.999920e-01 # real(ze(4,1),dp)
      4 2 0.000000e+00 # real(ze(4,2),dp)
      4 3 0.000000e+00 # real(ze(4,3),dp)
      4 4 3.993119e-03 # real(ze(4,4),dp)
      4 5 0.000000e+00 # real(ze(4,5),dp)
      4 6 0.000000e+00 # real(ze(4,6),dp)
      5 1 0.000000e+00 # real(ze(5,1),dp)
      5 2 8.729996e-01 # real(ze(5,2),dp)
      5 3 0.000000e+00 # real(ze(5,3),dp)
      5 4 0.000000e+00 # real(ze(5,4),dp)
      5 5 -4.877209e-01 # real(ze(5,5),dp)
      5 6 0.000000e+00 # real(ze(5,6),dp)
      6 1 0.000000e+00 # real(ze(6,1),dp)
      6 2 0.000000e+00 # real(ze(6,2),dp)
      6 3 -7.720489e-01 # real(ze(6,3),dp)
      6 4 0.000000e+00 # real(ze(6,4),dp)
      6 5 0.000000e+00 # real(ze(6,5),dp)
      6 6 6.355631e-01 # real(ze(6,6),dp)
###################################
## INFORMATION FOR IMSELMIX
###################################
BLOCK IMSELMIX Q= 1.000000e+03 #      ()
      1 1 0.000000e+00 # aimag(ze(1,1))
      1 2 0.000000e+00 # aimag(ze(1,2))
      1 3 0.000000e+00 # aimag(ze(1,3))
      1 4 0.000000e+00 # aimag(ze(1,4))
      1 5 0.000000e+00 # aimag(ze(1,5))
      1 6 0.000000e+00 # aimag(ze(1,6))
      2 1 0.000000e+00 # aimag(ze(2,1))
      2 2 0.000000e+00 # aimag(ze(2,2))
      2 3 0.000000e+00 # aimag(ze(2,3))
      2 4 0.000000e+00 # aimag(ze(2,4))
      2 5 0.000000e+00 # aimag(ze(2,5))
      2 6 0.000000e+00 # aimag(ze(2,6))
      3 1 0.000000e+00 # aimag(ze(3,1))
      3 2 0.000000e+00 # aimag(ze(3,2))
      3 3 0.000000e+00 # aimag(ze(3,3))
      3 4 0.000000e+00 # aimag(ze(3,4))
      3 5 0.000000e+00 # aimag(ze(3,5))
      3 6 0.000000e+00 # aimag(ze(3,6))
      4 1 0.000000e+00 # aimag(ze(4,1))
      4 2 0.000000e+00 # aimag(ze(4,2))
      4 3 0.000000e+00 # aimag(ze(4,3))
      4 4 0.000000e+00 # aimag(ze(4,4))
      4 5 0.000000e+00 # aimag(ze(4,5))
      4 6 0.000000e+00 # aimag(ze(4,6))
      5 1 0.000000e+00 # aimag(ze(5,1))
      5 2 0.000000e+00 # aimag(ze(5,2))
      5 3 0.000000e+00 # aimag(ze(5,3))
      5 4 0.000000e+00 # aimag(ze(5,4))
      5 5 0.000000e+00 # aimag(ze(5,5))
      5 6 0.000000e+00 # aimag(ze(5,6))
      6 1 0.000000e+00 # aimag(ze(6,1))
      6 2 0.000000e+00 # aimag(ze(6,2))
      6 3 0.000000e+00 # aimag(ze(6,3))
      6 4 0.000000e+00 # aimag(ze(6,4))
      6 5 0.000000e+00 # aimag(ze(6,5))
      6 6 0.000000e+00 # aimag(ze(6,6))
###################################
## INFORMATION FOR SCALARMIX
###################################
BLOCK SCALARMIX Q= 1.000000e+03 #      ()
      1 1 -3.383905e-02 # zh(1,1)
      1 2 -9.994273e-01 # zh(1,2)
      2 1 -9.994273e-01 # zh(2,1)
      2 2 3.383905e-02 # zh(2,2)
###################################
## INFORMATION FOR PSEUDOSCALARMIX
###################################
BLOCK PSEUDOSCALARMIX Q= 1.000000e+03 #      ()
      1 1 3.331368e-02 # za(1,1)
      1 2 -9.994449e-01 # za(1,2)
      2 1 -9.994449e-01 # za(2,1)
      2 2 -3.331368e-02 # za(2,2)
###################################
## INFORMATION FOR CHARGEMIX
###################################
BLOCK CHARGEMIX Q= 1.000000e+03 #      ()
      1 1 3.331395e-02 # zp(1,1)
      1 2 -9.994449e-01 # zp(1,2)
      2 1 -9.994449e-01 # zp(2,1)
      2 2 -3.331395e-02 # zp(2,2)
###################################
## INFORMATION FOR NMIX
###################################
BLOCK NMIX Q= 1.000000e+03 #      ()
      1 1 3.027781e-02 # real(zn(1,1),dp)
      1 2 -3.183109e-02 # real(zn(1,2),dp)
      1 3 7.119148e-01 # real(zn(1,3),dp)
      1 4 -7.008905e-01 # real(zn(1,4),dp)
      2 1 0.000000e+00 # real(zn(2,1),dp)
      2 2 -0.000000e+00 # real(zn(2,2),dp)
      2 3 -0.000000e+00 # real(zn(2,3),dp)
      2 4 -0.000000e+00 # real(zn(2,4),dp)
      3 1 9.992920e-01 # real(zn(3,1),dp)
      3 2 4.283103e-03 # real(zn(3,2),dp)
      3 3 -5.981882e-03 # real(zn(3,3),dp)
      3 4 3.689799e-02 # real(zn(3,4),dp)
      4 1 2.746365e-03 # real(zn(4,1),dp)
      4 2 -9.991506e-01 # real(zn(4,2),dp)
      4 3 -4.560504e-03 # real(zn(4,3),dp)
      4 4 4.086304e-02 # real(zn(4,4),dp)
###################################
## INFORMATION FOR IMNMIX
###################################
BLOCK IMNMIX Q= 1.000000e+03 #      ()
      1 1 0.000000e+00 # aimag(zn(1,1))
      1 2 0.000000e+00 # aimag(zn(1,2))
      1 3 0.000000e+00 # aimag(zn(1,3))
      1 4 0.000000e+00 # aimag(zn(1,4))
      2 1 2.216531e-02 # aimag(zn(2,1))
      2 2 -2.581793e-02 # aimag(zn(2,2))
      2 3 -7.022256e-01 # aimag(zn(2,3))
      2 4 -7.111409e-01 # aimag(zn(2,4))
      3 1 0.000000e+00 # aimag(zn(3,1))
      3 2 0.000000e+00 # aimag(zn(3,2))
      3 3 0.000000e+00 # aimag(zn(3,3))
      3 4 0.000000e+00 # aimag(zn(3,4))
      4 1 0.000000e+00 # aimag(zn(4,1))
      4 2 0.000000e+00 # aimag(zn(4,2))
      4 3 0.000000e+00 # aimag(zn(4,3))
      4 4 0.000000e+00 # aimag(zn(4,4))
###################################
## INFORMATION FOR UMIX
###################################
BLOCK UMIX Q= 1.000000e+03 #      ()
      1 1 6.443735e-03 # real(um(1,1),dp)
      1 2 -9.999792e-01 # real(um(1,2),dp)
      2 1 -9.999792e-01 # real(um(2,1),dp)
      2 2 -6.443735e-03 # real(um(2,2),dp)
###################################
## INFORMATION FOR IMUMIX
###################################
BLOCK IMUMIX Q= 1.000000e+03 #      ()
      1 1 -0.000000e+00 # aimag(um(1,1))
      1 2 -0.000000e+00 # aimag(um(1,2))
      2 1 -0.000000e+00 # aimag(um(2,1))
      2 2 -0.000000e+00 # aimag(um(2,2))
###################################
## INFORMATION FOR VMIX
###################################
BLOCK VMIX Q= 1.000000e+03 #      ()
      1 1 5.774073e-02 # real(up(1,1),dp)
      1 2 -9.983316e-01 # real(up(1,2),dp)
      2 1 -9.983316e-01 # real(up(2,1),dp)
      2 2 -5.774073e-02 # real(up(2,2),dp)
###################################
## INFORMATION FOR IMVMIX
###################################
BLOCK IMVMIX Q= 1.000000e+03 #      ()
      1 1 0.000000e+00 # aimag(up(1,1))
      1 2 0.000000e+00 # aimag(up(1,2))
      2 1 0.000000e+00 # aimag(up(2,1))
      2 2 0.000000e+00 # aimag(up(2,2))
###################################
## INFORMATION FOR UELMIX
###################################
BLOCK UELMIX Q= 1.000000e+03 #      ()
      1 1 1.000000e+00 # real(zel(1,1),dp)
      1 2 0.000000e+00 # real(zel(1,2),dp)
      1 3 0.000000e+00 # real(zel(1,3),dp)
      2 1 0.000000e+00 # real(zel(2,1),dp)
      2 2 1.000000e+00 # real(zel(2,2),dp)
      2 3 0.000000e+00 # real(zel(2,3),dp)
      3 1 0.000000e+00 # real(zel(3,1),dp)
      3 2 0.000000e+00 # real(zel(3,2),dp)
      3 3 1.000000e+00 # real(zel(3,3),dp)
###################################
## INFORMATION FOR IMUELMIX
###################################
BLOCK IMUELMIX Q= 1.000000e+03 #      ()
      1 1 0.000000e+00 # aimag(zel(1,1))
      1 2 0.000000e+00 # aimag(zel(1,2))
      1 3 0.000000e+00 # aimag(zel(1,3))
      2 1 0.000000e+00 # aimag(zel(2,1))
      2 2 0.000000e+00 # aimag(zel(2,2))
      2 3 0.000000e+00 # aimag(zel(2,3))
      3 1 0.000000e+00 # aimag(zel(3,1))
      3 2 0.000000e+00 # aimag(zel(3,2))
      3 3 0.000000e+00 # aimag(zel(3,3))
###################################
## INFORMATION FOR UERMIX
###################################
BLOCK UERMIX Q= 1.000000e+03 #      ()
      1 1 1.000000e+00 # real(zer(1,1),dp)
      1 2 0.000000e+00 # real(zer(1,2),dp)
      1 3 0.000000e+00 # real(zer(1,3),dp)
      2 1 0.000000e+00 # real(zer(2,1),dp)
      2 2 1.000000e+00 # real(zer(2,2),dp)
      2 3 0.000000e+00 # real(zer(2,3),dp)
      3 1 0.000000e+00 # real(zer(3,1),dp)
      3 2 0.000000e+00 # real(zer(3,2),dp)
      3 3 1.000000e+00 # real(zer(3,3),dp)
###################################
## INFORMATION FOR IMUERMIX
###################################
BLOCK IMUERMIX Q= 1.000000e+03 #      ()
      1 1 0.000000e+00 # aimag(zer(1,1))
      1 2 0.000000e+00 # aimag(zer(1,2))
      1 3 0.000000e+00 # aimag(zer(1,3))
      2 1 0.000000e+00 # aimag(zer(2,1))
      2 2 0.000000e+00 # aimag(zer(2,2))
      2 3 0.000000e+00 # aimag(zer(2,3))
      3 1 0.000000e+00 # aimag(zer(3,1))
      3 2 0.000000e+00 # aimag(zer(3,2))
      3 3 0.000000e+00 # aimag(zer(3,3))
###################################
## INFORMATION FOR UDLMIX
###################################
BLOCK UDLMIX Q= 1.000000e+03 #      ()
      1 1 1.000000e+00 # real(zdl(1,1),dp)
      1 2 4.498214e-07 # real(zdl(1,2),dp)
      1 3 4.783400e-05 # real(zdl(1,3),dp)
      2 1 -4.340385e-07 # real(zdl(2,1),dp)
      2 2 9.999999e-01 # real(zdl(2,2),dp)
      2 3 -3.299502e-04 # real(zdl(2,3),dp)
      3 1 -4.783415e-05 # real(zdl(3,1),dp)
      3 2 3.299502e-04 # real(zdl(3,2),dp)
      3 3 9.999999e-01 # real(zdl(3,3),dp)
###################################
## INFORMATION FOR IMUDLMIX
###################################
BLOCK IMUDLMIX Q= 1.000000e+03 #      ()
      1 1 0.000000e+00 # aimag(zdl(1,1))
      1 2 0.000000e+00 # aimag(zdl(1,2))
      1 3 0.000000e+00 # aimag(zdl(1,3))
      2 1 -0.000000e+00 # aimag(zdl(2,1))
      2 2 0.000000e+00 # aimag(zdl(2,2))
      2 3 -0.000000e+00 # aimag(zdl(2,3))
      3 1 -0.000000e+00 # aimag(zdl(3,1))
      3 2 0.000000e+00 # aimag(zdl(3,2))
      3 3 0.000000e+00 # aimag(zdl(3,3))
###################################
## INFORMATION FOR UDRMIX
###################################
BLOCK UDRMIX Q= 1.000000e+03 #      ()
      1 1 1.000000e+00 # real(zdr(1,1),dp)
      1 2 4.639331e-08 # real(zdr(1,2),dp)
      1 3 3.849345e-08 # real(zdr(1,3),dp)
      2 1 -4.639312e-08 # real(zdr(2,1),dp)
      2 2 1.000000e+00 # real(zdr(2,2),dp)
      2 3 -5.045394e-06 # real(zdr(2,3),dp)
      3 1 -3.849368e-08 # real(zdr(3,1),dp)
      3 2 5.045394e-06 # real(zdr(3,2),dp)
      3 3 1.000000e+00 # real(zdr(3,3),dp)
###################################
## INFORMATION FOR IMUDRMIX
###################################
BLOCK IMUDRMIX Q= 1.000000e+03 #      ()
      1 1 0.000000e+00 # aimag(zdr(1,1))
      1 2 0.000000e+00 # aimag(zdr(1,2))
      1 3 0.000000e+00 # aimag(zdr(1,3))
      2 1 0.000000e+00 # aimag(zdr(2,1))
      2 2 0.000000e+00 # aimag(zdr(2,2))
      2 3 0.000000e+00 # aimag(zdr(2,3))
      3 1 0.000000e+00 # aimag(zdr(3,1))
      3 2 0.000000e+00 # aimag(zdr(3,2))
      3 3 0.000000e+00 # aimag(zdr(3,3))
###################################
## INFORMATION FOR UULMIX
###################################
BLOCK UULMIX Q= 1.000000e+03 #      ()
      1 1 9.741670e-01 # real(zul(1,1),dp)
      1 2 2.258028e-01 # real(zul(1,2),dp)
      1 3 3.439594e-03 # real(zul(1,3),dp)
      2 1 -2.257521e-01 # real(zul(2,1),dp)
      2 2 9.733243e-01 # real(zul(2,2),dp)
      2 3 4.093655e-02 # real(zul(2,3),dp)
      3 1 5.895749e-03 # real(zul(3,1),dp)
      3 2 -4.065553e-02 # real(zul(3,2),dp)
      3 3 9.991558e-01 # real(zul(3,3),dp)
###################################
## INFORMATION FOR IMUULMIX
###################################
BLOCK IMUULMIX Q= 1.000000e+03 #      ()
      1 1 -0.000000e+00 # aimag(zul(1,1))
      1 2 -0.000000e+00 # aimag(zul(1,2))
      1 3 -0.000000e+00 # aimag(zul(1,3))
      2 1 0.000000e+00 # aimag(zul(2,1))
      2 2 0.000000e+00 # aimag(zul(2,2))
      2 3 0.000000e+00 # aimag(zul(2,3))
      3 1 0.000000e+00 # aimag(zul(3,1))
      3 2 -0.000000e+00 # aimag(zul(3,2))
      3 3 0.000000e+00 # aimag(zul(3,3))
###################################
## INFORMATION FOR UURMIX
###################################
BLOCK UURMIX Q= 1.000000e+03 #      ()
      1 1 1.000000e+00 # real(zur(1,1),dp)
      1 2 1.001839e-08 # real(zur(1,2),dp)
      1 3 -3.795752e-10 # real(zur(1,3),dp)
      2 1 -1.001839e-08 # real(zur(2,1),dp)
      2 2 1.000000e+00 # real(zur(2,2),dp)
      2 3 -2.245716e-06 # real(zur(2,3),dp)
      3 1 3.795527e-10 # real(zur(3,1),dp)
      3 2 2.245716e-06 # real(zur(3,2),dp)
      3 3 1.000000e+00 # real(zur(3,3),dp)
###################################
## INFORMATION FOR IMUURMIX
###################################
BLOCK IMUURMIX Q= 1.000000e+03 #      ()
      1 1 0.000000e+00 # aimag(zur(1,1))
      1 2 0.000000e+00 # aimag(zur(1,2))
      1 3 0.000000e+00 # aimag(zur(1,3))
      2 1 0.000000e+00 # aimag(zur(2,1))
      2 2 0.000000e+00 # aimag(zur(2,2))
      2 3 0.000000e+00 # aimag(zur(2,3))
      3 1 0.000000e+00 # aimag(zur(3,1))
      3 2 0.000000e+00 # aimag(zur(3,2))
      3 3 0.000000e+00 # aimag(zur(3,3))
###################################
## INFORMATION FOR SPHENO
###################################
BLOCK SPHENO #      spheno internal parameters
      1 -1.000000e+00 # errorlevel
      2 0.000000e+00 # spa_conventions
      11 1.000000e+00 # branching ratios
      13 1.000000e+00 # 3 body decays
      31 1.000000e+03 # gut scale
      33 1.000000e+03 # renormalization scale
      34 1.000000e-04 # precision
      35 4.000000e+01 # iterations
      38 2.000000e+00 # rge level
      40 7.297353e-03 # alpha
      41 2.495200e+00 # gamma_z
      42 2.060000e+00 # gamma_w
      50 1.000000e+00 # rotate negative fermion masses
      51 1.000000e+00 # switch to sckm matrix
      52 0.000000e+00 # ignore negative masses
      53 0.000000e+00 # ignore negative masses at mz
      55 1.000000e+00 # calculate one loop masses
      56 1.000000e+00 # calculate two-loop higgs masses
      57 0.000000e+00 # calculate low energy
      60 1.000000e+00 # include kinetic mixing
      65 1.000000e+00 # solution of tadpole equation
      8 3.000000e+00 # two-loop method: diagrammatic
      9 1.000000e+00 # gauge-less limit
      400 1.000000e-01 # step-size for purely-numerical methode for 2-loop calculation
      401 1.000000e-03 # step-size for semi-analytical methode for 2-loop calculation
      410 0.000000e+00 # indicative error in numerical derivation
###################################
## INFORMATION FOR HIGGSLHC7
###################################
BLOCK HIGGSLHC7 #      higgs production cross section at lhc7 [pb] (rescaled sm values from hxswg)
      1 25 1.525296e+01 # gluon fusion
      2 25 1.204627e+00 # vector boson fusion
      3 25 5.348164e-01 # w-h production
      4 25 3.132356e-01 # z-h production
      5 25 8.529829e-02 # t-t-h production
###################################
## INFORMATION FOR HIGGSLHC8
###################################
BLOCK HIGGSLHC8 #      higgs production cross section at lhc8 [pb] (rescaled sm values from hxswg)
      1 25 1.941902e+01 # gluon fusion
      2 25 1.553494e+00 # vector boson fusion
      3 25 6.864851e-01 # w-h production
      4 25 3.912679e-01 # z-h production
      5 25 1.291373e-01 # t-t-h production
###################################
## INFORMATION FOR HIGGSLHC13
###################################
BLOCK HIGGSLHC13 #      higgs production cross section at lhc13 [pb] (rescaled sm values from sushi 1.5.0)
      1 25 4.539066e+01 # gluon fusion
###################################
## INFORMATION FOR HIGGSLHC14
###################################
BLOCK HIGGSLHC14 #      higgs production cross section at lhc14 [pb] (rescaled sm values from sushi 1.5.0)
      1 25 5.111827e+01 # gluon fusion
###################################
## INFORMATION FOR HIGGSFCC100
###################################
BLOCK HIGGSFCC100 #      higgs production cross section at fcc-pp [pb] (rescaled sm values from sushi 1.5.0)
      1 25 7.540170e+02 # gluon fusion
###################################
## INFORMATION FOR EFFHIGGSCOUPLINGS
###################################
BLOCK EFFHIGGSCOUPLINGS #      values of loop-induced couplings
      25 22 22 3.529990e-05 # h-photon-photon
      25 21 21 6.423974e-05 # h-gluon-gluon
      25 22 23 0.000000e+00 # h-photon-z (not yet calculated by spheno)
      35 22 22 2.457907e-07 # h-photon-photon
      35 21 21 1.406480e-06 # h-gluon-gluon
      35 22 23 0.000000e+00 # h-photon-z (not yet calculated by spheno)
      36 22 22 4.900211e-07 # a-photon-photon
      36 21 21 2.508130e-06 # a-gluon-gluon
      36 22 23 0.000000e+00 # a-photon-z (not yet calculated by spheno)
###################################
## INFORMATION FOR SPHENOLOWENERGY
###################################
BLOCK SPHENOLOWENERGY #      low energy observables
      1 0.000000e+00 # t-parameter (1-loop bsm)
      2 0.000000e+00 # s-parameter (1-loop bsm)
      3 0.000000e+00 # u-parameter (1-loop bsm)
      20 0.000000e+00 # (g-2)_e
      21 0.000000e+00 # (g-2)_mu
      22 0.000000e+00 # (g-2)_tau
      23 0.000000e+00 # edm(e)
      24 0.000000e+00 # edm(mu)
      25 0.000000e+00 # edm(tau)
      39 0.000000e+00 # delta(rho)
###################################
## INFORMATION FOR FLAVORKITQFV
###################################
BLOCK FLAVORKITQFV #      quark flavor violating observables
      200 0.000000e+00 # br(b->x_s gamma)
      201 0.000000e+00 # br(b->x_s gamma)/br(b->x_s gamma)_sm
      300 0.000000e+00 # br(d->mu nu)
      301 0.000000e+00 # br(d->mu nu)/br(d->mu nu)_sm
      400 0.000000e+00 # br(ds->mu nu)
      401 0.000000e+00 # br(ds->mu nu)/br(ds->mu nu)_sm
      402 0.000000e+00 # br(ds->tau nu)
      403 0.000000e+00 # br(ds->tau nu)/br(ds->tau nu)_sm
      500 0.000000e+00 # br(b->mu nu)
      501 0.000000e+00 # br(b->mu nu)/br(b->mu nu)_sm
      502 0.000000e+00 # br(b->tau nu)
      503 0.000000e+00 # br(b->tau nu)/br(b->tau nu)_sm
      600 0.000000e+00 # br(k->mu nu)
      601 0.000000e+00 # br(k->mu nu)/br(k->mu nu)_sm
      602 0.000000e+00 # r_k = br(k->e nu)/(k->mu nu)
      603 0.000000e+00 # r_k^sm = br(k->e nu)_sm/(k->mu nu)_sm
      1900 0.000000e+00 # delta(m_bs)
      1901 0.000000e+00 # delta(m_bs)/delta(m_bs)_sm
      1902 0.000000e+00 # delta(m_bd)
      1903 0.000000e+00 # delta(m_bd)/delta(m_bd)_sm
      4000 0.000000e+00 # br(b^0_d->e e)
      4001 0.000000e+00 # br(b^0_d->e e)/br(b^0_d->e e)_sm
      4002 0.000000e+00 # br(b^0_s->e e)
      4003 0.000000e+00 # br(b^0_s->e e)/br(b^0_s->e e)_sm
      4004 0.000000e+00 # br(b^0_d->mu mu)
      4005 0.000000e+00 # br(b^0_d->mu mu)/br(b^0_d->mu mu)_sm
      4006 0.000000e+00 # br(b^0_s->mu mu)
      4007 0.000000e+00 # br(b^0_s->mu mu)/br(b^0_s->mu mu)_sm
      4008 0.000000e+00 # br(b^0_d->tau tau)
      4009 0.000000e+00 # br(b^0_d->tau tau)/br(b^0_d->tau tau)_sm
      4010 0.000000e+00 # br(b^0_s->tau tau)
      4011 0.000000e+00 # br(b^0_s->tau tau)/br(b^0_s->tau tau)_sm
      5000 0.000000e+00 # br(b-> s e e)
      5001 0.000000e+00 # br(b-> s e e)/br(b-> s e e)_sm
      5002 0.000000e+00 # br(b-> s mu mu)
      5003 0.000000e+00 # br(b-> s mu mu)/br(b-> s mu mu)_sm
      6000 0.000000e+00 # br(b -> k mu mu)
      6001 0.000000e+00 # br(b -> k mu mu)/br(b -> k mu mu)_sm
      6002 0.000000e+00 # br(b -> k mu mu)
      6003 0.000000e+00 # br(b -> k mu mu)/br(b -> k mu mu)_sm
      7000 0.000000e+00 # br(b->s nu nu)
      7001 0.000000e+00 # br(b->s nu nu)/br(b->s nu nu)_sm
      7002 0.000000e+00 # br(b->d nu nu)
      7003 0.000000e+00 # br(b->d nu nu)/br(b->d nu nu)_sm
      8000 0.000000e+00 # br(k^+ -> pi^+ nu nu)
      8001 0.000000e+00 # br(k^+ -> pi^+ nu nu)/br(k^+ -> pi^+ nu nu)_sm
      8002 0.000000e+00 # br(k_l -> pi^0 nu nu)
      8003 0.000000e+00 # br(k_l -> pi^0 nu nu)/br(k_l -> pi^0 nu nu)_sm
      8004 0.000000e+00 # br(k^0_l -> e mu)
      8005 0.000000e+00 # br(k^0_l -> e mu)/br(k^0_l -> e mu)_sm
      9100 0.000000e+00 # delta(m_k)
      9102 0.000000e+00 # delta(m_k)/delta(m_k)_sm
      9103 0.000000e+00 # epsilon_k
      9104 0.000000e+00 # epsilon_k/epsilon_k^sm
###################################
## INFORMATION FOR FLAVORKITLFV
###################################
BLOCK FLAVORKITLFV #      lepton flavor violating observables
      701 0.000000e+00 # br(mu->e gamma)
      702 0.000000e+00 # br(tau->e gamma)
      703 0.000000e+00 # br(tau->mu gamma)
      800 0.000000e+00 # cr(mu-e, al)
      801 0.000000e+00 # cr(mu-e, ti)
      802 0.000000e+00 # cr(mu-e, sr)
      803 0.000000e+00 # cr(mu-e, sb)
      804 0.000000e+00 # cr(mu-e, au)
      805 0.000000e+00 # cr(mu-e, pb)
      901 0.000000e+00 # br(mu->3e)
      902 0.000000e+00 # br(tau->3e)
      903 0.000000e+00 # br(tau->3mu)
      904 0.000000e+00 # br(tau- -> e- mu+ mu-)
      905 0.000000e+00 # br(tau- -> mu- e+ e-)
      906 0.000000e+00 # br(tau- -> e+ mu- mu-)
      907 0.000000e+00 # br(tau- -> mu+ e- e-)
      1001 0.000000e+00 # br(z->e mu)
      1002 0.000000e+00 # br(z->e tau)
      1003 0.000000e+00 # br(z->mu tau)
      1101 0.000000e+00 # br(h->e mu)
      1102 0.000000e+00 # br(h->e tau)
      1103 0.000000e+00 # br(h->mu tau)
      2001 0.000000e+00 # br(tau->e pi)
      2002 0.000000e+00 # br(tau->e eta)
      2003 0.000000e+00 # br(tau->e eta')
      2004 0.000000e+00 # br(tau->mu pi)
      2005 0.000000e+00 # br(tau->mu eta)
      2006 0.000000e+00 # br(tau->mu eta')
###################################
## INFORMATION FOR FWCOEF
###################################
BLOCK FWCOEF Q= 1.600000e+02 #      wilson coefficients at scale q
      305 4422 0 0 0.000000e+00 # coeffc7sm
      305 4422 0 2 0.000000e+00 # coeffc7
      305 4322 0 2 0.000000e+00 # coeffc7p
      305 4422 0 1 0.000000e+00 # coeffc7np
      305 4322 0 1 0.000000e+00 # coeffc7pnp
      305 6421 0 0 0.000000e+00 # coeffc8sm
      305 6421 0 2 0.000000e+00 # coeffc8
      305 6321 0 2 0.000000e+00 # coeffc8p
      305 6421 0 1 0.000000e+00 # coeffc8np
      305 6321 0 1 0.000000e+00 # coeffc8pnp
      3051111 4133 0 0 0.000000e+00 # coeffc9eesm
      3051111 4133 0 2 0.000000e+00 # coeffc9ee
      3051111 4233 0 2 0.000000e+00 # coeffc9pee
      3051111 4133 0 1 0.000000e+00 # coeffc9eenp
      3051111 4233 0 1 0.000000e+00 # coeffc9peenp
      3051111 4137 0 0 0.000000e+00 # coeffc10eesm
      3051111 4137 0 2 0.000000e+00 # coeffc10ee
      3051111 4237 0 2 0.000000e+00 # coeffc10pee
      3051111 4137 0 1 0.000000e+00 # coeffc10eenp
      3051111 4237 0 1 0.000000e+00 # coeffc10peenp
      3051313 4133 0 0 0.000000e+00 # coeffc9mumusm
      3051313 4133 0 2 0.000000e+00 # coeffc9mumu
      3051313 4233 0 2 0.000000e+00 # coeffc9pmumu
      3051313 4133 0 1 0.000000e+00 # coeffc9mumunp
      3051313 4233 0 1 0.000000e+00 # coeffc9pmumunp
      3051313 4137 0 0 0.000000e+00 # coeffc10mumusm
      3051313 4137 0 2 0.000000e+00 # coeffc10mumu
      3051313 4237 0 2 0.000000e+00 # coeffc10pmumu
      3051313 4137 0 1 0.000000e+00 # coeffc10mumunp
      3051313 4237 0 1 0.000000e+00 # coeffc10pmumunp
      3051212 4141 0 0 0.000000e+00 # coeffclnu1nu1sm
      3051212 4141 0 2 0.000000e+00 # coeffclnu1nu1
      3051212 4241 0 2 0.000000e+00 # coeffclpnu1nu1
      3051212 4141 0 1 0.000000e+00 # coeffclnu1nu1np
      3051212 4241 0 1 0.000000e+00 # coeffclpnu1nu1np
      3051414 4141 0 0 0.000000e+00 # coeffclnu2nu2sm
      3051414 4141 0 2 0.000000e+00 # coeffclnu2nu2
      3051414 4241 0 2 0.000000e+00 # coeffclpnu2nu2
      3051414 4141 0 1 0.000000e+00 # coeffclnu2nu2np
      3051414 4241 0 1 0.000000e+00 # coeffclpnu2nu2np
      3051616 4141 0 0 0.000000e+00 # coeffclnu3nu3sm
      3051616 4141 0 2 0.000000e+00 # coeffclnu3nu3
      3051616 4241 0 2 0.000000e+00 # coeffclpnu3nu3
      3051616 4141 0 1 0.000000e+00 # coeffclnu3nu3np
      3051616 4241 0 1 0.000000e+00 # coeffclpnu3nu3np
      3051212 4142 0 0 0.000000e+00 # coeffcrnu1nu1sm
      3051212 4142 0 2 0.000000e+00 # coeffcrnu1nu1
      3051212 4242 0 2 0.000000e+00 # coeffcrpnu1nu1
      3051212 4142 0 1 0.000000e+00 # coeffcrnu1nu1np
      3051212 4242 0 1 0.000000e+00 # coeffcrpnu1nu1np
      3051414 4142 0 0 0.000000e+00 # coeffcrnu2nu2sm
      3051414 4142 0 2 0.000000e+00 # coeffcrnu2nu2
      3051414 4242 0 2 0.000000e+00 # coeffcrpnu2nu2
      3051414 4142 0 1 0.000000e+00 # coeffcrnu2nu2np
      3051414 4242 0 1 0.000000e+00 # coeffcrpnu2nu2np
      3051616 4142 0 0 0.000000e+00 # coeffcrnu3nu3sm
      3051616 4142 0 2 0.000000e+00 # coeffcrnu3nu3
      3051616 4242 0 2 0.000000e+00 # coeffcrpnu3nu3
      3051616 4142 0 1 0.000000e+00 # coeffcrnu3nu3np
      3051616 4242 0 1 0.000000e+00 # coeffcrpnu3nu3np
      1030103 3131 0 2 0.000000e+00 # coeffkk_sll
      1030103 3232 0 2 0.000000e+00 # coeffkk_srr
      1030103 3132 0 2 0.000000e+00 # coeffkk_slr
      1030103 4141 0 2 0.000000e+00 # coeffkk_vll
      1030103 4242 0 2 0.000000e+00 # coeffkk_vrr
      1030103 4142 0 2 0.000000e+00 # coeffkk_vlr
      1030103 4343 0 2 0.000000e+00 # coeffkk_tll
      1030103 4444 0 2 0.000000e+00 # coeffkk_trr
      1050105 3131 0 2 0.000000e+00 # coeffbb_sll
      1050105 3232 0 2 0.000000e+00 # coeffbb_srr
      1050105 3132 0 2 0.000000e+00 # coeffbb_slr
      1050105 4141 0 2 0.000000e+00 # coeffbb_vll
      1050105 4242 0 2 0.000000e+00 # coeffbb_vrr
      1050105 4142 0 2 0.000000e+00 # coeffbb_vlr
      1050105 4343 0 2 0.000000e+00 # coeffbb_tll
      1050105 4444 0 2 0.000000e+00 # coeffbb_trr
      3050305 3131 0 2 0.000000e+00 # coeffbsbs_sll
      3050305 3232 0 2 0.000000e+00 # coeffbsbs_srr
      3050305 3132 0 2 0.000000e+00 # coeffbsbs_slr
      3050305 4141 0 2 0.000000e+00 # coeffbsbs_vll
      3050305 4242 0 2 0.000000e+00 # coeffbsbs_vrr
      3050305 4142 0 2 0.000000e+00 # coeffbsbs_vlr
      3050305 4343 0 2 0.000000e+00 # coeffbsbs_tll
      3050305 4444 0 2 0.000000e+00 # coeffbsbs_trr
      1030103 3131 0 1 0.000000e+00 # coeffkk_sllnp
      1030103 3232 0 1 0.000000e+00 # coeffkk_srrnp
      1030103 3132 0 1 0.000000e+00 # coeffkk_slrnp
      1030103 4141 0 1 0.000000e+00 # coeffkk_vllnp
      1030103 4242 0 1 0.000000e+00 # coeffkk_vrrnp
      1030103 4142 0 1 0.000000e+00 # coeffkk_vlrnp
      1030103 4343 0 1 0.000000e+00 # coeffkk_tllnp
      1030103 4444 0 1 0.000000e+00 # coeffkk_trrnp
      1050105 3131 0 1 0.000000e+00 # coeffbb_sllnp
      1050105 3232 0 1 0.000000e+00 # coeffbb_srrnp
      1050105 3132 0 1 0.000000e+00 # coeffbb_slrnp
      1050105 4141 0 1 0.000000e+00 # coeffbb_vllnp
      1050105 4242 0 1 0.000000e+00 # coeffbb_vrrnp
      1050105 4142 0 1 0.000000e+00 # coeffbb_vlrnp
      1050105 4343 0 1 0.000000e+00 # coeffbb_tllnp
      1050105 4444 0 1 0.000000e+00 # coeffbb_trrnp
      3050305 3131 0 1 0.000000e+00 # coeffbsbs_sllnp
      3050305 3232 0 1 0.000000e+00 # coeffbsbs_srrnp
      3050305 3132 0 1 0.000000e+00 # coeffbsbs_slrnp
      3050305 4141 0 1 0.000000e+00 # coeffbsbs_vllnp
      3050305 4242 0 1 0.000000e+00 # coeffbsbs_vrrnp
      3050305 4142 0 1 0.000000e+00 # coeffbsbs_vlrnp
      3050305 4343 0 1 0.000000e+00 # coeffbsbs_tllnp
      3050305 4444 0 1 0.000000e+00 # coeffbsbs_trrnp
      1030103 3131 0 0 0.000000e+00 # coeffkk_sllsm
      1030103 3232 0 0 0.000000e+00 # coeffkk_srrsm
      1030103 3132 0 0 0.000000e+00 # coeffkk_slrsm
      1030103 4141 0 0 0.000000e+00 # coeffkk_vllsm
      1030103 4242 0 0 0.000000e+00 # coeffkk_vrrsm
      1030103 4142 0 0 0.000000e+00 # coeffkk_vlrsm
      1030103 4343 0 0 0.000000e+00 # coeffkk_tllsm
      1030103 4444 0 0 0.000000e+00 # coeffkk_trrsm
      1050105 3131 0 0 0.000000e+00 # coeffbb_sllsm
      1050105 3232 0 0 0.000000e+00 # coeffbb_srrsm
      1050105 3132 0 0 0.000000e+00 # coeffbb_slrsm
      1050105 4141 0 0 0.000000e+00 # coeffbb_vllsm
      1050105 4242 0 0 0.000000e+00 # coeffbb_vrrsm
      1050105 4142 0 0 0.000000e+00 # coeffbb_vlrsm
      1050105 4343 0 0 0.000000e+00 # coeffbb_tllsm
      1050105 4444 0 0 0.000000e+00 # coeffbb_trrsm
      3050305 3131 0 0 0.000000e+00 # coeffbsbs_sllsm
      3050305 3232 0 0 0.000000e+00 # coeffbsbs_srrsm
      3050305 3132 0 0 0.000000e+00 # coeffbsbs_slrsm
      3050305 4141 0 0 0.000000e+00 # coeffbsbs_vllsm
      3050305 4242 0 0 0.000000e+00 # coeffbsbs_vrrsm
      3050305 4142 0 0 0.000000e+00 # coeffbsbs_vlrsm
      3050305 4343 0 0 0.000000e+00 # coeffbsbs_tllsm
      3050305 4444 0 0 0.000000e+00 # coeffbsbs_trrsm
###################################
## INFORMATION FOR IMFWCOEF
###################################
BLOCK IMFWCOEF Q= 1.600000e+02 #      im(wilson coefficients) at scale q
      305 4422 0 0 0.000000e+00 # coeffc7sm
      305 4422 0 2 0.000000e+00 # coeffc7
      305 4322 0 2 0.000000e+00 # coeffc7p
      305 4422 0 1 0.000000e+00 # coeffc7np
      305 4322 0 1 0.000000e+00 # coeffc7pnp
      305 6421 0 0 0.000000e+00 # coeffc8sm
      305 6421 0 2 0.000000e+00 # coeffc8
      305 6321 0 2 0.000000e+00 # coeffc8p
      305 6421 0 1 0.000000e+00 # coeffc8np
      305 6321 0 1 0.000000e+00 # coeffc8pnp
      3051111 4133 0 0 0.000000e+00 # coeffc9eesm
      3051111 4133 0 2 0.000000e+00 # coeffc9ee
      3051111 4233 0 2 0.000000e+00 # coeffc9pee
      3051111 4133 0 1 0.000000e+00 # coeffc9eenp
      3051111 4233 0 1 0.000000e+00 # coeffc9peenp
      3051111 4137 0 0 0.000000e+00 # coeffc10eesm
      3051111 4137 0 2 0.000000e+00 # coeffc10ee
      3051111 4237 0 2 0.000000e+00 # coeffc10pee
      3051111 4137 0 1 0.000000e+00 # coeffc10eenp
      3051111 4237 0 1 0.000000e+00 # coeffc10peenp
      3051313 4133 0 0 0.000000e+00 # coeffc9mumusm
      3051313 4133 0 2 0.000000e+00 # coeffc9mumu
      3051313 4233 0 2 0.000000e+00 # coeffc9pmumu
      3051313 4133 0 1 0.000000e+00 # coeffc9mumunp
      3051313 4233 0 1 0.000000e+00 # coeffc9pmumunp
      3051313 4137 0 0 0.000000e+00 # coeffc10mumusm
      3051313 4137 0 2 0.000000e+00 # coeffc10mumu
      3051313 4237 0 2 0.000000e+00 # coeffc10pmumu
      3051313 4137 0 1 0.000000e+00 # coeffc10mumunp
      3051313 4237 0 1 0.000000e+00 # coeffc10pmumunp
      3051212 4141 0 0 0.000000e+00 # coeffclnu1nu1sm
      3051212 4141 0 2 0.000000e+00 # coeffclnu1nu1
      3051212 4241 0 2 0.000000e+00 # coeffclpnu1nu1
      3051212 4141 0 1 0.000000e+00 # coeffclnu1nu1np
      3051212 4241 0 1 0.000000e+00 # coeffclpnu1nu1np
      3051414 4141 0 0 0.000000e+00 # coeffclnu2nu2sm
      3051414 4141 0 2 0.000000e+00 # coeffclnu2nu2
      3051414 4241 0 2 0.000000e+00 # coeffclpnu2nu2
      3051414 4141 0 1 0.000000e+00 # coeffclnu2nu2np
      3051414 4241 0 1 0.000000e+00 # coeffclpnu2nu2np
      3051616 4141 0 0 0.000000e+00 # coeffclnu3nu3sm
      3051616 4141 0 2 0.000000e+00 # coeffclnu3nu3
      3051616 4241 0 2 0.000000e+00 # coeffclpnu3nu3
      3051616 4141 0 1 0.000000e+00 # coeffclnu3nu3np
      3051616 4241 0 1 0.000000e+00 # coeffclpnu3nu3np
      3051212 4142 0 0 0.000000e+00 # coeffcrnu1nu1sm
      3051212 4142 0 2 0.000000e+00 # coeffcrnu1nu1
      3051212 4242 0 2 0.000000e+00 # coeffcrpnu1nu1
      3051212 4142 0 1 0.000000e+00 # coeffcrnu1nu1np
      3051212 4242 0 1 0.000000e+00 # coeffcrpnu1nu1np
      3051414 4142 0 0 0.000000e+00 # coeffcrnu2nu2sm
      3051414 4142 0 2 0.000000e+00 # coeffcrnu2nu2
      3051414 4242 0 2 0.000000e+00 # coeffcrpnu2nu2
      3051414 4142 0 1 0.000000e+00 # coeffcrnu2nu2np
      3051414 4242 0 1 0.000000e+00 # coeffcrpnu2nu2np
      3051616 4142 0 0 0.000000e+00 # coeffcrnu3nu3sm
      3051616 4142 0 2 0.000000e+00 # coeffcrnu3nu3
      3051616 4242 0 2 0.000000e+00 # coeffcrpnu3nu3
      3051616 4142 0 1 0.000000e+00 # coeffcrnu3nu3np
      3051616 4242 0 1 0.000000e+00 # coeffcrpnu3nu3np
      1030103 3131 0 2 0.000000e+00 # coeffkk_sll
      1030103 3232 0 2 0.000000e+00 # coeffkk_srr
      1030103 3132 0 2 0.000000e+00 # coeffkk_slr
      1030103 4141 0 2 0.000000e+00 # coeffkk_vll
      1030103 4242 0 2 0.000000e+00 # coeffkk_vrr
      1030103 4142 0 2 0.000000e+00 # coeffkk_vlr
      1030103 4343 0 2 0.000000e+00 # coeffkk_tll
      1030103 4444 0 2 0.000000e+00 # coeffkk_trr
      1050105 3131 0 2 0.000000e+00 # coeffbb_sll
      1050105 3232 0 2 0.000000e+00 # coeffbb_srr
      1050105 3132 0 2 0.000000e+00 # coeffbb_slr
      1050105 4141 0 2 0.000000e+00 # coeffbb_vll
      1050105 4242 0 2 0.000000e+00 # coeffbb_vrr
      1050105 4142 0 2 0.000000e+00 # coeffbb_vlr
      1050105 4343 0 2 0.000000e+00 # coeffbb_tll
      1050105 4444 0 2 0.000000e+00 # coeffbb_trr
      3050305 3131 0 2 0.000000e+00 # coeffbsbs_sll
      3050305 3232 0 2 0.000000e+00 # coeffbsbs_srr
      3050305 3132 0 2 0.000000e+00 # coeffbsbs_slr
      3050305 4141 0 2 0.000000e+00 # coeffbsbs_vll
      3050305 4242 0 2 0.000000e+00 # coeffbsbs_vrr
      3050305 4142 0 2 0.000000e+00 # coeffbsbs_vlr
      3050305 4343 0 2 0.000000e+00 # coeffbsbs_tll
      3050305 4444 0 2 0.000000e+00 # coeffbsbs_trr
      1030103 3131 0 1 0.000000e+00 # coeffkk_sllnp
      1030103 3232 0 1 0.000000e+00 # coeffkk_srrnp
      1030103 3132 0 1 0.000000e+00 # coeffkk_slrnp
      1030103 4141 0 1 0.000000e+00 # coeffkk_vllnp
      1030103 4242 0 1 0.000000e+00 # coeffkk_vrrnp
      1030103 4142 0 1 0.000000e+00 # coeffkk_vlrnp
      1030103 4343 0 1 0.000000e+00 # coeffkk_tllnp
      1030103 4444 0 1 0.000000e+00 # coeffkk_trrnp
      1050105 3131 0 1 0.000000e+00 # coeffbb_sllnp
      1050105 3232 0 1 0.000000e+00 # coeffbb_srrnp
      1050105 3132 0 1 0.000000e+00 # coeffbb_slrnp
      1050105 4141 0 1 0.000000e+00 # coeffbb_vllnp
      1050105 4242 0 1 0.000000e+00 # coeffbb_vrrnp
      1050105 4142 0 1 0.000000e+00 # coeffbb_vlrnp
      1050105 4343 0 1 0.000000e+00 # coeffbb_tllnp
      1050105 4444 0 1 0.000000e+00 # coeffbb_trrnp
      3050305 3131 0 1 0.000000e+00 # coeffbsbs_sllnp
      3050305 3232 0 1 0.000000e+00 # coeffbsbs_srrnp
      3050305 3132 0 1 0.000000e+00 # coeffbsbs_slrnp
      3050305 4141 0 1 0.000000e+00 # coeffbsbs_vllnp
      3050305 4242 0 1 0.000000e+00 # coeffbsbs_vrrnp
      3050305 4142 0 1 0.000000e+00 # coeffbsbs_vlrnp
      3050305 4343 0 1 0.000000e+00 # coeffbsbs_tllnp
      3050305 4444 0 1 0.000000e+00 # coeffbsbs_trrnp
      1030103 3131 0 0 0.000000e+00 # coeffkk_sllsm
      1030103 3232 0 0 0.000000e+00 # coeffkk_srrsm
      1030103 3132 0 0 0.000000e+00 # coeffkk_slrsm
      1030103 4141 0 0 0.000000e+00 # coeffkk_vllsm
      1030103 4242 0 0 0.000000e+00 # coeffkk_vrrsm
      1030103 4142 0 0 0.000000e+00 # coeffkk_vlrsm
      1030103 4343 0 0 0.000000e+00 # coeffkk_tllsm
      1030103 4444 0 0 0.000000e+00 # coeffkk_trrsm
      1050105 3131 0 0 0.000000e+00 # coeffbb_sllsm
      1050105 3232 0 0 0.000000e+00 # coeffbb_srrsm
      1050105 3132 0 0 0.000000e+00 # coeffbb_slrsm
      1050105 4141 0 0 0.000000e+00 # coeffbb_vllsm
      1050105 4242 0 0 0.000000e+00 # coeffbb_vrrsm
      1050105 4142 0 0 0.000000e+00 # coeffbb_vlrsm
      1050105 4343 0 0 0.000000e+00 # coeffbb_tllsm
      1050105 4444 0 0 0.000000e+00 # coeffbb_trrsm
      3050305 3131 0 0 0.000000e+00 # coeffbsbs_sllsm
      3050305 3232 0 0 0.000000e+00 # coeffbsbs_srrsm
      3050305 3132 0 0 0.000000e+00 # coeffbsbs_slrsm
      3050305 4141 0 0 0.000000e+00 # coeffbsbs_vllsm
      3050305 4242 0 0 0.000000e+00 # coeffbsbs_vrrsm
      3050305 4142 0 0 0.000000e+00 # coeffbsbs_vlrsm
      3050305 4343 0 0 0.000000e+00 # coeffbsbs_tllsm
      3050305 4444 0 0 0.000000e+00 # coeffbsbs_trrsm
###################################
## INFORMATION FOR FINETUNING
###################################
BLOCK FINETUNING # 
      0 0.000000e+00 # overall ft
      1 0.000000e+00 # m0
      2 0.000000e+00 # m12
      3 0.000000e+00 # azero
      4 0.000000e+00 # \[mu]
      5 0.000000e+00 # b[\[mu]]
###################################
## INFORMATION FOR TREELEVELUNITARITY
###################################
BLOCK TREELEVELUNITARITY # 
      0 1.000000e+00 # tree-level unitarity limits fulfilled or not
      1 0.000000e+00 # maximal scattering eigenvalue
###################################
## INFORMATION FOR DECAY
###################################
DECAY 1000001 9.351138e-01 # sd_1
      1.476127e-03 2 1 1000022 # br(sd_1 -> fd_1 chi_1 )
      7.927407e-04 2 1 1000023 # br(sd_1 -> fd_1 chi_2 )
      9.977192e-01 2 1 1000025 # br(sd_1 -> fd_1 chi_3 )

DECAY 1000003 5.357508e+01 # sd_2
      2.031163e-04 2 -1000037 4 # br(sd_2 -> fu_2 cha_2 )
      6.633406e-01 2 -1000024 6 # br(sd_2 -> fu_3 cha_1 )
      8.154838e-02 2 -1000037 6 # br(sd_2 -> fu_3 cha_2 )
      7.799175e-02 2 5 1000022 # br(sd_2 -> fd_3 chi_1 )
      7.503795e-02 2 5 1000023 # br(sd_2 -> fd_3 chi_2 )
      4.184959e-03 2 5 1000025 # br(sd_2 -> fd_3 chi_3 )
      4.106976e-02 2 5 1000035 # br(sd_2 -> fd_3 chi_4 )
      5.661920e-02 2 -24 1000002 # br(sd_2 -> su_1 vwm )

DECAY 1000005 9.562214e-01 # sd_3
      1.700949e-04 2 -1000024 2 # br(sd_3 -> fu_1 cha_1 )
      3.159798e-03 2 -1000024 4 # br(sd_3 -> fu_2 cha_1 )
      3.162458e-03 2 3 1000022 # br(sd_3 -> fd_2 chi_1 )
      2.398829e-03 2 3 1000023 # br(sd_3 -> fd_2 chi_2 )
      9.910777e-01 2 3 1000025 # br(sd_3 -> fd_2 chi_3 )

DECAY 2000001 7.013857e+00 # sd_4
      1.183967e-04 2 -1000024 2 # br(sd_4 -> fu_1 cha_1 )
      6.097369e-01 2 -1000037 2 # br(sd_4 -> fu_1 cha_2 )
      3.266716e-02 2 -1000037 4 # br(sd_4 -> fu_2 cha_2 )
      4.530983e-04 2 -1000024 6 # br(sd_4 -> fu_3 cha_1 )
      2.120975e-03 2 1 1000022 # br(sd_4 -> fd_1 chi_1 )
      1.353802e-03 2 1 1000023 # br(sd_4 -> fd_1 chi_2 )
      3.227513e-02 2 1 1000025 # br(sd_4 -> fd_1 chi_3 )
      3.211807e-01 2 1 1000035 # br(sd_4 -> fd_1 chi_4 )

DECAY 2000003 7.391621e+00 # sd_5
      3.236673e-02 2 -1000037 2 # br(sd_5 -> fu_1 cha_2 )
      1.910215e-04 2 -1000024 4 # br(sd_5 -> fu_2 cha_1 )
      6.016025e-01 2 -1000037 4 # br(sd_5 -> fu_2 cha_2 )
      1.164057e-02 2 -1000024 6 # br(sd_5 -> fu_3 cha_1 )
      1.510393e-03 2 -1000037 6 # br(sd_5 -> fu_3 cha_2 )
      2.243771e-03 2 3 1000022 # br(sd_5 -> fd_2 chi_1 )
      1.510090e-03 2 3 1000023 # br(sd_5 -> fd_2 chi_2 )
      3.109493e-02 2 3 1000025 # br(sd_5 -> fd_2 chi_3 )
      3.176729e-01 2 3 1000035 # br(sd_5 -> fd_2 chi_4 )

DECAY 2000005 1.763228e+01 # sd_6
      8.034746e-04 2 -1000024 4 # br(sd_6 -> fu_2 cha_1 )
      4.699272e-01 2 -1000024 6 # br(sd_6 -> fu_3 cha_1 )
      4.084801e-04 2 -1000037 6 # br(sd_6 -> fu_3 cha_2 )
      2.383782e-01 2 5 1000022 # br(sd_6 -> fd_3 chi_1 )
      2.340472e-01 2 5 1000023 # br(sd_6 -> fd_3 chi_2 )
      5.555102e-02 2 5 1000025 # br(sd_6 -> fd_3 chi_3 )
      2.060107e-04 2 5 1000035 # br(sd_6 -> fd_3 chi_4 )
      6.723163e-04 2 -24 1000002 # br(sd_6 -> su_1 vwm )

DECAY 1000002 5.905686e+01 # su_1
      2.729671e-01 2 6 1000022 # br(su_1 -> fu_3 chi_1 )
      2.784634e-01 2 6 1000023 # br(su_1 -> fu_3 chi_2 )
      3.814318e-02 2 6 1000025 # br(su_1 -> fu_3 chi_3 )
      1.219428e-02 2 6 1000035 # br(su_1 -> fu_3 chi_4 )
      5.789964e-04 2 3 1000024 # br(su_1 -> cha_1^* fd_2 )
      3.727179e-01 2 5 1000024 # br(su_1 -> cha_1^* fd_3 )
      2.490300e-02 2 5 1000037 # br(su_1 -> cha_2^* fd_3 )

DECAY 1000004 3.617446e+00 # su_2
      1.497070e-03 2 2 1000022 # br(su_2 -> fu_1 chi_1 )
      8.019676e-04 2 2 1000023 # br(su_2 -> fu_1 chi_2 )
      9.976986e-01 2 2 1000025 # br(su_2 -> fu_1 chi_3 )

DECAY 1000006 3.618642e+00 # su_3
      1.577711e-03 2 4 1000022 # br(su_3 -> fu_2 chi_1 )
      8.854473e-04 2 4 1000023 # br(su_3 -> fu_2 chi_2 )
      9.973690e-01 2 4 1000025 # br(su_3 -> fu_2 chi_3 )
      1.558141e-04 2 3 1000024 # br(su_3 -> cha_1^* fd_2 )

DECAY 2000002 7.053841e+00 # su_4
      9.651200e-04 2 2 1000022 # br(su_4 -> fu_1 chi_1 )
      6.621383e-04 2 2 1000023 # br(su_4 -> fu_1 chi_2 )
      3.331317e-02 2 2 1000025 # br(su_4 -> fu_1 chi_3 )
      3.017196e-01 2 2 1000035 # br(su_4 -> fu_1 chi_4 )
      1.788042e-03 2 4 1000025 # br(su_4 -> fu_2 chi_3 )
      1.619432e-02 2 4 1000035 # br(su_4 -> fu_2 chi_4 )
      9.955259e-03 2 1 1000024 # br(su_4 -> cha_1^* fd_1 )
      6.351626e-01 2 1 1000037 # br(su_4 -> cha_2^* fd_1 )

DECAY 2000004 7.390661e+00 # su_5
      1.733443e-03 2 2 1000025 # br(su_5 -> fu_1 chi_3 )
      1.611941e-02 2 2 1000035 # br(su_5 -> fu_1 chi_4 )
      9.664834e-04 2 4 1000022 # br(su_5 -> fu_2 chi_1 )
      6.766019e-04 2 4 1000023 # br(su_5 -> fu_2 chi_2 )
      3.224348e-02 2 4 1000025 # br(su_5 -> fu_2 chi_3 )
      2.998336e-01 2 4 1000035 # br(su_5 -> fu_2 chi_4 )
      2.857665e-03 2 6 1000022 # br(su_5 -> fu_3 chi_1 )
      2.936638e-03 2 6 1000023 # br(su_5 -> fu_3 chi_2 )
      3.783067e-04 2 6 1000035 # br(su_5 -> fu_3 chi_4 )
      9.925578e-03 2 3 1000024 # br(su_5 -> cha_1^* fd_2 )
      1.680662e-04 2 5 1000024 # br(su_5 -> cha_1^* fd_3 )
      6.319712e-01 2 3 1000037 # br(su_5 -> cha_2^* fd_2 )

DECAY 2000006 7.155428e+01 # su_6
      2.621554e-01 2 6 1000022 # br(su_6 -> fu_3 chi_1 )
      2.714234e-01 2 6 1000023 # br(su_6 -> fu_3 chi_2 )
      2.239165e-02 2 6 1000025 # br(su_6 -> fu_3 chi_3 )
      1.957672e-02 2 6 1000035 # br(su_6 -> fu_3 chi_4 )
      3.598640e-04 2 3 1000024 # br(su_6 -> cha_1^* fd_2 )
      3.020585e-01 2 5 1000024 # br(su_6 -> cha_1^* fd_3 )
      3.911208e-02 2 5 1000037 # br(su_6 -> cha_2^* fd_3 )
      2.967636e-03 2 25 1000002 # br(su_6 -> su_1 hh_1 )
      4.425258e-03 2 24 1000003 # br(su_6 -> sd_2 vwm^* )
      7.549561e-02 2 23 1000002 # br(su_6 -> su_1 vz )

DECAY 1000011 4.609727e+00 # se_1
      3.443359e-01 2 -1000024 16 # br(se_1 -> fv_3 cha_1 )
      3.158969e-01 2 15 1000022 # br(se_1 -> fe_3 chi_1 )
      2.573156e-01 2 15 1000023 # br(se_1 -> fe_3 chi_2 )
      8.245165e-02 2 15 1000025 # br(se_1 -> fe_3 chi_3 )

DECAY 1000013 4.892850e-01 # se_2
      1.822193e-02 2 -1000024 14 # br(se_2 -> fv_2 cha_1 )
      3.427548e-02 2 13 1000022 # br(se_2 -> fe_2 chi_1 )
      4.640123e-03 2 13 1000023 # br(se_2 -> fe_2 chi_2 )
      9.428625e-01 2 13 1000025 # br(se_2 -> fe_2 chi_3 )

DECAY 1000015 5.713579e-01 # se_3
      1.157954e-02 2 11 1000022 # br(se_3 -> fe_1 chi_1 )
      6.196381e-03 2 11 1000023 # br(se_3 -> fe_1 chi_2 )
      9.822235e-01 2 11 1000025 # br(se_3 -> fe_1 chi_3 )

DECAY 2000011 1.453917e-01 # se_4
      3.188665e-03 2 -1000024 12 # br(se_4 -> fv_1 cha_1 )
      8.220375e-03 2 11 1000022 # br(se_4 -> fe_1 chi_1 )
      6.712588e-03 2 11 1000023 # br(se_4 -> fe_1 chi_2 )
      9.818784e-01 2 11 1000025 # br(se_4 -> fe_1 chi_3 )

DECAY 2000013 2.552450e-01 # se_5
      3.092082e-03 2 -1000024 14 # br(se_5 -> fv_2 cha_1 )
      1.624014e-03 2 13 1000022 # br(se_5 -> fe_2 chi_1 )
      4.449604e-02 2 13 1000023 # br(se_5 -> fe_2 chi_2 )
      9.507879e-01 2 13 1000025 # br(se_5 -> fe_2 chi_3 )

DECAY 2000015 3.930254e+00 # se_6
      2.603198e-01 2 -1000024 16 # br(se_6 -> fv_3 cha_1 )
      3.053058e-01 2 15 1000022 # br(se_6 -> fe_3 chi_1 )
      3.542953e-01 2 15 1000023 # br(se_6 -> fe_3 chi_2 )
      8.007910e-02 2 15 1000025 # br(se_6 -> fe_3 chi_3 )

DECAY 1000012 2.800590e+00 # sv_1
      4.785645e-03 2 16 1000022 # br(sv_1 -> fv_3 chi_1 )
      2.932612e-03 2 16 1000023 # br(sv_1 -> fv_3 chi_2 )
      4.807205e-02 2 16 1000025 # br(sv_1 -> fv_3 chi_3 )
      9.442097e-01 2 15 1000024 # br(sv_1 -> cha_1^* fe_3 )

DECAY 1000014 2.036631e-01 # sv_2
      6.585231e-02 2 14 1000022 # br(sv_2 -> fv_2 chi_1 )
      4.035393e-02 2 14 1000023 # br(sv_2 -> fv_2 chi_2 )
      6.660289e-01 2 14 1000025 # br(sv_2 -> fv_2 chi_3 )
      2.277649e-01 2 13 1000024 # br(sv_2 -> cha_1^* fe_2 )

DECAY 1000016 1.944415e-01 # sv_3
      6.897558e-02 2 12 1000022 # br(sv_3 -> fv_1 chi_1 )
      4.226785e-02 2 12 1000023 # br(sv_3 -> fv_1 chi_2 )
      6.976344e-01 2 12 1000025 # br(sv_3 -> fv_1 chi_3 )
      1.911222e-01 2 11 1000024 # br(sv_3 -> cha_1^* fe_1 )

DECAY 25 3.990884e-03 # hh_1
      3.061908e-03 2 22 22 # br(hh_1 -> vp vp )
      8.112273e-02 2 21 21 # br(hh_1 -> vg vg )
      2.402868e-02 2 23 23 # br(hh_1 -> vz vz )
      2.600097e-01 2 -24 24 # br(hh_1 -> vwm^* vwm_virt )
      2.028796e-04 2 -3 3 # br(hh_1 -> fd_2^* fd_2 )
      5.434058e-01 2 -5 5 # br(hh_1 -> fd_3^* fd_3 )
      2.186165e-04 2 -13 13 # br(hh_1 -> fe_2^* fe_2 )
      6.310435e-02 2 -15 15 # br(hh_1 -> fe_3^* fe_3 )
      2.484458e-02 2 -4 4 # br(hh_1 -> fu_2^* fu_2 )

DECAY 35 1.572641e+01 # hh_2
      2.189818e-03 2 -1000024 1000024 # br(hh_2 -> cha_1^* cha_1 )
      7.286885e-04 2 1000022 1000022 # br(hh_2 -> chi_1 chi_1 )
      4.965476e-04 2 1000023 1000023 # br(hh_2 -> chi_2 chi_2 )
      3.257377e-04 2 -3 3 # br(hh_2 -> fd_2^* fd_2 )
      8.391994e-01 2 -5 5 # br(hh_2 -> fd_3^* fd_3 )
      5.392650e-04 2 -13 13 # br(hh_2 -> fe_2^* fe_2 )
      1.525026e-01 2 -15 15 # br(hh_2 -> fe_3^* fe_3 )
      3.933154e-03 2 -6 6 # br(hh_2 -> fu_3^* fu_3 )

DECAY 36 1.573273e+01 # ah_2
      2.364148e-03 2 -1000024 1000024 # br(ah_2 -> cha_1^* cha_1 )
      8.829243e-04 2 1000022 1000022 # br(ah_2 -> chi_1 chi_1 )
      4.616719e-04 2 1000023 1000023 # br(ah_2 -> chi_2 chi_2 )
      3.256137e-04 2 -3 3 # br(ah_2 -> fd_2^* fd_2 )
      8.388904e-01 2 -5 5 # br(ah_2 -> fd_3^* fd_3 )
      5.390597e-04 2 -13 13 # br(ah_2 -> fe_2^* fe_2 )
      1.524457e-01 2 -15 15 # br(ah_2 -> fe_3^* fe_3 )
      4.036517e-03 2 -6 6 # br(ah_2 -> fu_3^* fu_3 )

DECAY 37 1.410366e+01 # hpm_2
      1.338076e-04 2 1000023 1000024 # br(hpm_2^* -> chi_2 cha_1^* )
      3.141626e-04 2 -3 4 # br(hpm_2^* -> fu_2 fd_2^* )
      1.454752e-03 2 -5 4 # br(hpm_2^* -> fu_2 fd_3^* )
      8.261863e-01 2 -5 6 # br(hpm_2^* -> fu_3 fd_3^* )
      6.054962e-04 2 -13 14 # br(hpm_2^* -> fv_2 fe_2^* )
      1.712340e-01 2 -15 16 # br(hpm_2^* -> fv_3 fe_3^* )

DECAY 1000021 2.520418e+02 # glu
      4.206896e-02 2 -1000001 1 # br(glu -> fd_1 sd_1^* )
      4.206896e-02 2 -1 1000001 # br(glu -> fd_1^* sd_1 )
      4.087619e-02 2 -2000001 1 # br(glu -> fd_1 sd_4^* )
      4.087619e-02 2 -1 2000001 # br(glu -> fd_1^* sd_4 )
      4.089439e-02 2 -1000005 3 # br(glu -> fd_2 sd_3^* )
      4.089439e-02 2 -3 1000005 # br(glu -> fd_2^* sd_3 )
      3.971804e-02 2 -2000003 3 # br(glu -> fd_2 sd_5^* )
      3.971804e-02 2 -3 2000003 # br(glu -> fd_2^* sd_5 )
      4.146238e-02 2 -1000003 5 # br(glu -> fd_3 sd_2^* )
      4.146238e-02 2 -5 1000003 # br(glu -> fd_3^* sd_2 )
      3.845146e-02 2 -2000005 5 # br(glu -> fd_3 sd_6^* )
      3.845146e-02 2 -5 2000005 # br(glu -> fd_3^* sd_6 )
      4.453703e-02 2 -1000004 2 # br(glu -> fu_1 su_2^* )
      4.453703e-02 2 -2 1000004 # br(glu -> fu_1^* su_2 )
      3.885700e-02 2 -2000002 2 # br(glu -> fu_1 su_4^* )
      3.885700e-02 2 -2 2000002 # br(glu -> fu_1^* su_4 )
      2.027410e-03 2 -2000004 2 # br(glu -> fu_1 su_5^* )
      2.027410e-03 2 -2 2000004 # br(glu -> fu_1^* su_5 )
      4.453705e-02 2 -1000006 4 # br(glu -> fu_2 su_3^* )
      4.453705e-02 2 -4 1000006 # br(glu -> fu_2^* su_3 )
      2.085588e-03 2 -2000002 4 # br(glu -> fu_2 su_4^* )
      2.085588e-03 2 -4 2000002 # br(glu -> fu_2^* su_4 )
      3.771140e-02 2 -2000004 4 # br(glu -> fu_2 su_5^* )
      3.771140e-02 2 -4 2000004 # br(glu -> fu_2^* su_5 )
      5.757923e-02 2 -1000002 6 # br(glu -> fu_3 su_1^* )
      5.757923e-02 2 -6 1000002 # br(glu -> fu_3^* su_1 )
      2.908394e-02 2 -2000006 6 # br(glu -> fu_3 su_6^* )
      2.908394e-02 2 -6 2000006 # br(glu -> fu_3^* su_6 )

DECAY 1000022 0.000000e+00 # chi_1
DECAY 1000023 0.000000e+00 # chi_2
DECAY 1000025 3.021311e+00 # chi_3
      2.515431e-01 2 -1000024 24 # br(chi_3 -> cha_1 vwm^* )
      2.515431e-01 2 -24 1000024 # br(chi_3 -> cha_1^* vwm )
      1.631236e-01 2 25 1000022 # br(chi_3 -> chi_1 hh_1 )
      8.673421e-02 2 25 1000023 # br(chi_3 -> chi_2 hh_1 )
      8.341267e-02 2 23 1000022 # br(chi_3 -> chi_1 vz )
      1.636433e-01 2 23 1000023 # br(chi_3 -> chi_2 vz )

DECAY 1000035 3.005609e+01 # chi_4
      1.596221e-02 2 36 1000022 # br(chi_4 -> chi_1 ah_2 )
      2.418010e-02 2 36 1000023 # br(chi_4 -> chi_2 ah_2 )
      3.900896e-02 2 -1000024 37 # br(chi_4 -> cha_1 hpm_2^* )
      3.900896e-02 2 -37 1000024 # br(chi_4 -> cha_1^* hpm_2 )
      1.270351e-01 2 -1000024 24 # br(chi_4 -> cha_1 vwm^* )
      1.270351e-01 2 -24 1000024 # br(chi_4 -> cha_1^* vwm )
      7.783391e-02 2 25 1000022 # br(chi_4 -> chi_1 hh_1 )
      2.471844e-02 2 35 1000022 # br(chi_4 -> chi_1 hh_2 )
      5.058978e-02 2 25 1000023 # br(chi_4 -> chi_2 hh_1 )
      1.540344e-02 2 35 1000023 # br(chi_4 -> chi_2 hh_2 )
      7.428918e-04 2 25 1000025 # br(chi_4 -> chi_3 hh_1 )
      4.877128e-02 2 23 1000022 # br(chi_4 -> chi_1 vz )
      7.846068e-02 2 23 1000023 # br(chi_4 -> chi_2 vz )
      2.736969e-02 2 -2000011 11 # br(chi_4 -> fe_1 se_4^* )
      2.736969e-02 2 -11 2000011 # br(chi_4 -> fe_1^* se_4 )
      6.514327e-03 2 -1000013 13 # br(chi_4 -> fe_2 se_2^* )
      6.514327e-03 2 -13 1000013 # br(chi_4 -> fe_2^* se_2 )
      2.085866e-02 2 -2000013 13 # br(chi_4 -> fe_2 se_5^* )
      2.085866e-02 2 -13 2000013 # br(chi_4 -> fe_2^* se_5 )
      1.113301e-02 2 -1000011 15 # br(chi_4 -> fe_3 se_1^* )
      1.113301e-02 2 -15 1000011 # br(chi_4 -> fe_3^* se_1 )
      1.632139e-02 2 -2000015 15 # br(chi_4 -> fe_3 se_6^* )
      1.632139e-02 2 -15 2000015 # br(chi_4 -> fe_3^* se_6 )
      2.777447e-02 2 -1000016 12 # br(chi_4 -> fv_1 sv_3^* )
      2.777447e-02 2 -12 1000016 # br(chi_4 -> fv_1^* sv_3 )
      2.777477e-02 2 -1000014 14 # br(chi_4 -> fv_2 sv_2^* )
      2.777477e-02 2 -14 1000014 # br(chi_4 -> fv_2^* sv_2 )
      2.785800e-02 2 -1000012 16 # br(chi_4 -> fv_3 sv_1^* )
      2.785800e-02 2 -16 1000012 # br(chi_4 -> fv_3^* sv_1 )

DECAY 1000024 0.000000e+00 # cha_1
DECAY 1000037 3.007127e+01 # cha_2
      3.994895e-02 2 36 1000024 # br(cha_2^* -> cha_1^* ah_2 )
      1.293815e-01 2 25 1000024 # br(cha_2^* -> cha_1^* hh_1 )
      3.992209e-02 2 35 1000024 # br(cha_2^* -> cha_1^* hh_2 )
      1.269580e-01 2 23 1000024 # br(cha_2^* -> cha_1^* vz )
      3.978312e-02 2 37 1000022 # br(cha_2^* -> chi_1 hpm_2^* )
      3.860971e-02 2 37 1000023 # br(cha_2^* -> chi_2 hpm_2^* )
      1.247977e-01 2 24 1000022 # br(cha_2^* -> chi_1 vwm^* )
      1.284875e-01 2 24 1000023 # br(cha_2^* -> chi_2 vwm^* )
      8.844767e-04 2 24 1000025 # br(cha_2^* -> chi_3 vwm^* )
      5.528877e-02 2 -11 1000016 # br(cha_2^* -> fe_1^* sv_3 )
      5.528935e-02 2 -13 1000014 # br(cha_2^* -> fe_2^* sv_2 )
      5.545390e-02 2 -15 1000012 # br(cha_2^* -> fe_3^* sv_1 )
      5.500578e-02 2 -2000011 12 # br(cha_2^* -> fv_1 se_4^* )
      1.309166e-02 2 -1000013 14 # br(cha_2^* -> fv_2 se_2^* )
      4.192021e-02 2 -2000013 14 # br(cha_2^* -> fv_2 se_5^* )
      2.237477e-02 2 -1000011 16 # br(cha_2^* -> fv_3 se_1^* )
      3.280172e-02 2 -2000015 16 # br(cha_2^* -> fv_3 se_6^* )

DECAY 2 0.000000e+00 # fu_1
DECAY 4 0.000000e+00 # fu_2
DECAY 6 1.559759e+00 # fu_3
      1.676029e-03 2 3 24 # br(fu_3 -> fd_2 vwm^* )
      9.982885e-01 2 5 24 # br(fu_3 -> fd_3 vwm^* )

DECAY 21 0.000000e+00 # vg
DECAY 22 0.000000e+00 # vp
DECAY 23 2.495200e+00 # vz
DECAY 24 2.141000e+00 # vwm
DECAY 12 0.000000e+00 # fv_1
DECAY 14 0.000000e+00 # fv_2
DECAY 16 0.000000e+00 # fv_3
DECAY 11 0.000000e+00 # fe_1
DECAY 13 0.000000e+00 # fe_2
DECAY 15 0.000000e+00 # fe_3
DECAY 1 0.000000e+00 # fd_1
DECAY 3 0.000000e+00 # fd_2
DECAY 5 0.000000e+00 # fd_3


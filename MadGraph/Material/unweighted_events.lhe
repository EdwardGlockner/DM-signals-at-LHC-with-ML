<LesHouchesEvents version="3.0">
<header>
<!--
#*********************************************************************
#                                                                    *
#                        MadGraph5_aMC@NLO                           *
#                                                                    *
#                           Going Beyond                             *
#                                                                    *
#                   http://madgraph.hep.uiuc.edu                     *
#                   http://madgraph.phys.ucl.ac.be                   *
#                   http://amcatnlo.cern.ch                          *
#                                                                    *
#                     The MadGraph5_aMC@NLO team                     *
#                                                                    *
#....................................................................*
#                                                                    *
# This file contains all the information necessary to reproduce      *
# the events generated:                                              *
#                                                                    *
# 1. software version                                                *
# 2. proc_card          : code generation info including model       *
# 3. param_card         : model primary parameters in the LH format  *
# 4. run_card           : running parameters (collider and cuts)     *
# 5. pythia_card        : present only if pythia has been run        *
# 6. pgs_card           : present only if pgs has been run           *
# 7. delphes_cards      : present only if delphes has been run       *
#                                                                    *
#                                                                    *
#*********************************************************************
-->
<MGVersion>
3.2.0
</MGVersion>
<MG5ProcCard>
<![CDATA[
#************************************************************
#*                     MadGraph5_aMC@NLO                    *
#*                                                          *
#*                *                       *                 *
#*                  *        * *        *                   *
#*                    * * * * 5 * * * *                     *
#*                  *        * *        *                   *
#*                *                       *                 *
#*                                                          *
#*                                                          *
#*         VERSION 3.2.0                 2021-08-22         *
#*                                                          *
#*    The MadGraph5_aMC@NLO Development Team - Find us at   *
#*    https://server06.fynu.ucl.ac.be/projects/madgraph     *
#*                                                          *
#************************************************************
#*                                                          *
#*               Command File for MadGraph5_aMC@NLO         *
#*                                                          *
#*     run as ./bin/mg5_aMC  filename                       *
#*                                                          *
#************************************************************
set group_subprocesses Auto
set ignore_six_quark_processes False
set low_mem_multicore_nlo_generation False
set complex_mass_scheme False
set include_lepton_initiated_processes False
set gauge unitary
set loop_optimized_output True
set loop_color_flows False
set max_npoint_for_channel 0
set default_unset_couplings 99
set max_t_for_channel 99
set zerowidth_tchannel True
set nlo_mixed_expansion True
import model sm
define p = g u c d s u~ c~ d~ s~
define j = g u c d s u~ c~ d~ s~
define l+ = e+ mu+
define l- = e- mu-
define vl = ve vm vt
define vl~ = ve~ vm~ vt~
import model MSSM
generate p p > n1 n1 j
output MSSMmonojet
]]>
</MG5ProcCard>
<MGProcCard>
#*********************************************************************
#                        MadGraph/MadEvent                           *
#                   http://madgraph.hep.uiuc.edu                     *
#                                                                    *
#                          proc_card.dat                             *
#*********************************************************************
#                                                                    *
#            This Files is generated by MADGRAPH 5                   *
#                                                                    *
# WARNING: This Files is generated for MADEVENT (compatibility issue)*
#          This files is NOT a valid MG4 proc_card.dat               *
#          Running this in MG4 will NEVER reproduce the result of MG5*
#                                                                    *
#*********************************************************************
#*********************************************************************
# Process(es) requested : mg2 input                                  *
#*********************************************************************
# Begin PROCESS # This is TAG. Do not modify this line
p p > n1 n1 j           #Process
# Be carefull the coupling are here in MG5 convention
          
end_coup           # End the couplings input

done               # this tells MG there are no more procs
# End PROCESS  # This is TAG. Do not modify this line
#*********************************************************************
# Model information                                                  *
#*********************************************************************
# Begin MODEL  # This is TAG. Do not modify this line
MSSM
# End   MODEL  # This is TAG. Do not modify this line
#*********************************************************************
# Start multiparticle definitions                                    *
#*********************************************************************
# Begin MULTIPARTICLES # This is TAG. Do not modify this line

# End  MULTIPARTICLES # This is TAG. Do not modify this line
</MGProcCard>
<MGRunCard>
<![CDATA[
#*********************************************************************
#                       MadGraph5_aMC@NLO                            *
#                                                                    *
#                     run_card.dat MadEvent                          *
#                                                                    *
#  This file is used to set the parameters of the run.               *
#                                                                    *
#  Some notation/conventions:                                        *
#                                                                    *
#   Lines starting with a '# ' are info or comments                  *
#                                                                    *
#   mind the format:   value    = variable     ! comment             *
#                                                                    *
#   To display more options, you can type the command:               *
#      update full_run_card                                          *
#*********************************************************************
#                                                                    
#*********************************************************************
# Tag name for the run (one word)                                    *
#*********************************************************************
  tag_1     = run_tag ! name of the run 
#*********************************************************************
# Number of events and rnd seed                                      *
# Warning: Do not generate more than 1M events in a single run       *
#*********************************************************************
  10 = nevents ! Number of unweighted events requested 
 21 = iseed   ! rnd seed (0=assigned automatically=default))
#*********************************************************************
# Collider type and energy                                           *
# lpp: 0=No PDF, 1=proton, -1=antiproton, 2=photon from proton,      *
#                3=photon from electron, 4=photon from muon          *
#*********************************************************************
     1        = lpp1    ! beam 1 type 
     1        = lpp2    ! beam 2 type
     6800.0     = ebeam1  ! beam 1 total energy in GeV
     6800.0     = ebeam2  ! beam 2 total energy in GeV
# To see polarised beam options: type "update beam_pol"

#*********************************************************************
# PDF CHOICE: this automatically fixes also alpha_s and its evol.    *
#*********************************************************************
     lhapdf    = pdlabel     ! PDF set                                     
     315800    = lhaid     ! if pdlabel=lhapdf, this is the lhapdf number
# To see heavy ion options: type "update ion_pdf"
#*********************************************************************
# Renormalization and factorization scales                           *
#*********************************************************************
 False = fixed_ren_scale  ! if .true. use fixed ren scale
 False        = fixed_fac_scale  ! if .true. use fixed fac scale
 91.188  = scale            ! fixed ren scale
 91.188  = dsqrt_q2fact1    ! fixed fact scale for pdf1
 91.188  = dsqrt_q2fact2    ! fixed fact scale for pdf2
 -1 = dynamical_scale_choice ! Choose one of the preselected dynamical choices
 1.0  = scalefact        ! scale factor for event-by-event scales
#*********************************************************************
# Type and output format
#*********************************************************************
  False     = gridpack  !True = setting up the grid pack
  -1.0 = time_of_flight ! threshold (in mm) below which the invariant livetime is not written (-1 means not written)
  average =  event_norm       ! average/sum. Normalization of the weight in the LHEF
# To see MLM/CKKW  merging options: type "update MLM" or "update CKKW"

#*********************************************************************
#
#*********************************************************************
# Phase-Space Optimization strategy (basic options)
#*********************************************************************
   0  = nhel          ! using helicities importance sampling or not.
                             ! 0: sum over helicity, 1: importance sampling
   2  = sde_strategy  ! default integration strategy (hep-ph/2021.xxxxx)
                             ! 1 is old strategy (using amp square)
			     ! 2 is new strategy (using only the denominator)
# To see advanced option for Phase-Space optimization: type "update psoptim"			     
#*********************************************************************
# Generation bias, check the wiki page below for more information:   *
#  'cp3.irmp.ucl.ac.be/projects/madgraph/wiki/LOEventGenerationBias' *
#*********************************************************************
 None = bias_module  ! Bias type of bias, [None, ptj_bias, -custom_folder-]
 {} = bias_parameters ! Specifies the parameters of the module.
#
#*******************************                                                 
# Parton level cuts definition *
#*******************************                                     
#                                                                    
#
#*********************************************************************
# BW cutoff (M+/-bwcutoff*Gamma) ! Define on/off-shell for "$" and decay  
#*********************************************************************
  15.0  = bwcutoff      ! (M+/-bwcutoff*Gamma)
#*********************************************************************
# Standard Cuts                                                      *
#*********************************************************************
# Minimum and maximum pt's (for max, -1 means no cut)                *
#*********************************************************************
 80.0  = ptj       ! minimum pt for the jets 
 -1.0  = ptjmax    ! maximum pt for the jets
 {} = pt_min_pdg ! pt cut for other particles (use pdg code). Applied on particle and anti-particle
 {}	= pt_max_pdg ! pt cut for other particles (syntax e.g. {6: 100, 25: 50}) 
#
# For display option for energy cut in the partonic center of mass frame type 'update ecut'
#
#*********************************************************************
# Maximum and minimum absolute rapidity (for max, -1 means no cut)   *
#*********************************************************************
 5.0 = etaj    ! max rap for the jets 
 {} = eta_min_pdg ! rap cut for other particles (use pdg code). Applied on particle and anti-particle
 {} = eta_max_pdg ! rap cut for other particles (syntax e.g. {6: 2.5, 23: 5})
#*********************************************************************
# Minimum and maximum DeltaR distance                                *
#*********************************************************************
#*********************************************************************
# Minimum and maximum invariant mass for pairs                       *
#*********************************************************************
 {} = mxx_min_pdg ! min invariant mass of a pair of particles X/X~ (e.g. {6:250})
 {'default': False} = mxx_only_part_antipart ! if True the invariant mass is applied only 
                       ! to pairs of particle/antiparticle and not to pairs of the same pdg codes.  
#*********************************************************************
# Inclusive cuts                                                     *
#*********************************************************************
 0.0  = ptheavy   ! minimum pt for at least one heavy final state
#*********************************************************************
# maximal pdg code for quark to be considered as a light jet         *
# (otherwise b cuts are applied)                                     *
#*********************************************************************
 4 = maxjetflavor    ! Maximum jet pdg code
#*********************************************************************
#
#*********************************************************************
# Store info for systematics studies                                 *
# WARNING: Do not use for interference type of computation           *
#*********************************************************************
   True  = use_syst      ! Enable systematics studies
#
systematics = systematics_program ! none, systematics [python], SysCalc [depreceted, C++]
['--mur=0.5,1,2', '--muf=0.5,1,2', '--pdf=errorset'] = systematics_arguments ! see: https://cp3.irmp.ucl.ac.be/projects/madgraph/wiki/Systematics#Systematicspythonmodule
# Syscalc is deprecated but to see the associate options type'update syscalc'
]]>
</MGRunCard>
<slha>
######################################################################
## PARAM_CARD AUTOMATICALY GENERATED BY MG5                       ####
######################################################################
###################################
## INFORMATION FOR SPINFO
###################################
BLOCK SPINFO #  program information
      1 sphenosarah # spectrum calculator
      2 v4.0.4 # version number of spheno
      9 4.14.1 # version number of sarah
###################################
## INFORMATION FOR MODSEL
###################################
BLOCK MODSEL #  input parameters
      1 0 # susy scale input
      2 1 # boundary conditions
      6 1 # switching on flavour violation
###################################
## INFORMATION FOR MINPAR
###################################
BLOCK MINPAR #  input parameters
      1 0.000000e+00 # m0
      2 0.000000e+00 # m12
      3 2.000000e+01 # tanbeta
      4 0.000000e+00 # signummu
      5 0.000000e+00 # azero
###################################
## INFORMATION FOR EXTPAR
###################################
BLOCK EXTPAR #  input parameters
      1 8.500000e+02 # m1input
      2 1.500000e+03 # m2input
      3 4.000000e+03 # m3input
      23 5.400000e+02 # muinput
      24 5.200000e+05 # ma2input
      25 2.000000e+01 # tanbeta
###################################
## INFORMATION FOR GAUGEGUT
###################################
BLOCK GAUGEGUT Q= 1.000000e+03 #  (gut scale)
      1 4.670601e-01 # g1(q)
      2 6.370244e-01 # g2(q)
      3 1.033219e+00 # g3(q)
###################################
## INFORMATION FOR SMINPUTS
###################################
BLOCK SMINPUTS #  sm parameters
      1 1.279320e+02 # alpha_em^-1(mz)^msbar
      2 1.166370e-05 # g_mu [gev^-2]
      3 1.187000e-01 # alpha_s(mz)^msbar
      4 9.118870e+01 # m_z(pole)
      5 4.180000e+00 # m_b(m_b), msbar
      6 1.735000e+02 # m_t(pole)
      7 1.776690e+00 # m_tau(pole)
###################################
## INFORMATION FOR VCKMIN
###################################
BLOCK VCKMIN #  ckm matrix, wolfenstein parameterization
      1 2.253500e-01 # lambda
      2 8.110000e-01 # a
      3 1.310000e-01 # rho bar
      4 3.450000e-01 # eta bar
###################################
## INFORMATION FOR VCKM
###################################
BLOCK VCKM Q= 1.000000e+03 #  re(ckm) at the susy scale
      1 1 9.741682e-01 # re(v_11)
      1 2 2.257956e-01 # re(v_12)
      1 3 3.571293e-03 # re(v_13)
      2 1 -2.257408e-01 # re(v_21)
      2 2 9.732598e-01 # re(v_22)
      2 3 4.250339e-02 # re(v_23)
      3 1 6.121280e-03 # re(v_31)
      3 2 -4.221163e-02 # re(v_32)
      3 3 9.990899e-01 # re(v_33)
###################################
## INFORMATION FOR GAUGE
###################################
BLOCK GAUGE Q= 1.000000e+03 #  (susy scale)
      1 3.617832e-01 # g1
      2 6.370244e-01 # g2
      3 1.033219e+00 # g3
###################################
## INFORMATION FOR HMIX
###################################
BLOCK HMIX Q= 1.000000e+03 #  (susy scale)
      1 5.400000e+02 # mu
      101 2.593516e+04 # bmu
      102 1.217221e+01 # vd
      103 2.434443e+02 # vu
      3 2.437484e+02 # v
      10 1.520840e+00 # betah
      11 -5.284353e-02 # alphah
###################################
## INFORMATION FOR IMHMIX
###################################
BLOCK IMHMIX Q= 1.000000e+03 #  (susy scale)
      1 0.000000e+00 # mu
      101 0.000000e+00 # bmu
###################################
## INFORMATION FOR MSOFT
###################################
BLOCK MSOFT Q= 1.000000e+03 #  (susy scale)
      21 2.310692e+05 # mhd2
      22 -2.942692e+05 # mhu2
      1 8.500000e+02 # m1
      2 1.500000e+03 # m2
      3 4.000000e+03 # m3
###################################
## INFORMATION FOR IMMSOFT
###################################
BLOCK IMMSOFT Q= 1.000000e+03 #  (susy scale)
      1 0.000000e+00 # m1
      2 0.000000e+00 # m2
      3 0.000000e+00 # m3
###################################
## INFORMATION FOR PHASES
###################################
BLOCK PHASES Q= 1.000000e+03 #  (susy scale)
      1 1.000000e+00 # pg
###################################
## INFORMATION FOR IMPHASES
###################################
BLOCK IMPHASES Q= 1.000000e+03 #  (susy scale)
      1 0.000000e+00 # pg
###################################
## INFORMATION FOR YD
###################################
BLOCK YD Q= 1.000000e+03 #  (susy scale)
      1 1 2.653196e-04 # real(yd(1,1),dp)
      1 2 -3.999514e-20 # real(yd(1,2),dp)
      1 3 2.646978e-23 # real(yd(1,3),dp)
      2 1 -1.954413e-19 # real(yd(2,1),dp)
      2 2 5.043762e-03 # real(yd(2,2),dp)
      2 3 1.694066e-21 # real(yd(2,3),dp)
      3 1 -1.355253e-20 # real(yd(3,1),dp)
      3 2 -5.421011e-20 # real(yd(3,2),dp)
      3 3 2.484735e-01 # real(yd(3,3),dp)
###################################
## INFORMATION FOR IMYD
###################################
BLOCK IMYD Q= 1.000000e+03 #  (susy scale)
      1 1 0.000000e+00 # aimag(yd(1,1))
      1 2 0.000000e+00 # aimag(yd(1,2))
      1 3 0.000000e+00 # aimag(yd(1,3))
      2 1 0.000000e+00 # aimag(yd(2,1))
      2 2 0.000000e+00 # aimag(yd(2,2))
      2 3 0.000000e+00 # aimag(yd(2,3))
      3 1 0.000000e+00 # aimag(yd(3,1))
      3 2 0.000000e+00 # aimag(yd(3,2))
      3 3 0.000000e+00 # aimag(yd(3,3))
###################################
## INFORMATION FOR YE
###################################
BLOCK YE Q= 1.000000e+03 #  (susy scale)
      1 1 5.992424e-05 # real(ye(1,1),dp)
      1 2 0.000000e+00 # real(ye(1,2),dp)
      1 3 0.000000e+00 # real(ye(1,3),dp)
      2 1 0.000000e+00 # real(ye(2,1),dp)
      2 2 1.239044e-02 # real(ye(2,2),dp)
      2 3 0.000000e+00 # real(ye(2,3),dp)
      3 1 0.000000e+00 # real(ye(3,1),dp)
      3 2 0.000000e+00 # real(ye(3,2),dp)
      3 3 2.083875e-01 # real(ye(3,3),dp)
###################################
## INFORMATION FOR IMYE
###################################
BLOCK IMYE Q= 1.000000e+03 #  (susy scale)
      1 1 0.000000e+00 # aimag(ye(1,1))
      1 2 0.000000e+00 # aimag(ye(1,2))
      1 3 0.000000e+00 # aimag(ye(1,3))
      2 1 0.000000e+00 # aimag(ye(2,1))
      2 2 0.000000e+00 # aimag(ye(2,2))
      2 3 0.000000e+00 # aimag(ye(2,3))
      3 1 0.000000e+00 # aimag(ye(3,1))
      3 2 0.000000e+00 # aimag(ye(3,2))
      3 3 0.000000e+00 # aimag(ye(3,3))
###################################
## INFORMATION FOR YU
###################################
BLOCK YU Q= 1.000000e+03 #  (susy scale)
      1 1 6.867627e-06 # real(yu(1,1),dp)
      1 2 -8.001732e-21 # real(yu(1,2),dp)
      1 3 1.654361e-23 # real(yu(1,3),dp)
      2 1 4.248929e-18 # real(yu(2,1),dp)
      2 2 3.435854e-03 # real(yu(2,2),dp)
      2 3 8.131516e-20 # real(yu(2,3),dp)
      3 1 -2.602085e-18 # real(yu(3,1),dp)
      3 2 -1.387779e-17 # real(yu(3,2),dp)
      3 3 8.546673e-01 # real(yu(3,3),dp)
###################################
## INFORMATION FOR IMYU
###################################
BLOCK IMYU Q= 1.000000e+03 #  (susy scale)
      1 1 0.000000e+00 # aimag(yu(1,1))
      1 2 0.000000e+00 # aimag(yu(1,2))
      1 3 0.000000e+00 # aimag(yu(1,3))
      2 1 0.000000e+00 # aimag(yu(2,1))
      2 2 0.000000e+00 # aimag(yu(2,2))
      2 3 0.000000e+00 # aimag(yu(2,3))
      3 1 0.000000e+00 # aimag(yu(3,1))
      3 2 0.000000e+00 # aimag(yu(3,2))
      3 3 0.000000e+00 # aimag(yu(3,3))
###################################
## INFORMATION FOR TD
###################################
BLOCK TD Q= 1.000000e+03 #  (susy scale)
      1 1 0.000000e+00 # real(td(1,1),dp)
      1 2 0.000000e+00 # real(td(1,2),dp)
      1 3 0.000000e+00 # real(td(1,3),dp)
      2 1 0.000000e+00 # real(td(2,1),dp)
      2 2 0.000000e+00 # real(td(2,2),dp)
      2 3 0.000000e+00 # real(td(2,3),dp)
      3 1 0.000000e+00 # real(td(3,1),dp)
      3 2 0.000000e+00 # real(td(3,2),dp)
      3 3 0.000000e+00 # real(td(3,3),dp)
###################################
## INFORMATION FOR IMTD
###################################
BLOCK IMTD Q= 1.000000e+03 #  (susy scale)
      1 1 0.000000e+00 # aimag(td(1,1))
      1 2 0.000000e+00 # aimag(td(1,2))
      1 3 0.000000e+00 # aimag(td(1,3))
      2 1 0.000000e+00 # aimag(td(2,1))
      2 2 0.000000e+00 # aimag(td(2,2))
      2 3 0.000000e+00 # aimag(td(2,3))
      3 1 0.000000e+00 # aimag(td(3,1))
      3 2 0.000000e+00 # aimag(td(3,2))
      3 3 0.000000e+00 # aimag(td(3,3))
###################################
## INFORMATION FOR TE
###################################
BLOCK TE Q= 1.000000e+03 #  (susy scale)
      1 1 0.000000e+00 # real(te(1,1),dp)
      1 2 0.000000e+00 # real(te(1,2),dp)
      1 3 0.000000e+00 # real(te(1,3),dp)
      2 1 0.000000e+00 # real(te(2,1),dp)
      2 2 0.000000e+00 # real(te(2,2),dp)
      2 3 0.000000e+00 # real(te(2,3),dp)
      3 1 0.000000e+00 # real(te(3,1),dp)
      3 2 0.000000e+00 # real(te(3,2),dp)
      3 3 0.000000e+00 # real(te(3,3),dp)
###################################
## INFORMATION FOR IMTE
###################################
BLOCK IMTE Q= 1.000000e+03 #  (susy scale)
      1 1 0.000000e+00 # aimag(te(1,1))
      1 2 0.000000e+00 # aimag(te(1,2))
      1 3 0.000000e+00 # aimag(te(1,3))
      2 1 0.000000e+00 # aimag(te(2,1))
      2 2 0.000000e+00 # aimag(te(2,2))
      2 3 0.000000e+00 # aimag(te(2,3))
      3 1 0.000000e+00 # aimag(te(3,1))
      3 2 0.000000e+00 # aimag(te(3,2))
      3 3 0.000000e+00 # aimag(te(3,3))
###################################
## INFORMATION FOR TU
###################################
BLOCK TU Q= 1.000000e+03 #  (susy scale)
      1 1 -4.284258e-09 # real(tu(1,1),dp)
      1 2 -5.099034e-08 # real(tu(1,2),dp)
      1 3 -1.251334e-06 # real(tu(1,3),dp)
      2 1 -2.532561e-05 # real(tu(2,1),dp)
      2 2 -3.014200e-04 # real(tu(2,2),dp)
      2 3 -7.397032e-03 # real(tu(2,3),dp)
      3 1 7.525965e+00 # real(tu(3,1),dp)
      3 2 8.957246e+01 # real(tu(3,2),dp)
      3 3 2.198163e+03 # real(tu(3,3),dp)
###################################
## INFORMATION FOR IMTU
###################################
BLOCK IMTU Q= 1.000000e+03 #  (susy scale)
      1 1 0.000000e+00 # aimag(tu(1,1))
      1 2 0.000000e+00 # aimag(tu(1,2))
      1 3 0.000000e+00 # aimag(tu(1,3))
      2 1 0.000000e+00 # aimag(tu(2,1))
      2 2 0.000000e+00 # aimag(tu(2,2))
      2 3 0.000000e+00 # aimag(tu(2,3))
      3 1 0.000000e+00 # aimag(tu(3,1))
      3 2 0.000000e+00 # aimag(tu(3,2))
      3 3 0.000000e+00 # aimag(tu(3,3))
###################################
## INFORMATION FOR MSQ2
###################################
BLOCK MSQ2 Q= 1.000000e+03 #  (susy scale)
      1 1 3.300000e+06 # real(mq2(1,1),dp)
      1 2 6.706776e-01 # real(mq2(1,2),dp)
      1 3 -2.809057e+02 # real(mq2(1,3),dp)
      2 1 6.706776e-01 # real(mq2(2,1),dp)
      2 2 3.399996e+06 # real(mq2(2,2),dp)
      2 3 2.115736e+03 # real(mq2(2,3),dp)
      3 1 -2.809057e+02 # real(mq2(3,1),dp)
      3 2 2.115736e+03 # real(mq2(3,2),dp)
      3 3 2.210004e+06 # real(mq2(3,3),dp)
###################################
## INFORMATION FOR IMMSQ2
###################################
BLOCK IMMSQ2 Q= 1.000000e+03 #  (susy scale)
      1 1 0.000000e+00 # aimag(mq2(1,1))
      1 2 0.000000e+00 # aimag(mq2(1,2))
      1 3 0.000000e+00 # aimag(mq2(1,3))
      2 1 0.000000e+00 # aimag(mq2(2,1))
      2 2 0.000000e+00 # aimag(mq2(2,2))
      2 3 0.000000e+00 # aimag(mq2(2,3))
      3 1 0.000000e+00 # aimag(mq2(3,1))
      3 2 0.000000e+00 # aimag(mq2(3,2))
      3 3 0.000000e+00 # aimag(mq2(3,3))
###################################
## INFORMATION FOR MSL2
###################################
BLOCK MSL2 Q= 1.000000e+03 #  (susy scale)
      1 1 2.000000e+06 # real(ml2(1,1),dp)
      1 2 0.000000e+00 # real(ml2(1,2),dp)
      1 3 0.000000e+00 # real(ml2(1,3),dp)
      2 1 0.000000e+00 # real(ml2(2,1),dp)
      2 2 2.000000e+06 # real(ml2(2,2),dp)
      2 3 0.000000e+00 # real(ml2(2,3),dp)
      3 1 0.000000e+00 # real(ml2(3,1),dp)
      3 2 0.000000e+00 # real(ml2(3,2),dp)
      3 3 2.000000e+06 # real(ml2(3,3),dp)
###################################
## INFORMATION FOR IMMSL2
###################################
BLOCK IMMSL2 Q= 1.000000e+03 #  (susy scale)
      1 1 0.000000e+00 # aimag(ml2(1,1))
      1 2 0.000000e+00 # aimag(ml2(1,2))
      1 3 0.000000e+00 # aimag(ml2(1,3))
      2 1 0.000000e+00 # aimag(ml2(2,1))
      2 2 0.000000e+00 # aimag(ml2(2,2))
      2 3 0.000000e+00 # aimag(ml2(2,3))
      3 1 0.000000e+00 # aimag(ml2(3,1))
      3 2 0.000000e+00 # aimag(ml2(3,2))
      3 3 0.000000e+00 # aimag(ml2(3,3))
###################################
## INFORMATION FOR MSD2
###################################
BLOCK MSD2 Q= 1.000000e+03 #  (susy scale)
      1 1 3.000000e+06 # real(md2(1,1),dp)
      1 2 1.556874e-02 # real(md2(1,2),dp)
      1 3 1.862986e-01 # real(md2(1,3),dp)
      2 1 1.556874e-02 # real(md2(2,1),dp)
      2 2 3.100000e+06 # real(md2(2,2),dp)
      2 3 -2.138359e+01 # real(md2(2,3),dp)
      3 1 1.862986e-01 # real(md2(3,1),dp)
      3 2 -2.138359e+01 # real(md2(3,2),dp)
      3 3 3.800000e+06 # real(md2(3,3),dp)
###################################
## INFORMATION FOR IMMSD2
###################################
BLOCK IMMSD2 Q= 1.000000e+03 #  (susy scale)
      1 1 0.000000e+00 # aimag(md2(1,1))
      1 2 0.000000e+00 # aimag(md2(1,2))
      1 3 0.000000e+00 # aimag(md2(1,3))
      2 1 0.000000e+00 # aimag(md2(2,1))
      2 2 0.000000e+00 # aimag(md2(2,2))
      2 3 0.000000e+00 # aimag(md2(2,3))
      3 1 0.000000e+00 # aimag(md2(3,1))
      3 2 0.000000e+00 # aimag(md2(3,2))
      3 3 0.000000e+00 # aimag(md2(3,3))
###################################
## INFORMATION FOR MSU2
###################################
BLOCK MSU2 Q= 1.000000e+03 #  (susy scale)
      1 1 3.300000e+06 # real(mu2(1,1),dp)
      1 2 -3.352239e-09 # real(mu2(1,2),dp)
      1 3 9.962113e-04 # real(mu2(1,3),dp)
      2 1 -3.352239e-09 # real(mu2(2,1),dp)
      2 2 3.300000e+06 # real(mu2(2,2),dp)
      2 3 5.888921e+00 # real(mu2(2,3),dp)
      3 1 9.962113e-04 # real(mu2(3,1),dp)
      3 2 5.888921e+00 # real(mu2(3,2),dp)
      3 3 1.550000e+06 # real(mu2(3,3),dp)
###################################
## INFORMATION FOR IMMSU2
###################################
BLOCK IMMSU2 Q= 1.000000e+03 #  (susy scale)
      1 1 0.000000e+00 # aimag(mu2(1,1))
      1 2 0.000000e+00 # aimag(mu2(1,2))
      1 3 0.000000e+00 # aimag(mu2(1,3))
      2 1 0.000000e+00 # aimag(mu2(2,1))
      2 2 0.000000e+00 # aimag(mu2(2,2))
      2 3 0.000000e+00 # aimag(mu2(2,3))
      3 1 0.000000e+00 # aimag(mu2(3,1))
      3 2 0.000000e+00 # aimag(mu2(3,2))
      3 3 0.000000e+00 # aimag(mu2(3,3))
###################################
## INFORMATION FOR MSE2
###################################
BLOCK MSE2 Q= 1.000000e+03 #  (susy scale)
      1 1 2.000000e+06 # real(me2(1,1),dp)
      1 2 0.000000e+00 # real(me2(1,2),dp)
      1 3 0.000000e+00 # real(me2(1,3),dp)
      2 1 0.000000e+00 # real(me2(2,1),dp)
      2 2 2.000000e+06 # real(me2(2,2),dp)
      2 3 0.000000e+00 # real(me2(2,3),dp)
      3 1 0.000000e+00 # real(me2(3,1),dp)
      3 2 0.000000e+00 # real(me2(3,2),dp)
      3 3 2.000000e+06 # real(me2(3,3),dp)
###################################
## INFORMATION FOR IMMSE2
###################################
BLOCK IMMSE2 Q= 1.000000e+03 #  (susy scale)
      1 1 0.000000e+00 # aimag(me2(1,1))
      1 2 0.000000e+00 # aimag(me2(1,2))
      1 3 0.000000e+00 # aimag(me2(1,3))
      2 1 0.000000e+00 # aimag(me2(2,1))
      2 2 0.000000e+00 # aimag(me2(2,2))
      2 3 0.000000e+00 # aimag(me2(2,3))
      3 1 0.000000e+00 # aimag(me2(3,1))
      3 2 0.000000e+00 # aimag(me2(3,2))
      3 3 0.000000e+00 # aimag(me2(3,3))
###################################
## INFORMATION FOR MASS
###################################
BLOCK MASS #  mass spectrum
      1000001 1.109492e+03 # sd_1
      1000003 1.450649e+03 # sd_2
      1000005 1.486595e+03 # sd_3
      2000001 1.560017e+03 # sd_4
      2000003 1.593320e+03 # sd_5
      2000005 1.715840e+03 # sd_6
      1000002 5.991911e+02 # su_1
      1000004 1.200948e+03 # su_2
      1000006 1.554551e+03 # su_3
      2000002 1.554551e+03 # su_4
      2000004 1.558046e+03 # su_5
      2000006 1.591404e+03 # su_6
      1000011 1.411592e+03 # se_1
      1000013 1.417416e+03 # se_2
      1000015 1.417460e+03 # se_3
      2000011 1.421533e+03 # se_4
      2000013 1.421573e+03 # se_5
      2000015 1.426162e+03 # se_6
      1000012 1.418600e+03 # sv_1
      1000014 1.419002e+03 # sv_2
      1000016 1.419004e+03 # sv_3
      25 1.260965e+02 # hh_1
      35 6.727675e+02 # hh_2
      36 6.727791e+02 # ah_2
      37 8.907783e+02 # hpm_2
      22 0.000000e+00 # vp
      23 9.118870e+01 # vz
      21 0.000000e+00 # vg
      24 7.983012e+01 # vwm
      1 5.000000e-03 # fd_1
      3 9.500000e-02 # fd_2
      5 4.180000e+00 # fd_3
      2 2.500000e-03 # fu_1
      4 1.270000e+00 # fu_2
      6 1.735000e+02 # fu_3
      11 5.109989e-04 # fe_1
      13 1.056584e-01 # fe_2
      15 1.776690e+00 # fe_3
      12 0.000000e+00 # fv_1
      14 0.000000e+00 # fv_2
      16 0.000000e+00 # fv_3
      1000021 3.681749e+03 # glu
      1000022 5.423358e+02 # chi_1
      1000023 5.503699e+02 # chi_2
      1000025 8.540618e+02 # chi_3
      1000035 1.516332e+03 # chi_4
      1000024 5.471474e+02 # cha_1
      1000037 1.516635e+03 # cha_2
###################################
## INFORMATION FOR LSP
###################################
BLOCK LSP #  lsp and nlsp
      1 1.000022e+06 # lsp
      2 1.000024e+06 # nlsp
###################################
## INFORMATION FOR DSQMIX
###################################
BLOCK DSQMIX Q= 1.000000e+03 #  ()
      1 1 5.404819e-05 # real(zd(1,1),dp)
      1 2 -3.424417e-04 # real(zd(1,2),dp)
      1 3 9.999144e-01 # real(zd(1,3),dp)
      1 4 -1.040135e-09 # real(zd(1,4),dp)
      1 5 1.401518e-07 # real(zd(1,5),dp)
      1 6 1.308252e-02 # real(zd(1,6),dp)
      2 1 7.715324e-05 # real(zd(2,1),dp)
      2 2 -2.862248e-10 # real(zd(2,2),dp)
      2 3 -3.111275e-09 # real(zd(2,3),dp)
      2 4 1.000000e+00 # real(zd(2,4),dp)
      2 5 1.896022e-14 # real(zd(2,5),dp)
      2 6 -1.448295e-09 # real(zd(2,6),dp)
      3 1 1.058178e-08 # real(zd(3,1),dp)
      3 2 -1.466861e-03 # real(zd(3,2),dp)
      3 3 -3.594418e-07 # real(zd(3,3),dp)
      3 4 -1.219060e-12 # real(zd(3,4),dp)
      3 5 -9.999989e-01 # real(zd(3,5),dp)
      3 6 -2.103740e-07 # real(zd(3,6),dp)
      4 1 -1.000000e+00 # real(zd(4,1),dp)
      4 2 2.683193e-05 # real(zd(4,2),dp)
      4 3 5.381036e-05 # real(zd(4,3),dp)
      4 4 7.715324e-05 # real(zd(4,4),dp)
      4 5 -4.996393e-08 # real(zd(4,5),dp)
      4 6 1.923414e-05 # real(zd(4,6),dp)
      5 1 2.685346e-05 # real(zd(5,1),dp)
      5 2 9.999989e-01 # real(zd(5,2),dp)
      5 3 3.403120e-04 # real(zd(5,3),dp)
      5 4 -1.784309e-09 # real(zd(5,4),dp)
      5 5 -1.466861e-03 # real(zd(5,5),dp)
      5 6 1.648922e-04 # real(zd(5,6),dp)
      6 1 1.852421e-05 # real(zd(6,1),dp)
      6 2 -1.604266e-04 # real(zd(6,2),dp)
      6 3 -1.308258e-02 # real(zd(6,3),dp)
      6 4 -2.178102e-11 # real(zd(6,4),dp)
      6 5 2.967018e-08 # real(zd(6,5),dp)
      6 6 9.999144e-01 # real(zd(6,6),dp)
###################################
## INFORMATION FOR IMDSQMIX
###################################
BLOCK IMDSQMIX Q= 1.000000e+03 #  ()
      1 1 0.000000e+00 # aimag(zd(1,1))
      1 2 0.000000e+00 # aimag(zd(1,2))
      1 3 0.000000e+00 # aimag(zd(1,3))
      1 4 0.000000e+00 # aimag(zd(1,4))
      1 5 0.000000e+00 # aimag(zd(1,5))
      1 6 0.000000e+00 # aimag(zd(1,6))
      2 1 0.000000e+00 # aimag(zd(2,1))
      2 2 0.000000e+00 # aimag(zd(2,2))
      2 3 0.000000e+00 # aimag(zd(2,3))
      2 4 0.000000e+00 # aimag(zd(2,4))
      2 5 0.000000e+00 # aimag(zd(2,5))
      2 6 0.000000e+00 # aimag(zd(2,6))
      3 1 0.000000e+00 # aimag(zd(3,1))
      3 2 0.000000e+00 # aimag(zd(3,2))
      3 3 0.000000e+00 # aimag(zd(3,3))
      3 4 0.000000e+00 # aimag(zd(3,4))
      3 5 0.000000e+00 # aimag(zd(3,5))
      3 6 0.000000e+00 # aimag(zd(3,6))
      4 1 0.000000e+00 # aimag(zd(4,1))
      4 2 0.000000e+00 # aimag(zd(4,2))
      4 3 0.000000e+00 # aimag(zd(4,3))
      4 4 0.000000e+00 # aimag(zd(4,4))
      4 5 0.000000e+00 # aimag(zd(4,5))
      4 6 0.000000e+00 # aimag(zd(4,6))
      5 1 0.000000e+00 # aimag(zd(5,1))
      5 2 0.000000e+00 # aimag(zd(5,2))
      5 3 0.000000e+00 # aimag(zd(5,3))
      5 4 0.000000e+00 # aimag(zd(5,4))
      5 5 0.000000e+00 # aimag(zd(5,5))
      5 6 0.000000e+00 # aimag(zd(5,6))
      6 1 0.000000e+00 # aimag(zd(6,1))
      6 2 0.000000e+00 # aimag(zd(6,2))
      6 3 0.000000e+00 # aimag(zd(6,3))
      6 4 0.000000e+00 # aimag(zd(6,4))
      6 5 0.000000e+00 # aimag(zd(6,5))
      6 6 0.000000e+00 # aimag(zd(6,6))
###################################
## INFORMATION FOR SNUMIX
###################################
BLOCK SNUMIX Q= 1.000000e+03 #  ()
      1 1 0.000000e+00 # real(zv(1,1),dp)
      1 2 0.000000e+00 # real(zv(1,2),dp)
      1 3 1.000000e+00 # real(zv(1,3),dp)
      2 1 0.000000e+00 # real(zv(2,1),dp)
      2 2 1.000000e+00 # real(zv(2,2),dp)
      2 3 0.000000e+00 # real(zv(2,3),dp)
      3 1 1.000000e+00 # real(zv(3,1),dp)
      3 2 0.000000e+00 # real(zv(3,2),dp)
      3 3 0.000000e+00 # real(zv(3,3),dp)
###################################
## INFORMATION FOR IMSNUMIX
###################################
BLOCK IMSNUMIX Q= 1.000000e+03 #  ()
      1 1 0.000000e+00 # aimag(zv(1,1))
      1 2 0.000000e+00 # aimag(zv(1,2))
      1 3 0.000000e+00 # aimag(zv(1,3))
      2 1 0.000000e+00 # aimag(zv(2,1))
      2 2 0.000000e+00 # aimag(zv(2,2))
      2 3 0.000000e+00 # aimag(zv(2,3))
      3 1 0.000000e+00 # aimag(zv(3,1))
      3 2 0.000000e+00 # aimag(zv(3,2))
      3 3 0.000000e+00 # aimag(zv(3,3))
###################################
## INFORMATION FOR USQMIX
###################################
BLOCK USQMIX Q= 1.000000e+03 #  ()
      1 1 -7.173092e-05 # real(zu(1,1),dp)
      1 2 4.704365e-04 # real(zu(1,2),dp)
      1 3 -4.320097e-01 # real(zu(1,3),dp)
      1 4 3.921640e-10 # real(zu(1,4),dp)
      1 5 2.178207e-06 # real(zu(1,5),dp)
      1 6 9.018689e-01 # real(zu(1,6),dp)
      2 1 -2.168579e-04 # real(zu(2,1),dp)
      2 2 1.344880e-03 # real(zu(2,2),dp)
      2 3 9.018684e-01 # real(zu(2,3),dp)
      2 4 -8.874079e-10 # real(zu(2,4),dp)
      2 5 -5.486286e-06 # real(zu(2,5),dp)
      2 6 4.320087e-01 # real(zu(2,6),dp)
      3 1 9.497313e-03 # real(zu(3,1),dp)
      3 2 -1.305486e-03 # real(zu(3,2),dp)
      3 3 8.460513e-06 # real(zu(3,3),dp)
      3 4 -3.197122e-01 # real(zu(3,4),dp)
      3 5 9.474662e-01 # real(zu(3,5),dp)
      3 6 3.200876e-06 # real(zu(3,6),dp)
      4 1 3.113612e-03 # real(zu(4,1),dp)
      4 2 -4.411797e-04 # real(zu(4,2),dp)
      4 3 2.841502e-06 # real(zu(4,3),dp)
      4 4 9.475147e-01 # real(zu(4,4),dp)
      4 5 3.196967e-01 # real(zu(4,5),dp)
      4 6 1.066350e-06 # real(zu(4,6),dp)
      5 1 -9.999500e-01 # real(zu(5,1),dp)
      5 2 -6.372726e-05 # real(zu(5,2),dp)
      5 3 -1.644577e-04 # real(zu(5,3),dp)
      5 4 -8.621806e-05 # real(zu(5,4),dp)
      5 5 9.994226e-03 # real(zu(5,5),dp)
      5 6 -1.583007e-04 # real(zu(5,6),dp)
      6 1 4.962651e-05 # real(zu(6,1),dp)
      6 2 -9.999980e-01 # real(zu(6,2),dp)
      6 3 1.009672e-03 # real(zu(6,3),dp)
      6 4 -6.391197e-07 # real(zu(6,4),dp)
      6 5 -1.378593e-03 # real(zu(6,5),dp)
      6 6 1.005279e-03 # real(zu(6,6),dp)
###################################
## INFORMATION FOR IMUSQMIX
###################################
BLOCK IMUSQMIX Q= 1.000000e+03 #  ()
      1 1 0.000000e+00 # aimag(zu(1,1))
      1 2 0.000000e+00 # aimag(zu(1,2))
      1 3 0.000000e+00 # aimag(zu(1,3))
      1 4 0.000000e+00 # aimag(zu(1,4))
      1 5 0.000000e+00 # aimag(zu(1,5))
      1 6 0.000000e+00 # aimag(zu(1,6))
      2 1 0.000000e+00 # aimag(zu(2,1))
      2 2 0.000000e+00 # aimag(zu(2,2))
      2 3 0.000000e+00 # aimag(zu(2,3))
      2 4 0.000000e+00 # aimag(zu(2,4))
      2 5 0.000000e+00 # aimag(zu(2,5))
      2 6 0.000000e+00 # aimag(zu(2,6))
      3 1 0.000000e+00 # aimag(zu(3,1))
      3 2 0.000000e+00 # aimag(zu(3,2))
      3 3 0.000000e+00 # aimag(zu(3,3))
      3 4 0.000000e+00 # aimag(zu(3,4))
      3 5 0.000000e+00 # aimag(zu(3,5))
      3 6 0.000000e+00 # aimag(zu(3,6))
      4 1 0.000000e+00 # aimag(zu(4,1))
      4 2 0.000000e+00 # aimag(zu(4,2))
      4 3 0.000000e+00 # aimag(zu(4,3))
      4 4 0.000000e+00 # aimag(zu(4,4))
      4 5 0.000000e+00 # aimag(zu(4,5))
      4 6 0.000000e+00 # aimag(zu(4,6))
      5 1 0.000000e+00 # aimag(zu(5,1))
      5 2 0.000000e+00 # aimag(zu(5,2))
      5 3 0.000000e+00 # aimag(zu(5,3))
      5 4 0.000000e+00 # aimag(zu(5,4))
      5 5 0.000000e+00 # aimag(zu(5,5))
      5 6 0.000000e+00 # aimag(zu(5,6))
      6 1 0.000000e+00 # aimag(zu(6,1))
      6 2 0.000000e+00 # aimag(zu(6,2))
      6 3 0.000000e+00 # aimag(zu(6,3))
      6 4 0.000000e+00 # aimag(zu(6,4))
      6 5 0.000000e+00 # aimag(zu(6,5))
      6 6 0.000000e+00 # aimag(zu(6,6))
###################################
## INFORMATION FOR SELMIX
###################################
BLOCK SELMIX Q= 1.000000e+03 #  ()
      1 1 0.000000e+00 # real(ze(1,1),dp)
      1 2 0.000000e+00 # real(ze(1,2),dp)
      1 3 5.910149e-01 # real(ze(1,3),dp)
      1 4 0.000000e+00 # real(ze(1,4),dp)
      1 5 -5.018559e-15 # real(ze(1,5),dp)
      1 6 8.066606e-01 # real(ze(1,6),dp)
      2 1 8.379390e-16 # real(ze(2,1),dp)
      2 2 1.019992e-01 # real(ze(2,2),dp)
      2 3 -8.589357e-15 # real(ze(2,3),dp)
      2 4 1.690343e-12 # real(ze(2,4),dp)
      2 5 9.947845e-01 # real(ze(2,5),dp)
      2 6 1.248211e-14 # real(ze(2,6),dp)
      3 1 -5.013401e-04 # real(ze(3,1),dp)
      3 2 1.914843e-13 # real(ze(3,2),dp)
      3 3 -1.450198e-26 # real(ze(3,3),dp)
      3 4 -9.999999e-01 # real(ze(3,4),dp)
      3 5 1.679560e-12 # real(ze(3,5),dp)
      3 6 2.107436e-26 # real(ze(3,6),dp)
      4 1 -9.999999e-01 # real(ze(4,1),dp)
      4 2 -9.411004e-16 # real(ze(4,2),dp)
      4 3 -7.507813e-31 # real(ze(4,3),dp)
      4 4 5.013401e-04 # real(ze(4,4),dp)
      4 5 8.695245e-17 # real(ze(4,5),dp)
      4 6 1.091040e-30 # real(ze(4,6),dp)
      5 1 9.354460e-16 # real(ze(5,1),dp)
      5 2 -9.947845e-01 # real(ze(5,2),dp)
      5 3 -8.807010e-16 # real(ze(5,3),dp)
      5 4 -1.928263e-14 # real(ze(5,4),dp)
      5 5 1.019992e-01 # real(ze(5,5),dp)
      5 6 1.279840e-15 # real(ze(5,6),dp)
      6 1 0.000000e+00 # real(ze(6,1),dp)
      6 2 0.000000e+00 # real(ze(6,2),dp)
      6 3 8.066606e-01 # real(ze(6,3),dp)
      6 4 0.000000e+00 # real(ze(6,4),dp)
      6 5 1.438081e-14 # real(ze(6,5),dp)
      6 6 -5.910149e-01 # real(ze(6,6),dp)
###################################
## INFORMATION FOR IMSELMIX
###################################
BLOCK IMSELMIX Q= 1.000000e+03 #  ()
      1 1 0.000000e+00 # aimag(ze(1,1))
      1 2 0.000000e+00 # aimag(ze(1,2))
      1 3 0.000000e+00 # aimag(ze(1,3))
      1 4 0.000000e+00 # aimag(ze(1,4))
      1 5 0.000000e+00 # aimag(ze(1,5))
      1 6 0.000000e+00 # aimag(ze(1,6))
      2 1 0.000000e+00 # aimag(ze(2,1))
      2 2 0.000000e+00 # aimag(ze(2,2))
      2 3 0.000000e+00 # aimag(ze(2,3))
      2 4 0.000000e+00 # aimag(ze(2,4))
      2 5 0.000000e+00 # aimag(ze(2,5))
      2 6 0.000000e+00 # aimag(ze(2,6))
      3 1 0.000000e+00 # aimag(ze(3,1))
      3 2 0.000000e+00 # aimag(ze(3,2))
      3 3 0.000000e+00 # aimag(ze(3,3))
      3 4 0.000000e+00 # aimag(ze(3,4))
      3 5 0.000000e+00 # aimag(ze(3,5))
      3 6 0.000000e+00 # aimag(ze(3,6))
      4 1 0.000000e+00 # aimag(ze(4,1))
      4 2 0.000000e+00 # aimag(ze(4,2))
      4 3 0.000000e+00 # aimag(ze(4,3))
      4 4 0.000000e+00 # aimag(ze(4,4))
      4 5 0.000000e+00 # aimag(ze(4,5))
      4 6 0.000000e+00 # aimag(ze(4,6))
      5 1 0.000000e+00 # aimag(ze(5,1))
      5 2 0.000000e+00 # aimag(ze(5,2))
      5 3 0.000000e+00 # aimag(ze(5,3))
      5 4 0.000000e+00 # aimag(ze(5,4))
      5 5 0.000000e+00 # aimag(ze(5,5))
      5 6 0.000000e+00 # aimag(ze(5,6))
      6 1 0.000000e+00 # aimag(ze(6,1))
      6 2 0.000000e+00 # aimag(ze(6,2))
      6 3 0.000000e+00 # aimag(ze(6,3))
      6 4 0.000000e+00 # aimag(ze(6,4))
      6 5 0.000000e+00 # aimag(ze(6,5))
      6 6 0.000000e+00 # aimag(ze(6,6))
###################################
## INFORMATION FOR SCALARMIX
###################################
BLOCK SCALARMIX Q= 1.000000e+03 #  ()
      1 1 -5.281894e-02 # zh(1,1)
      1 2 -9.986041e-01 # zh(1,2)
      2 1 -9.986041e-01 # zh(2,1)
      2 2 5.281894e-02 # zh(2,2)
###################################
## INFORMATION FOR PSEUDOSCALARMIX
###################################
BLOCK PSEUDOSCALARMIX Q= 1.000000e+03 #  ()
      1 1 4.993249e-02 # za(1,1)
      1 2 -9.987526e-01 # za(1,2)
      2 1 -9.987526e-01 # za(2,1)
      2 2 -4.993249e-02 # za(2,2)
###################################
## INFORMATION FOR CHARGEMIX
###################################
BLOCK CHARGEMIX Q= 1.000000e+03 #  ()
      1 1 4.993536e-02 # zp(1,1)
      1 2 -9.987525e-01 # zp(1,2)
      2 1 -9.987525e-01 # zp(2,1)
      2 2 -4.993536e-02 # zp(2,2)
###################################
## INFORMATION FOR NMIX
###################################
BLOCK NMIX Q= 1.000000e+03 #  ()
      1 1 -1.051010e-01 # real(zn(1,1),dp)
      1 2 5.814267e-02 # real(zn(1,2),dp)
      1 3 -7.056960e-01 # real(zn(1,3),dp)
      1 4 6.982595e-01 # real(zn(1,4),dp)
      2 1 -0.000000e+00 # real(zn(2,1),dp)
      2 2 0.000000e+00 # real(zn(2,2),dp)
      2 3 0.000000e+00 # real(zn(2,3),dp)
      2 4 0.000000e+00 # real(zn(2,4),dp)
      3 1 9.942250e-01 # real(zn(3,1),dp)
      3 2 1.096680e-02 # real(zn(3,2),dp)
      3 3 -5.940544e-02 # real(zn(3,3),dp)
      3 4 8.869799e-02 # real(zn(3,4),dp)
      4 1 -4.259475e-03 # real(zn(4,1),dp)
      4 2 9.979227e-01 # real(zn(4,2),dp)
      4 3 2.374841e-02 # real(zn(4,3),dp)
      4 4 -5.973482e-02 # real(zn(4,4),dp)
###################################
## INFORMATION FOR IMNMIX
###################################
BLOCK IMNMIX Q= 1.000000e+03 #  ()
      1 1 0.000000e+00 # aimag(zn(1,1))
      1 2 0.000000e+00 # aimag(zn(1,2))
      1 3 0.000000e+00 # aimag(zn(1,3))
      1 4 0.000000e+00 # aimag(zn(1,4))
      2 1 -2.126614e-02 # aimag(zn(2,1))
      2 2 2.548603e-02 # aimag(zn(2,2))
      2 3 7.056204e-01 # aimag(zn(2,3))
      2 4 7.078122e-01 # aimag(zn(2,4))
      3 1 0.000000e+00 # aimag(zn(3,1))
      3 2 0.000000e+00 # aimag(zn(3,2))
      3 3 0.000000e+00 # aimag(zn(3,3))
      3 4 0.000000e+00 # aimag(zn(3,4))
      4 1 0.000000e+00 # aimag(zn(4,1))
      4 2 0.000000e+00 # aimag(zn(4,2))
      4 3 0.000000e+00 # aimag(zn(4,3))
      4 4 0.000000e+00 # aimag(zn(4,4))
###################################
## INFORMATION FOR UMIX
###################################
BLOCK UMIX Q= 1.000000e+03 #  ()
      1 1 3.352432e-02 # real(um(1,1),dp)
      1 2 -9.994379e-01 # real(um(1,2),dp)
      2 1 -9.994379e-01 # real(um(2,1),dp)
      2 2 -3.352432e-02 # real(um(2,2),dp)
###################################
## INFORMATION FOR IMUMIX
###################################
BLOCK IMUMIX Q= 1.000000e+03 #  ()
      1 1 -0.000000e+00 # aimag(um(1,1))
      1 2 -0.000000e+00 # aimag(um(1,2))
      2 1 -0.000000e+00 # aimag(um(2,1))
      2 2 -0.000000e+00 # aimag(um(2,2))
###################################
## INFORMATION FOR VMIX
###################################
BLOCK VMIX Q= 1.000000e+03 #  ()
      1 1 8.433242e-02 # real(up(1,1),dp)
      1 2 -9.964377e-01 # real(up(1,2),dp)
      2 1 -9.964377e-01 # real(up(2,1),dp)
      2 2 -8.433242e-02 # real(up(2,2),dp)
###################################
## INFORMATION FOR IMVMIX
###################################
BLOCK IMVMIX Q= 1.000000e+03 #  ()
      1 1 0.000000e+00 # aimag(up(1,1))
      1 2 0.000000e+00 # aimag(up(1,2))
      2 1 0.000000e+00 # aimag(up(2,1))
      2 2 0.000000e+00 # aimag(up(2,2))
###################################
## INFORMATION FOR UELMIX
###################################
BLOCK UELMIX Q= 1.000000e+03 #  ()
      1 1 1.000000e+00 # real(zel(1,1),dp)
      1 2 0.000000e+00 # real(zel(1,2),dp)
      1 3 0.000000e+00 # real(zel(1,3),dp)
      2 1 0.000000e+00 # real(zel(2,1),dp)
      2 2 1.000000e+00 # real(zel(2,2),dp)
      2 3 0.000000e+00 # real(zel(2,3),dp)
      3 1 0.000000e+00 # real(zel(3,1),dp)
      3 2 0.000000e+00 # real(zel(3,2),dp)
      3 3 1.000000e+00 # real(zel(3,3),dp)
###################################
## INFORMATION FOR IMUELMIX
###################################
BLOCK IMUELMIX Q= 1.000000e+03 #  ()
      1 1 0.000000e+00 # aimag(zel(1,1))
      1 2 0.000000e+00 # aimag(zel(1,2))
      1 3 0.000000e+00 # aimag(zel(1,3))
      2 1 0.000000e+00 # aimag(zel(2,1))
      2 2 0.000000e+00 # aimag(zel(2,2))
      2 3 0.000000e+00 # aimag(zel(2,3))
      3 1 0.000000e+00 # aimag(zel(3,1))
      3 2 0.000000e+00 # aimag(zel(3,2))
      3 3 0.000000e+00 # aimag(zel(3,3))
###################################
## INFORMATION FOR UERMIX
###################################
BLOCK UERMIX Q= 1.000000e+03 #  ()
      1 1 1.000000e+00 # real(zer(1,1),dp)
      1 2 0.000000e+00 # real(zer(1,2),dp)
      1 3 0.000000e+00 # real(zer(1,3),dp)
      2 1 0.000000e+00 # real(zer(2,1),dp)
      2 2 1.000000e+00 # real(zer(2,2),dp)
      2 3 0.000000e+00 # real(zer(2,3),dp)
      3 1 0.000000e+00 # real(zer(3,1),dp)
      3 2 0.000000e+00 # real(zer(3,2),dp)
      3 3 1.000000e+00 # real(zer(3,3),dp)
###################################
## INFORMATION FOR IMUERMIX
###################################
BLOCK IMUERMIX Q= 1.000000e+03 #  ()
      1 1 0.000000e+00 # aimag(zer(1,1))
      1 2 0.000000e+00 # aimag(zer(1,2))
      1 3 0.000000e+00 # aimag(zer(1,3))
      2 1 0.000000e+00 # aimag(zer(2,1))
      2 2 0.000000e+00 # aimag(zer(2,2))
      2 3 0.000000e+00 # aimag(zer(2,3))
      3 1 0.000000e+00 # aimag(zer(3,1))
      3 2 0.000000e+00 # aimag(zer(3,2))
      3 3 0.000000e+00 # aimag(zer(3,3))
###################################
## INFORMATION FOR UDLMIX
###################################
BLOCK UDLMIX Q= 1.000000e+03 #  ()
      1 1 1.000000e+00 # real(zdl(1,1),dp)
      1 2 1.712452e-06 # real(zdl(1,2),dp)
      1 3 2.577124e-04 # real(zdl(1,3),dp)
      2 1 -1.254254e-06 # real(zdl(2,1),dp)
      2 2 9.999984e-01 # real(zdl(2,2),dp)
      2 3 -1.777932e-03 # real(zdl(2,3),dp)
      3 1 -2.577150e-04 # real(zdl(3,1),dp)
      3 2 1.777932e-03 # real(zdl(3,2),dp)
      3 3 9.999984e-01 # real(zdl(3,3),dp)
###################################
## INFORMATION FOR IMUDLMIX
###################################
BLOCK IMUDLMIX Q= 1.000000e+03 #  ()
      1 1 0.000000e+00 # aimag(zdl(1,1))
      1 2 0.000000e+00 # aimag(zdl(1,2))
      1 3 0.000000e+00 # aimag(zdl(1,3))
      2 1 -0.000000e+00 # aimag(zdl(2,1))
      2 2 0.000000e+00 # aimag(zdl(2,2))
      2 3 -0.000000e+00 # aimag(zdl(2,3))
      3 1 -0.000000e+00 # aimag(zdl(3,1))
      3 2 0.000000e+00 # aimag(zdl(3,2))
      3 3 0.000000e+00 # aimag(zdl(3,3))
###################################
## INFORMATION FOR UDRMIX
###################################
BLOCK UDRMIX Q= 1.000000e+03 #  ()
      1 1 1.000000e+00 # real(zdr(1,1),dp)
      1 2 1.557443e-07 # real(zdr(1,2),dp)
      1 3 2.328727e-07 # real(zdr(1,3),dp)
      2 1 -1.557372e-07 # real(zdr(2,1),dp)
      2 2 1.000000e+00 # real(zdr(2,2),dp)
      2 3 -3.054798e-05 # real(zdr(2,3),dp)
      3 1 -2.328774e-07 # real(zdr(3,1),dp)
      3 2 3.054798e-05 # real(zdr(3,2),dp)
      3 3 1.000000e+00 # real(zdr(3,3),dp)
###################################
## INFORMATION FOR IMUDRMIX
###################################
BLOCK IMUDRMIX Q= 1.000000e+03 #  ()
      1 1 0.000000e+00 # aimag(zdr(1,1))
      1 2 0.000000e+00 # aimag(zdr(1,2))
      1 3 0.000000e+00 # aimag(zdr(1,3))
      2 1 0.000000e+00 # aimag(zdr(2,1))
      2 2 0.000000e+00 # aimag(zdr(2,2))
      2 3 0.000000e+00 # aimag(zdr(2,3))
      3 1 0.000000e+00 # aimag(zdr(3,1))
      3 2 0.000000e+00 # aimag(zdr(3,2))
      3 3 0.000000e+00 # aimag(zdr(3,3))
###################################
## INFORMATION FOR UULMIX
###################################
BLOCK UULMIX Q= 1.000000e+03 #  ()
      1 1 9.741669e-01 # real(zul(1,1),dp)
      1 2 2.258032e-01 # real(zul(1,2),dp)
      1 3 3.420893e-03 # real(zul(1,3),dp)
      2 1 -2.257530e-01 # real(zul(2,1),dp)
      2 2 9.733334e-01 # real(zul(2,2),dp)
      2 3 4.071475e-02 # real(zul(2,3),dp)
      3 1 5.863852e-03 # real(zul(3,1),dp)
      3 2 -4.043524e-02 # real(zul(3,2),dp)
      3 3 9.991650e-01 # real(zul(3,3),dp)
###################################
## INFORMATION FOR IMUULMIX
###################################
BLOCK IMUULMIX Q= 1.000000e+03 #  ()
      1 1 -0.000000e+00 # aimag(zul(1,1))
      1 2 -0.000000e+00 # aimag(zul(1,2))
      1 3 -0.000000e+00 # aimag(zul(1,3))
      2 1 0.000000e+00 # aimag(zul(2,1))
      2 2 0.000000e+00 # aimag(zul(2,2))
      2 3 0.000000e+00 # aimag(zul(2,3))
      3 1 0.000000e+00 # aimag(zul(3,1))
      3 2 -0.000000e+00 # aimag(zul(3,2))
      3 3 0.000000e+00 # aimag(zul(3,3))
###################################
## INFORMATION FOR UURMIX
###################################
BLOCK UURMIX Q= 1.000000e+03 #  ()
      1 1 1.000000e+00 # real(zur(1,1),dp)
      1 2 1.350873e-08 # real(zur(1,2),dp)
      1 3 -5.692636e-10 # real(zur(1,3),dp)
      2 1 -1.350873e-08 # real(zur(2,1),dp)
      2 2 1.000000e+00 # real(zur(2,2),dp)
      2 3 -3.365097e-06 # real(zur(2,3),dp)
      3 1 5.692182e-10 # real(zur(3,1),dp)
      3 2 3.365097e-06 # real(zur(3,2),dp)
      3 3 1.000000e+00 # real(zur(3,3),dp)
###################################
## INFORMATION FOR IMUURMIX
###################################
BLOCK IMUURMIX Q= 1.000000e+03 #  ()
      1 1 0.000000e+00 # aimag(zur(1,1))
      1 2 0.000000e+00 # aimag(zur(1,2))
      1 3 0.000000e+00 # aimag(zur(1,3))
      2 1 0.000000e+00 # aimag(zur(2,1))
      2 2 0.000000e+00 # aimag(zur(2,2))
      2 3 0.000000e+00 # aimag(zur(2,3))
      3 1 0.000000e+00 # aimag(zur(3,1))
      3 2 0.000000e+00 # aimag(zur(3,2))
      3 3 0.000000e+00 # aimag(zur(3,3))
###################################
## INFORMATION FOR SPHENO
###################################
BLOCK SPHENO #  spheno internal parameters
      1 -1.000000e+00 # errorlevel
      2 0.000000e+00 # spa_conventions
      11 1.000000e+00 # branching ratios
      13 1.000000e+00 # 3 body decays
      31 1.000000e+03 # gut scale
      33 1.000000e+03 # renormalization scale
      34 1.000000e-04 # precision
      35 4.000000e+01 # iterations
      38 2.000000e+00 # rge level
      40 7.297353e-03 # alpha
      41 2.495200e+00 # gamma_z
      42 2.060000e+00 # gamma_w
      50 1.000000e+00 # rotate negative fermion masses
      51 1.000000e+00 # switch to sckm matrix
      52 0.000000e+00 # ignore negative masses
      53 0.000000e+00 # ignore negative masses at mz
      55 1.000000e+00 # calculate one loop masses
      56 1.000000e+00 # calculate two-loop higgs masses
      57 1.000000e+00 # calculate low energy
      60 1.000000e+00 # include kinetic mixing
      65 1.000000e+00 # solution of tadpole equation
      8 3.000000e+00 # two-loop method: diagrammatic
      9 1.000000e+00 # gauge-less limit
      400 1.000000e-01 # step-size for purely-numerical methode for 2-loop calculation
      401 1.000000e-03 # step-size for semi-analytical methode for 2-loop calculation
      410 0.000000e+00 # indicative error in numerical derivation
###################################
## INFORMATION FOR HIGGSLHC7
###################################
BLOCK HIGGSLHC7 #  higgs production cross section at lhc7 [pb] (rescaled sm values from hxswg)
      1 25 1.421573e+01 # gluon fusion
      2 25 1.196702e+00 # vector boson fusion
      3 25 5.235246e-01 # w-h production
      4 25 3.076698e-01 # z-h production
      5 25 8.384786e-02 # t-t-h production
      1 35 9.003064e-03 # gluon fusion
      2 35 1.263963e-04 # vector boson fusion
      1 36 1.679734e-02 # gluon fusion
###################################
## INFORMATION FOR HIGGSLHC8
###################################
BLOCK HIGGSLHC8 #  higgs production cross section at lhc8 [pb] (rescaled sm values from hxswg)
      1 25 1.810604e+01 # gluon fusion
      2 25 1.543745e+00 # vector boson fusion
      3 25 6.735759e-01 # w-h production
      4 25 3.843986e-01 # z-h production
      5 25 1.269881e-01 # t-t-h production
      1 35 1.403411e-02 # gluon fusion
      2 35 2.304248e-04 # vector boson fusion
      1 36 2.618404e-02 # gluon fusion
###################################
## INFORMATION FOR HIGGSLHC13
###################################
BLOCK HIGGSLHC13 #  higgs production cross section at lhc13 [pb] (rescaled sm values from sushi 1.5.0)
      1 25 4.235702e+01 # gluon fusion
      1 35 5.570006e-02 # gluon fusion
      1 36 1.039224e-01 # gluon fusion
###################################
## INFORMATION FOR HIGGSLHC14
###################################
BLOCK HIGGSLHC14 #  higgs production cross section at lhc14 [pb] (rescaled sm values from sushi 1.5.0)
      1 25 4.770879e+01 # gluon fusion
      1 35 6.649936e-02 # gluon fusion
      1 36 1.240711e-01 # gluon fusion
###################################
## INFORMATION FOR HIGGSFCC100
###################################
BLOCK HIGGSFCC100 #  higgs production cross section at fcc-pp [pb] (rescaled sm values from sushi 1.5.0)
      1 25 7.057563e+02 # gluon fusion
      1 35 3.581014e+00 # gluon fusion
      1 36 6.681418e+00 # gluon fusion
###################################
## INFORMATION FOR EFFHIGGSCOUPLINGS
###################################
BLOCK EFFHIGGSCOUPLINGS #  values of loop-induced couplings
      25 22 22 3.592968e-05 # h-photon-photon
      25 21 21 6.094723e-05 # h-gluon-gluon
      25 22 23 0.000000e+00 # h-photon-z (not yet calculated by spheno)
      35 22 22 4.865272e-07 # h-photon-photon
      35 21 21 3.372079e-06 # h-gluon-gluon
      35 22 23 0.000000e+00 # h-photon-z (not yet calculated by spheno)
      36 22 22 7.684447e-07 # a-photon-photon
      36 21 21 6.357237e-06 # a-gluon-gluon
      36 22 23 0.000000e+00 # a-photon-z (not yet calculated by spheno)
###################################
## INFORMATION FOR DIHIGGSCOUPLINGS
###################################
BLOCK DIHIGGSCOUPLINGS # 
      1 6.034974e-01 # top-top-higgs left
      2 6.034974e-01 # top-top-higgs right
      3 -1.032264e+03 # stop1-stop1-higgs
      4 9.673653e+02 # stop1-stop2-higgs
      5 1.354573e+03 # stop2-stop2-higgs
      6 -6.761110e-01 # stop1-stop1-higgs-higgs
      7 -6.460240e-01 # stop2-stop2-higgs-higgs
      8 9.704995e+01 # higgs-higgs-higgs
###################################
## INFORMATION FOR SPHENOLOWENERGY
###################################
BLOCK SPHENOLOWENERGY #  low energy observables
      1 3.907194e-02 # t-parameter (1-loop bsm)
      2 -2.770604e-01 # s-parameter (1-loop bsm)
      3 2.456854e-03 # u-parameter (1-loop bsm)
      20 4.204553e-15 # (g-2)_e
      21 1.797582e-10 # (g-2)_mu
      22 5.086012e-08 # (g-2)_tau
      23 0.000000e+00 # edm(e)
      24 0.000000e+00 # edm(mu)
      25 0.000000e+00 # edm(tau)
      39 -2.437157e-04 # delta(rho)
###################################
## INFORMATION FOR FLAVORKITQFV
###################################
BLOCK FLAVORKITQFV #  quark flavor violating observables
      200 8.033009e-04 # br(b->x_s gamma)
      201 2.550162e+00 # br(b->x_s gamma)/br(b->x_s gamma)_sm
      300 6.415243e-04 # br(d->mu nu)
      301 9.931949e-01 # br(d->mu nu)/br(d->mu nu)_sm
      400 6.376002e+01 # br(ds->mu nu)
      401 1.042924e+04 # br(ds->mu nu)/br(ds->mu nu)_sm
      402 6.231322e+02 # br(ds->tau nu)
      403 1.042925e+04 # br(ds->tau nu)/br(ds->tau nu)_sm
      500 6.802926e+01 # br(b->mu nu)
      501 1.202592e+08 # br(b->mu nu)/br(b->mu nu)_sm
      502 1.513741e+04 # br(b->tau nu)
      503 1.202593e+08 # br(b->tau nu)/br(b->tau nu)_sm
      600 5.929215e+03 # br(k->mu nu)
      601 8.556208e+03 # br(k->mu nu)/br(k->mu nu)_sm
      602 2.476477e-05 # r_k = br(k->e nu)/(k->mu nu)
      603 1.812997e+03 # r_k^sm = br(k->e nu)_sm/(k->mu nu)_sm
      1900 1.049376e+01 # delta(m_bs)
      1901 5.864411e-01 # delta(m_bs)/delta(m_bs)_sm
      1902 3.981292e-01 # delta(m_bd)
      1903 9.954336e-01 # delta(m_bd)/delta(m_bd)_sm
      4000 8.285889e-15 # br(b^0_d->e e)
      4001 3.406117e+00 # br(b^0_d->e e)/br(b^0_d->e e)_sm
      4002 2.615257e-13 # br(b^0_s->e e)
      4003 3.462322e+00 # br(b^0_s->e e)/br(b^0_s->e e)_sm
      4004 3.533985e-10 # br(b^0_d->mu mu)
      4005 3.400676e+00 # br(b^0_d->mu mu)/br(b^0_d->mu mu)_sm
      4006 1.115513e-08 # br(b^0_s->mu mu)
      4007 3.456979e+00 # br(b^0_s->mu mu)/br(b^0_s->mu mu)_sm
      4008 4.062884e-08 # br(b^0_d->tau tau)
      4009 1.867845e+00 # br(b^0_d->tau tau)/br(b^0_d->tau tau)_sm
      4010 1.335540e-06 # br(b^0_s->tau tau)
      4011 1.951536e+00 # br(b^0_s->tau tau)/br(b^0_s->tau tau)_sm
      5000 1.757623e-06 # br(b-> s e e)
      5001 1.061822e+00 # br(b-> s e e)/br(b-> s e e)_sm
      5002 1.732642e-06 # br(b-> s mu mu)
      5003 1.079669e+00 # br(b-> s mu mu)/br(b-> s mu mu)_sm
      6000 1.010854e-07 # br(b -> k mu mu)
      6001 9.106792e-01 # br(b -> k mu mu)/br(b -> k mu mu)_sm
      6002 1.010854e-07 # br(b -> k mu mu)
      6003 9.106792e-01 # br(b -> k mu mu)/br(b -> k mu mu)_sm
      7000 3.822397e-05 # br(b->s nu nu)
      7001 1.000662e+00 # br(b->s nu nu)/br(b->s nu nu)_sm
      7002 1.769483e-06 # br(b->d nu nu)
      7003 1.000441e+00 # br(b->d nu nu)/br(b->d nu nu)_sm
      8000 1.247309e-10 # br(k^+ -> pi^+ nu nu)
      8001 1.006923e+00 # br(k^+ -> pi^+ nu nu)/br(k^+ -> pi^+ nu nu)_sm
      8002 2.827246e-11 # br(k_l -> pi^0 nu nu)
      8003 1.000632e+00 # br(k_l -> pi^0 nu nu)/br(k_l -> pi^0 nu nu)_sm
      8004 0.000000e+00 # br(k^0_l -> e mu)
      8005 0.000000e+00 # br(k^0_l -> e mu)/br(k^0_l -> e mu)_sm
      9100 -3.783144e-17 # delta(m_k)
      9102 -1.847055e-02 # delta(m_k)/delta(m_k)_sm
      9103 1.610529e-03 # epsilon_k
      9104 8.342667e-01 # epsilon_k/epsilon_k^sm
###################################
## INFORMATION FOR FLAVORKITLFV
###################################
BLOCK FLAVORKITLFV #  lepton flavor violating observables
      701 0.000000e+00 # br(mu->e gamma)
      702 0.000000e+00 # br(tau->e gamma)
      703 0.000000e+00 # br(tau->mu gamma)
      800 0.000000e+00 # cr(mu-e, al)
      801 0.000000e+00 # cr(mu-e, ti)
      802 0.000000e+00 # cr(mu-e, sr)
      803 0.000000e+00 # cr(mu-e, sb)
      804 0.000000e+00 # cr(mu-e, au)
      805 0.000000e+00 # cr(mu-e, pb)
      901 0.000000e+00 # br(mu->3e)
      902 0.000000e+00 # br(tau->3e)
      903 0.000000e+00 # br(tau->3mu)
      904 0.000000e+00 # br(tau- -> e- mu+ mu-)
      905 0.000000e+00 # br(tau- -> mu- e+ e-)
      906 0.000000e+00 # br(tau- -> e+ mu- mu-)
      907 0.000000e+00 # br(tau- -> mu+ e- e-)
      1001 0.000000e+00 # br(z->e mu)
      1002 0.000000e+00 # br(z->e tau)
      1003 0.000000e+00 # br(z->mu tau)
      1101 0.000000e+00 # br(h->e mu)
      1102 0.000000e+00 # br(h->e tau)
      1103 0.000000e+00 # br(h->mu tau)
      2001 0.000000e+00 # br(tau->e pi)
      2002 0.000000e+00 # br(tau->e eta)
      2003 0.000000e+00 # br(tau->e eta')
      2004 0.000000e+00 # br(tau->mu pi)
      2005 0.000000e+00 # br(tau->mu eta)
      2006 0.000000e+00 # br(tau->mu eta')
###################################
## INFORMATION FOR FWCOEF
###################################
BLOCK FWCOEF Q= 1.600000e+02 #  wilson coefficients at scale q
      305 4422 0 0 -1.707580e-09 # coeffc7sm
      305 4422 0 2 -5.540599e-09 # coeffc7
      305 4322 0 2 -1.048718e-10 # coeffc7p
      305 4422 0 1 -3.833019e-09 # coeffc7np
      305 4322 0 1 -1.048718e-10 # coeffc7pnp
      305 6421 0 0 -8.553468e-10 # coeffc8sm
      305 6421 0 2 -3.113534e-09 # coeffc8
      305 6321 0 2 -5.957683e-11 # coeffc8p
      305 6421 0 1 -2.258187e-09 # coeffc8np
      305 6321 0 1 -5.957683e-11 # coeffc8pnp
      3051111 4133 0 0 1.025875e-09 # coeffc9eesm
      3051111 4133 0 2 1.025864e-09 # coeffc9ee
      3051111 4233 0 2 -4.310768e-13 # coeffc9pee
      3051111 4133 0 1 -1.052752e-14 # coeffc9eenp
      3051111 4233 0 1 -4.310768e-13 # coeffc9peenp
      3051111 4137 0 0 -3.904948e-09 # coeffc10eesm
      3051111 4137 0 2 -3.904919e-09 # coeffc10ee
      3051111 4237 0 2 -4.347540e-12 # coeffc10pee
      3051111 4137 0 1 2.900017e-14 # coeffc10eenp
      3051111 4237 0 1 4.347540e-12 # coeffc10peenp
      3051313 4133 0 0 1.025874e-09 # coeffc9mumusm
      3051313 4133 0 2 1.025861e-09 # coeffc9mumu
      3051313 4233 0 2 -4.340946e-13 # coeffc9pmumu
      3051313 4133 0 1 -1.310838e-14 # coeffc9mumunp
      3051313 4233 0 1 -4.340946e-13 # coeffc9pmumunp
      3051313 4137 0 0 -3.904948e-09 # coeffc10mumusm
      3051313 4137 0 2 -3.904922e-09 # coeffc10mumu
      3051313 4237 0 2 -4.344522e-12 # coeffc10pmumu
      3051313 4137 0 1 2.641935e-14 # coeffc10mumunp
      3051313 4237 0 1 -4.344522e-12 # coeffc10pmumunp
      3051212 4141 0 0 -1.206378e-08 # coeffclnu1nu1sm
      3051212 4141 0 2 -1.206371e-08 # coeffclnu1nu1
      3051212 4241 0 2 8.695077e-12 # coeffclpnu1nu1
      3051212 4141 0 1 7.604930e-14 # coeffclnu1nu1np
      3051212 4241 0 1 8.695077e-12 # coeffclpnu1nu1np
      3051414 4141 0 0 -1.206367e-08 # coeffclnu2nu2sm
      3051414 4141 0 2 -1.206364e-08 # coeffclnu2nu2
      3051414 4241 0 2 8.701106e-12 # coeffclpnu2nu2
      3051414 4141 0 1 3.058481e-14 # coeffclnu2nu2np
      3051414 4241 0 1 8.701106e-12 # coeffclpnu2nu2np
      3051616 4141 0 0 -1.203912e-08 # coeffclnu3nu3sm
      3051616 4141 0 2 -1.204997e-08 # coeffclnu3nu3
      3051616 4241 0 2 1.022218e-11 # coeffclpnu3nu3
      3051616 4141 0 1 -1.084816e-11 # coeffclnu3nu3np
      3051616 4241 0 1 1.022218e-11 # coeffclpnu3nu3np
      3051212 4142 0 0 0.000000e+00 # coeffcrnu1nu1sm
      3051212 4142 0 2 0.000000e+00 # coeffcrnu1nu1
      3051212 4242 0 2 0.000000e+00 # coeffcrpnu1nu1
      3051212 4142 0 1 0.000000e+00 # coeffcrnu1nu1np
      3051212 4242 0 1 0.000000e+00 # coeffcrpnu1nu1np
      3051414 4142 0 0 0.000000e+00 # coeffcrnu2nu2sm
      3051414 4142 0 2 0.000000e+00 # coeffcrnu2nu2
      3051414 4242 0 2 0.000000e+00 # coeffcrpnu2nu2
      3051414 4142 0 1 0.000000e+00 # coeffcrnu2nu2np
      3051414 4242 0 1 0.000000e+00 # coeffcrpnu2nu2np
      3051616 4142 0 0 0.000000e+00 # coeffcrnu3nu3sm
      3051616 4142 0 2 0.000000e+00 # coeffcrnu3nu3
      3051616 4242 0 2 0.000000e+00 # coeffcrpnu3nu3
      3051616 4142 0 1 0.000000e+00 # coeffcrnu3nu3np
      3051616 4242 0 1 0.000000e+00 # coeffcrpnu3nu3np
      1030103 3131 0 2 -1.159079e-21 # coeffkk_sll
      1030103 3232 0 2 -4.184197e-19 # coeffkk_srr
      1030103 3132 0 2 -1.251690e-14 # coeffkk_slr
      1030103 4141 0 2 9.563535e-14 # coeffkk_vll
      1030103 4242 0 2 3.059018e-23 # coeffkk_vrr
      1030103 4142 0 2 -1.036602e-20 # coeffkk_vlr
      1030103 4343 0 2 2.091110e-29 # coeffkk_tll
      1030103 4444 0 2 -1.019034e-26 # coeffkk_trr
      1050105 3131 0 2 -9.095749e-21 # coeffbb_sll
      1050105 3232 0 2 -8.867242e-15 # coeffbb_srr
      1050105 3132 0 2 -2.007903e-14 # coeffbb_slr
      1050105 4141 0 2 3.337059e-12 # coeffbb_vll
      1050105 4242 0 2 -2.771576e-19 # coeffbb_vrr
      1050105 4142 0 2 -9.609615e-18 # coeffbb_vlr
      1050105 4343 0 2 1.268936e-26 # coeffbb_tll
      1050105 4444 0 2 -1.092492e-19 # coeffbb_trr
      3050305 3131 0 2 -9.947017e-17 # coeffbsbs_sll
      3050305 3232 0 2 -2.686272e-13 # coeffbsbs_srr
      3050305 3132 0 2 -1.158544e-11 # coeffbsbs_slr
      3050305 4141 0 2 9.749956e-11 # coeffbsbs_vll
      3050305 4242 0 2 -2.958593e-15 # coeffbsbs_vrr
      3050305 4142 0 2 -5.423893e-15 # coeffbsbs_vlr
      3050305 4343 0 2 -1.701366e-22 # coeffbsbs_tll
      3050305 4444 0 2 -3.176311e-18 # coeffbsbs_trr
      1030103 3131 0 1 -1.157250e-21 # coeffkk_sllnp
      1030103 3232 0 1 -4.177598e-19 # coeffkk_srrnp
      1030103 3132 0 1 -1.251689e-14 # coeffkk_slrnp
      1030103 4141 0 1 2.131948e-16 # coeffkk_vllnp
      1030103 4242 0 1 3.059017e-23 # coeffkk_vrrnp
      1030103 4142 0 1 -1.033128e-20 # coeffkk_vlrnp
      1030103 4343 0 1 2.091110e-29 # coeffkk_tllnp
      1030103 4444 0 1 -1.019034e-26 # coeffkk_trrnp
      1050105 3131 0 1 -8.134263e-21 # coeffbb_sllnp
      1050105 3232 0 1 -7.929860e-15 # coeffbb_srrnp
      1050105 3132 0 1 -2.007144e-14 # coeffbb_slrnp
      1050105 4141 0 1 2.244794e-14 # coeffbb_vllnp
      1050105 4242 0 1 -2.771579e-19 # coeffbb_vrrnp
      1050105 4142 0 1 -8.660258e-18 # coeffbb_vlrnp
      1050105 4343 0 1 1.268936e-26 # coeffbb_tllnp
      1050105 4444 0 1 -1.092492e-19 # coeffbb_trrnp
      3050305 3131 0 1 -8.933056e-17 # coeffbsbs_sllnp
      3050305 3232 0 1 -2.412432e-13 # coeffbsbs_srrnp
      3050305 3132 0 1 -1.158123e-11 # coeffbsbs_slrnp
      3050305 4141 0 1 6.558520e-13 # coeffbsbs_vllnp
      3050305 4242 0 1 -2.958596e-15 # coeffbsbs_vrrnp
      3050305 4142 0 1 -4.896956e-15 # coeffbsbs_vlrnp
      3050305 4343 0 1 -1.701366e-22 # coeffbsbs_tllnp
      3050305 4444 0 1 -3.176311e-18 # coeffbsbs_trrnp
      1030103 3131 0 0 -1.828188e-24 # coeffkk_sllsm
      1030103 3232 0 0 -6.599637e-22 # coeffkk_srrsm
      1030103 3132 0 0 -8.382813e-21 # coeffkk_slrsm
      1030103 4141 0 0 9.542215e-14 # coeffkk_vllsm
      1030103 4242 0 0 1.168994e-29 # coeffkk_vrrsm
      1030103 4142 0 0 -3.473525e-23 # coeffkk_vlrsm
      1030103 4343 0 0 -2.592290e-47 # coeffkk_tllsm
      1030103 4444 0 0 -6.850649e-45 # coeffkk_trrsm
      1050105 3131 0 0 -9.614854e-22 # coeffbb_sllsm
      1050105 3232 0 0 -9.373820e-16 # coeffbb_srrsm
      1050105 3132 0 0 -7.588062e-18 # coeffbb_slrsm
      1050105 4141 0 0 3.314611e-12 # coeffbb_vllsm
      1050105 4242 0 0 2.793380e-25 # coeffbb_vrrsm
      1050105 4142 0 0 -9.493572e-19 # coeffbb_vlrsm
      1050105 4343 0 0 -5.165283e-54 # coeffbb_tllsm
      1050105 4444 0 0 -1.241226e-48 # coeffbb_trrsm
      3050305 3131 0 0 -1.013961e-17 # coeffbsbs_sllsm
      3050305 3232 0 0 -2.738393e-14 # coeffbsbs_srrsm
      3050305 3132 0 0 -4.213012e-15 # coeffbsbs_slrsm
      3050305 4141 0 0 9.684371e-11 # coeffbsbs_vllsm
      3050305 4242 0 0 2.947641e-21 # coeffbsbs_vrrsm
      3050305 4142 0 0 -5.269368e-16 # coeffbsbs_vlrsm
      3050305 4343 0 0 3.279545e-55 # coeffbsbs_tllsm
      3050305 4444 0 0 -6.739395e-47 # coeffbsbs_trrsm
###################################
## INFORMATION FOR IMFWCOEF
###################################
BLOCK IMFWCOEF Q= 1.600000e+02 #  im(wilson coefficients) at scale q
      305 4422 0 0 -3.047621e-11 # coeffc7sm
      305 4422 0 2 -9.891544e-11 # coeffc7
      305 4322 0 2 -1.929664e-12 # coeffc7p
      305 4422 0 1 -6.843924e-11 # coeffc7np
      305 4322 0 1 -1.929664e-12 # coeffc7pnp
      305 6421 0 0 -1.526714e-11 # coeffc8sm
      305 6421 0 2 -5.557629e-11 # coeffc8
      305 6321 0 2 -1.079475e-12 # coeffc8p
      305 6421 0 1 -4.030915e-11 # coeffc8np
      305 6321 0 1 -1.079475e-12 # coeffc8pnp
      3051111 4133 0 0 -1.831759e-11 # coeffc9eesm
      3051111 4133 0 2 -1.831533e-11 # coeffc9ee
      3051111 4233 0 2 7.695729e-15 # coeffc9pee
      3051111 4133 0 1 2.259208e-15 # coeffc9eenp
      3051111 4233 0 1 7.695729e-15 # coeffc9peenp
      3051111 4137 0 0 6.968857e-11 # coeffc10eesm
      3051111 4137 0 2 6.966602e-11 # coeffc10ee
      3051111 4237 0 2 7.761368e-14 # coeffc10pee
      3051111 4137 0 1 -2.255359e-14 # coeffc10eenp
      3051111 4237 0 1 -7.761368e-14 # coeffc10peenp
      3051313 4133 0 0 -1.831758e-11 # coeffc9mumusm
      3051313 4133 0 2 -1.831528e-11 # coeffc9mumu
      3051313 4233 0 2 7.749493e-15 # coeffc9pmumu
      3051313 4133 0 1 2.305244e-15 # coeffc9mumunp
      3051313 4233 0 1 7.749493e-15 # coeffc9pmumunp
      3051313 4137 0 0 6.968858e-11 # coeffc10mumusm
      3051313 4137 0 2 6.966607e-11 # coeffc10mumu
      3051313 4237 0 2 7.755992e-14 # coeffc10pmumu
      3051313 4137 0 1 -2.250755e-14 # coeffc10mumunp
      3051313 4237 0 1 7.755992e-14 # coeffc10pmumunp
      3051212 4141 0 0 2.153569e-10 # coeffclnu1nu1sm
      3051212 4141 0 2 2.153114e-10 # coeffclnu1nu1
      3051212 4241 0 2 -1.552273e-13 # coeffclpnu1nu1
      3051212 4141 0 1 -4.544997e-14 # coeffclnu1nu1np
      3051212 4241 0 1 -1.552273e-13 # coeffclpnu1nu1np
      3051414 4141 0 0 2.153539e-10 # coeffclnu2nu2sm
      3051414 4141 0 2 2.153093e-10 # coeffclnu2nu2
      3051414 4241 0 2 -1.553348e-13 # coeffclpnu2nu2
      3051414 4141 0 1 -4.456280e-14 # coeffclnu2nu2np
      3051414 4241 0 1 -1.553348e-13 # coeffclpnu2nu2np
      3051616 4141 0 0 2.148938e-10 # coeffclnu3nu3sm
      3051616 4141 0 2 2.150494e-10 # coeffclnu3nu3
      3051616 4241 0 2 -1.824655e-13 # coeffclpnu3nu3
      3051616 4141 0 1 1.556123e-13 # coeffclnu3nu3np
      3051616 4241 0 1 -1.824655e-13 # coeffclpnu3nu3np
      3051212 4142 0 0 0.000000e+00 # coeffcrnu1nu1sm
      3051212 4142 0 2 0.000000e+00 # coeffcrnu1nu1
      3051212 4242 0 2 0.000000e+00 # coeffcrpnu1nu1
      3051212 4142 0 1 0.000000e+00 # coeffcrnu1nu1np
      3051212 4242 0 1 0.000000e+00 # coeffcrpnu1nu1np
      3051414 4142 0 0 0.000000e+00 # coeffcrnu2nu2sm
      3051414 4142 0 2 0.000000e+00 # coeffcrnu2nu2
      3051414 4242 0 2 0.000000e+00 # coeffcrpnu2nu2
      3051414 4142 0 1 0.000000e+00 # coeffcrnu2nu2np
      3051414 4242 0 1 0.000000e+00 # coeffcrpnu2nu2np
      3051616 4142 0 0 0.000000e+00 # coeffcrnu3nu3sm
      3051616 4142 0 2 0.000000e+00 # coeffcrnu3nu3
      3051616 4242 0 2 0.000000e+00 # coeffcrpnu3nu3
      3051616 4142 0 1 0.000000e+00 # coeffcrnu3nu3np
      3051616 4242 0 1 0.000000e+00 # coeffcrpnu3nu3np
      1030103 3131 0 2 -5.108736e-22 # coeffkk_sll
      1030103 3232 0 2 -1.844220e-19 # coeffkk_srr
      1030103 3132 0 2 -2.010809e-17 # coeffkk_slr
      1030103 4141 0 2 6.159316e-15 # coeffkk_vll
      1030103 4242 0 2 -2.027251e-24 # coeffkk_vrr
      1030103 4142 0 2 -4.987384e-21 # coeffkk_vlr
      1030103 4343 0 2 7.693558e-30 # coeffkk_tll
      1030103 4444 0 2 -7.585171e-27 # coeffkk_trr
      1050105 3131 0 2 -8.889225e-21 # coeffbb_sll
      1050105 3232 0 2 -8.665967e-15 # coeffbb_srr
      1050105 3132 0 2 -1.950162e-14 # coeffbb_slr
      1050105 4141 0 2 3.017224e-12 # coeffbb_vll
      1050105 4242 0 2 -2.572784e-19 # coeffbb_vrr
      1050105 4142 0 2 -9.018667e-18 # coeffbb_vlr
      1050105 4343 0 2 4.149669e-27 # coeffbb_tll
      1050105 4444 0 2 -9.965502e-20 # coeffbb_trr
      3050305 3131 0 2 3.730650e-18 # coeffbsbs_sll
      3050305 3232 0 2 1.007473e-14 # coeffbsbs_srr
      3050305 3132 0 2 4.328199e-13 # coeffbsbs_slr
      3050305 4141 0 2 -3.481945e-12 # coeffbsbs_vll
      3050305 4242 0 2 1.074494e-16 # coeffbsbs_vrr
      3050305 4142 0 2 1.984076e-16 # coeffbsbs_vlr
      3050305 4343 0 2 -1.289492e-23 # coeffbsbs_tll
      3050305 4444 0 2 1.146802e-19 # coeffbsbs_trr
      1030103 3131 0 1 -5.092866e-22 # coeffkk_sllnp
      1030103 3232 0 1 -1.838491e-19 # coeffkk_srrnp
      1030103 3132 0 1 -2.010779e-17 # coeffkk_slrnp
      1030103 4141 0 1 3.915746e-17 # coeffkk_vllnp
      1030103 4242 0 1 -2.027252e-24 # coeffkk_vrrnp
      1030103 4142 0 1 -4.957230e-21 # coeffkk_vlrnp
      1030103 4343 0 1 7.693558e-30 # coeffkk_tllnp
      1030103 4444 0 1 -7.585171e-27 # coeffkk_trrnp
      1050105 3131 0 1 -8.020142e-21 # coeffbb_sllnp
      1050105 3232 0 1 -7.818672e-15 # coeffbb_srrnp
      1050105 3132 0 1 -1.949475e-14 # coeffbb_slrnp
      1050105 4141 0 1 2.028974e-14 # coeffbb_vllnp
      1050105 4242 0 1 -2.572786e-19 # coeffbb_vrrnp
      1050105 4142 0 1 -8.160547e-18 # coeffbb_vlrnp
      1050105 4343 0 1 4.149669e-27 # coeffbb_tllnp
      1050105 4444 0 1 -9.965502e-20 # coeffbb_trrnp
      3050305 3131 0 1 3.368607e-18 # coeffbsbs_sllnp
      3050305 3232 0 1 9.096963e-15 # coeffbsbs_srrnp
      3050305 3132 0 1 4.326694e-13 # coeffbsbs_slrnp
      3050305 4141 0 1 -2.341565e-14 # coeffbsbs_vllnp
      3050305 4242 0 1 1.074495e-16 # coeffbsbs_vrrnp
      3050305 4142 0 1 1.795929e-16 # coeffbsbs_vlrnp
      3050305 4343 0 1 -1.289492e-23 # coeffbsbs_tllnp
      3050305 4444 0 1 1.146802e-19 # coeffbsbs_trrnp
      1030103 3131 0 0 -1.587062e-24 # coeffkk_sllsm
      1030103 3232 0 0 -5.729190e-22 # coeffkk_srrsm
      1030103 3132 0 0 -3.049293e-22 # coeffkk_slrsm
      1030103 4141 0 0 6.120158e-15 # coeffkk_vllsm
      1030103 4242 0 0 2.613596e-31 # coeffkk_vrrsm
      1030103 4142 0 0 -3.015391e-23 # coeffkk_vlrsm
      1030103 4343 0 0 -6.834985e-48 # coeffkk_tllsm
      1030103 4444 0 0 6.193354e-46 # coeffkk_trrsm
      1050105 3131 0 0 -8.690822e-22 # coeffbb_sllsm
      1050105 3232 0 0 -8.472953e-16 # coeffbb_srrsm
      1050105 3132 0 0 -6.863280e-18 # coeffbb_slrsm
      1050105 4141 0 0 2.996934e-12 # coeffbb_vllsm
      1050105 4242 0 0 2.528214e-25 # coeffbb_vrrsm
      1050105 4142 0 0 -8.581196e-19 # coeffbb_vlrsm
      1050105 4343 0 0 -1.311818e-54 # coeffbb_tllsm
      1050105 4444 0 0 -8.597238e-49 # coeffbb_trrsm
      3050305 3131 0 0 3.620427e-19 # coeffbsbs_sllsm
      3050305 3232 0 0 9.777649e-16 # coeffbsbs_srrsm
      3050305 3132 0 0 1.504919e-16 # coeffbsbs_slrsm
      3050305 4141 0 0 -3.458529e-12 # coeffbsbs_vllsm
      3050305 4242 0 0 -1.053361e-22 # coeffbsbs_vrrsm
      3050305 4142 0 0 1.881469e-17 # coeffbsbs_vlrsm
      3050305 4343 0 0 0.000000e+00 # coeffbsbs_tllsm
      3050305 4444 0 0 1.504517e-48 # coeffbsbs_trrsm
###################################
## INFORMATION FOR FINETUNING
###################################
BLOCK FINETUNING # 
      0 0.000000e+00 # overall ft
      1 0.000000e+00 # m0
      2 0.000000e+00 # m12
      3 0.000000e+00 # azero
      4 0.000000e+00 # \[mu]
      5 0.000000e+00 # b[\[mu]]
###################################
## INFORMATION FOR TREELEVELUNITARITY
###################################
BLOCK TREELEVELUNITARITY # 
      0 1.000000e+00 # tree-level unitarity limits fulfilled or not
      1 0.000000e+00 # maximal scattering eigenvalue
###################################
## INFORMATION FOR DECAY
###################################
DECAY 1000001 6.492408e+01 # sd_1
      1.275816e-01 2 -1000024 6 # br(sd_1 -> fu_3 cha_1 )
      6.332937e-03 2 5 1000022 # br(sd_1 -> fd_3 chi_1 )
      5.955473e-03 2 5 1000023 # br(sd_1 -> fd_3 chi_2 )
      3.683932e-04 2 5 1000025 # br(sd_1 -> fd_3 chi_3 )
      8.597614e-01 2 -24 1000002 # br(sd_1 -> su_1 vwm )

DECAY 1000003 3.613662e-01 # sd_2
      1.898987e-02 2 1 1000022 # br(sd_2 -> fd_1 chi_1 )
      7.718864e-04 2 1 1000023 # br(sd_2 -> fd_1 chi_2 )
      9.802341e-01 2 1 1000025 # br(sd_2 -> fd_1 chi_3 )

DECAY 1000005 3.902007e-01 # sd_3
      1.380753e-03 2 -1000024 4 # br(sd_3 -> fu_2 cha_1 )
      1.905410e-02 2 3 1000022 # br(sd_3 -> fd_2 chi_1 )
      1.447292e-03 2 3 1000023 # br(sd_3 -> fd_2 chi_2 )
      9.780412e-01 2 3 1000025 # br(sd_3 -> fd_2 chi_3 )

DECAY 2000001 1.993526e-01 # sd_4
      5.182221e-02 2 -1000024 2 # br(sd_4 -> fu_1 cha_1 )
      1.801244e-01 2 -1000037 2 # br(sd_4 -> fu_1 cha_2 )
      2.854949e-03 2 -1000024 4 # br(sd_4 -> fu_2 cha_1 )
      9.671799e-03 2 -1000037 4 # br(sd_4 -> fu_2 cha_2 )
      2.828086e-03 2 -1000024 6 # br(sd_4 -> fu_3 cha_1 )
      1.486876e-01 2 1 1000022 # br(sd_4 -> fd_1 chi_1 )
      2.109344e-02 2 1 1000023 # br(sd_4 -> fd_1 chi_2 )
      4.866607e-01 2 1 1000025 # br(sd_4 -> fd_1 chi_3 )
      9.607779e-02 2 1 1000035 # br(sd_4 -> fd_1 chi_4 )
      1.067452e-04 2 -37 1000002 # br(sd_4 -> su_1 hpm_2 )

DECAY 2000003 3.496379e-01 # sd_5
      1.639641e-03 2 -1000024 2 # br(sd_5 -> fu_1 cha_1 )
      1.653938e-02 2 -1000037 2 # br(sd_5 -> fu_1 cha_2 )
      3.123929e-02 2 -1000024 4 # br(sd_5 -> fu_2 cha_1 )
      3.072047e-01 2 -1000037 4 # br(sd_5 -> fu_2 cha_2 )
      7.946932e-02 2 -1000024 6 # br(sd_5 -> fu_3 cha_1 )
      8.842930e-02 2 3 1000022 # br(sd_5 -> fd_2 chi_1 )
      1.332864e-02 2 3 1000023 # br(sd_5 -> fd_2 chi_2 )
      2.935421e-01 2 3 1000025 # br(sd_5 -> fd_2 chi_3 )
      1.631718e-01 2 3 1000035 # br(sd_5 -> fd_2 chi_4 )
      3.395527e-03 2 -37 1000002 # br(sd_5 -> su_1 hpm_2 )
      4.855747e-04 2 -24 1000002 # br(sd_5 -> su_1 vwm )
      1.529991e-03 2 -24 1000004 # br(sd_5 -> su_2 vwm )

DECAY 2000005 4.169766e+00 # sd_6
      7.337802e-04 2 -1000024 4 # br(sd_6 -> fu_2 cha_1 )
      3.988257e-01 2 -1000024 6 # br(sd_6 -> fu_3 cha_1 )
      2.043760e-01 2 5 1000022 # br(sd_6 -> fd_3 chi_1 )
      2.031032e-01 2 5 1000023 # br(sd_6 -> fd_3 chi_2 )
      1.347034e-01 2 5 1000025 # br(sd_6 -> fd_3 chi_3 )
      1.426858e-02 2 25 1000001 # br(sd_6 -> sd_1 hh_1 )
      7.424635e-04 2 -37 1000002 # br(sd_6 -> su_1 hpm_2 )
      1.264936e-02 2 23 1000001 # br(sd_6 -> sd_1 vz )
      1.664566e-02 2 -24 1000002 # br(sd_6 -> su_1 vwm )
      1.383571e-02 2 -24 1000004 # br(sd_6 -> su_2 vwm )

DECAY 1000002 1.897684e-01 # su_1
      1.815656e-03 2 3 1000024 # br(su_1 -> cha_1^* fd_2 )
      9.981459e-01 2 5 1000024 # br(su_1 -> cha_1^* fd_3 )

DECAY 1000004 6.015586e+01 # su_2
      7.760480e-02 2 6 1000022 # br(su_2 -> fu_3 chi_1 )
      9.823123e-02 2 6 1000023 # br(su_2 -> fu_3 chi_2 )
      2.143200e-03 2 6 1000025 # br(su_2 -> fu_3 chi_3 )
      5.548735e-02 2 5 1000024 # br(su_2 -> cha_1^* fd_3 )
      1.887856e-01 2 25 1000002 # br(su_2 -> su_1 hh_1 )
      5.806819e-03 2 24 1000001 # br(su_2 -> sd_1 vwm^* )
      5.718781e-01 2 23 1000002 # br(su_2 -> su_1 vz )

DECAY 1000006 1.765879e+00 # su_3
      1.775007e-03 2 2 1000022 # br(su_3 -> fu_1 chi_1 )
      1.003568e-01 2 2 1000025 # br(su_3 -> fu_1 chi_3 )
      1.564340e-02 2 4 1000022 # br(su_3 -> fu_2 chi_1 )
      7.007058e-04 2 4 1000023 # br(su_3 -> fu_2 chi_2 )
      8.813203e-01 2 4 1000025 # br(su_3 -> fu_2 chi_3 )
      1.280388e-04 2 3 1000024 # br(su_3 -> cha_1^* fd_2 )

DECAY 2000002 1.765608e+00 # su_4
      1.559006e-02 2 2 1000022 # br(su_4 -> fu_1 chi_1 )
      6.330266e-04 2 2 1000023 # br(su_4 -> fu_1 chi_2 )
      8.815433e-01 2 2 1000025 # br(su_4 -> fu_1 chi_3 )
      1.781361e-03 2 4 1000022 # br(su_4 -> fu_2 chi_1 )
      1.003574e-01 2 4 1000025 # br(su_4 -> fu_2 chi_3 )

DECAY 2000004 2.528760e-01 # su_5
      2.666315e-02 2 2 1000022 # br(su_5 -> fu_1 chi_1 )
      8.325709e-03 2 2 1000023 # br(su_5 -> fu_1 chi_2 )
      4.581649e-01 2 2 1000025 # br(su_5 -> fu_1 chi_3 )
      6.548732e-02 2 2 1000035 # br(su_5 -> fu_1 chi_4 )
      1.524885e-03 2 4 1000022 # br(su_5 -> fu_2 chi_1 )
      4.932583e-04 2 4 1000023 # br(su_5 -> fu_2 chi_2 )
      2.526813e-02 2 4 1000025 # br(su_5 -> fu_2 chi_3 )
      3.512881e-03 2 4 1000035 # br(su_5 -> fu_2 chi_4 )
      1.180625e-03 2 6 1000022 # br(su_5 -> fu_3 chi_1 )
      1.219524e-03 2 6 1000023 # br(su_5 -> fu_3 chi_2 )
      2.719490e-01 2 1 1000024 # br(su_5 -> cha_1^* fd_1 )
      1.358533e-01 2 1 1000037 # br(su_5 -> cha_2^* fd_1 )

DECAY 2000006 4.061478e-01 # su_6
      2.854230e-03 2 36 1000002 # br(su_6 -> su_1 ah_2 )
      9.211091e-04 2 2 1000022 # br(su_6 -> fu_1 chi_1 )
      2.877328e-04 2 2 1000023 # br(su_6 -> fu_1 chi_2 )
      1.621098e-02 2 2 1000025 # br(su_6 -> fu_1 chi_3 )
      6.801041e-03 2 2 1000035 # br(su_6 -> fu_1 chi_4 )
      1.747167e-02 2 4 1000022 # br(su_6 -> fu_2 chi_1 )
      5.695294e-03 2 4 1000023 # br(su_6 -> fu_2 chi_2 )
      3.013365e-01 2 4 1000025 # br(su_6 -> fu_2 chi_3 )
      1.264014e-01 2 4 1000035 # br(su_6 -> fu_2 chi_4 )
      3.600487e-02 2 6 1000022 # br(su_6 -> fu_3 chi_1 )
      3.715902e-02 2 6 1000023 # br(su_6 -> fu_3 chi_2 )
      7.040801e-04 2 6 1000025 # br(su_6 -> fu_3 chi_3 )
      1.767316e-01 2 3 1000024 # br(su_6 -> cha_1^* fd_2 )
      2.644366e-01 2 3 1000037 # br(su_6 -> cha_2^* fd_2 )
      2.203607e-04 2 25 1000002 # br(su_6 -> su_1 hh_1 )
      2.625544e-03 2 35 1000002 # br(su_6 -> su_1 hh_2 )
      8.998712e-04 2 25 1000004 # br(su_6 -> su_2 hh_1 )
      1.513682e-03 2 24 1000001 # br(su_6 -> sd_1 vwm^* )
      1.629996e-03 2 23 1000002 # br(su_6 -> su_1 vz )

DECAY 1000011 3.820612e+00 # se_1
      1.731624e-01 2 -1000024 16 # br(se_1 -> fv_3 cha_1 )
      1.651028e-01 2 15 1000022 # br(se_1 -> fe_3 chi_1 )
      1.023244e-01 2 15 1000023 # br(se_1 -> fe_3 chi_2 )
      5.594104e-01 2 15 1000025 # br(se_1 -> fe_3 chi_3 )

DECAY 1000013 3.006905e+00 # se_2
      1.427326e-03 2 -1000024 14 # br(se_2 -> fv_2 cha_1 )
      2.071863e-02 2 13 1000022 # br(se_2 -> fe_2 chi_1 )
      1.108790e-03 2 13 1000023 # br(se_2 -> fe_2 chi_2 )
      9.767453e-01 2 13 1000025 # br(se_2 -> fe_2 chi_3 )

DECAY 1000015 3.022277e+00 # se_3
      1.965917e-02 2 11 1000022 # br(se_3 -> fe_1 chi_1 )
      7.966636e-04 2 11 1000023 # br(se_3 -> fe_1 chi_2 )
      9.795441e-01 2 11 1000025 # br(se_3 -> fe_1 chi_3 )

DECAY 2000011 7.865085e-01 # se_4
      1.189990e-02 2 -1000024 12 # br(se_4 -> fv_1 cha_1 )
      9.479680e-04 2 11 1000023 # br(se_4 -> fe_1 chi_2 )
      9.871394e-01 2 11 1000025 # br(se_4 -> fe_1 chi_3 )

DECAY 2000013 8.112692e-01 # se_5
      1.009997e-02 2 -1000024 14 # br(se_5 -> fv_2 cha_1 )
      3.267726e-04 2 13 1000022 # br(se_5 -> fe_2 chi_1 )
      3.622331e-03 2 13 1000023 # br(se_5 -> fe_2 chi_2 )
      9.859509e-01 2 13 1000025 # br(se_5 -> fe_2 chi_3 )

DECAY 2000015 2.639142e+00 # se_6
      8.762746e-02 2 -1000024 16 # br(se_6 -> fv_3 cha_1 )
      1.196513e-01 2 15 1000022 # br(se_6 -> fe_3 chi_1 )
      1.871440e-01 2 15 1000023 # br(se_6 -> fe_3 chi_2 )
      6.055772e-01 2 15 1000025 # br(se_6 -> fe_3 chi_3 )

DECAY 1000012 1.722863e+00 # sv_1
      3.364401e-02 2 16 1000022 # br(sv_1 -> fv_3 chi_1 )
      3.384272e-03 2 16 1000023 # br(sv_1 -> fv_3 chi_2 )
      4.141486e-01 2 16 1000025 # br(sv_1 -> fv_3 chi_3 )
      5.488231e-01 2 15 1000024 # br(sv_1 -> cha_1^* fe_3 )

DECAY 1000014 8.401917e-01 # sv_2
      6.902196e-02 2 14 1000022 # br(sv_2 -> fv_2 chi_1 )
      6.943008e-03 2 14 1000023 # br(sv_2 -> fv_2 chi_2 )
      8.500240e-01 2 14 1000025 # br(sv_2 -> fv_2 chi_3 )
      7.401107e-02 2 13 1000024 # br(sv_2 -> cha_1^* fe_2 )

DECAY 1000016 8.370586e-01 # sv_3
      6.928042e-02 2 12 1000022 # br(sv_3 -> fv_1 chi_1 )
      6.969007e-03 2 12 1000023 # br(sv_3 -> fv_1 chi_2 )
      8.532084e-01 2 12 1000025 # br(sv_3 -> fv_1 chi_3 )
      7.054221e-02 2 11 1000024 # br(sv_3 -> cha_1^* fe_1 )

DECAY 25 4.275873e-03 # hh_1
      3.010659e-03 2 22 22 # br(hh_1 -> vp vp )
      6.930312e-02 2 21 21 # br(hh_1 -> vg vg )
      2.469548e-02 2 23 23 # br(hh_1 -> vz vz )
      2.622195e-01 2 -24 24 # br(hh_1 -> vwm^* vwm_virt )
      2.063789e-04 2 -3 3 # br(hh_1 -> fd_2^* fd_2 )
      5.528068e-01 2 -5 5 # br(hh_1 -> fd_3^* fd_3 )
      2.225281e-04 2 -13 13 # br(hh_1 -> fe_2^* fe_2 )
      6.423432e-02 2 -15 15 # br(hh_1 -> fe_3^* fe_3 )
      2.330052e-02 2 -4 4 # br(hh_1 -> fu_2^* fu_2 )

DECAY 35 4.160128e+00 # hh_2
      3.186684e-04 2 -3 3 # br(hh_2 -> fd_2^* fd_2 )
      8.556147e-01 2 -5 5 # br(hh_2 -> fd_3^* fd_3 )
      4.402386e-04 2 -13 13 # br(hh_2 -> fe_2^* fe_2 )
      1.272237e-01 2 -15 15 # br(hh_2 -> fe_3^* fe_3 )
      1.564528e-02 2 -6 6 # br(hh_2 -> fu_3^* fu_3 )
      4.077736e-04 2 25 25 # br(hh_2 -> hh_1 hh_1 )
      2.154078e-04 2 -24 24 # br(hh_2 -> vwm vwm^* )

DECAY 36 4.170000e+00 # ah_2
      1.174298e-04 2 21 21 # br(ah_2 -> vg vg )
      3.180133e-04 2 -3 3 # br(ah_2 -> fd_2^* fd_2 )
      8.538990e-01 2 -5 5 # br(ah_2 -> fd_3^* fd_3 )
      4.393348e-04 2 -13 13 # br(ah_2 -> fe_2^* fe_2 )
      1.269660e-01 2 -15 15 # br(ah_2 -> fe_3^* fe_3 )
      1.808059e-02 2 -6 6 # br(ah_2 -> fu_3^* fu_3 )
      1.783054e-04 2 23 25 # br(ah_2 -> hh_1 vz )

DECAY 37 3.582123e+01 # hpm_2
      4.357312e-01 2 24 36 # br(hpm_2^* -> ah_2 vwm^* )
      1.948001e-04 2 -5 4 # br(hpm_2^* -> fu_2 fd_3^* )
      1.085049e-01 2 -5 6 # br(hpm_2^* -> fu_3 fd_3^* )
      1.960275e-02 2 -15 16 # br(hpm_2^* -> fv_3 fe_3^* )
      4.357978e-01 2 24 35 # br(hpm_2^* -> hh_2 vwm^* )

DECAY 1000021 6.743648e+02 # glu
      4.137198e-02 2 -1000003 1 # br(glu -> fd_1 sd_2^* )
      4.137198e-02 2 -1 1000003 # br(glu -> fd_1^* sd_2 )
      3.902689e-02 2 -2000001 1 # br(glu -> fd_1 sd_4^* )
      3.902689e-02 2 -1 2000001 # br(glu -> fd_1^* sd_4 )
      4.061256e-02 2 -1000005 3 # br(glu -> fd_2 sd_3^* )
      4.061256e-02 2 -3 1000005 # br(glu -> fd_2^* sd_3 )
      3.829318e-02 2 -2000003 3 # br(glu -> fd_2 sd_5^* )
      3.829318e-02 2 -3 2000003 # br(glu -> fd_2^* sd_5 )
      4.792054e-02 2 -1000001 5 # br(glu -> fd_3 sd_1^* )
      4.792054e-02 2 -5 1000001 # br(glu -> fd_3^* sd_1 )
      3.552928e-02 2 -2000005 5 # br(glu -> fd_3 sd_6^* )
      3.552928e-02 2 -5 2000005 # br(glu -> fd_3^* sd_6 )
      4.004530e-03 2 -1000006 2 # br(glu -> fu_1 su_3^* )
      4.004530e-03 2 -2 1000006 # br(glu -> fu_1^* su_3 )
      3.514540e-02 2 -2000002 2 # br(glu -> fu_1 su_4^* )
      3.514540e-02 2 -2 2000002 # br(glu -> fu_1^* su_4 )
      3.707494e-02 2 -2000004 2 # br(glu -> fu_1 su_5^* )
      3.707494e-02 2 -2 2000004 # br(glu -> fu_1^* su_5 )
      1.953726e-03 2 -2000006 2 # br(glu -> fu_1 su_6^* )
      1.953726e-03 2 -2 2000006 # br(glu -> fu_1^* su_6 )
      6.712186e-05 2 -1000004 4 # br(glu -> fu_2 su_2^* )
      6.712186e-05 2 -4 1000004 # br(glu -> fu_2^* su_2 )
      3.514213e-02 2 -1000006 4 # br(glu -> fu_2 su_3^* )
      3.514213e-02 2 -4 1000006 # br(glu -> fu_2^* su_3 )
      4.001075e-03 2 -2000002 4 # br(glu -> fu_2 su_4^* )
      4.001075e-03 2 -4 2000002 # br(glu -> fu_2^* su_4 )
      1.993525e-03 2 -2000004 4 # br(glu -> fu_2 su_5^* )
      1.993525e-03 2 -4 2000004 # br(glu -> fu_2^* su_5 )
      3.631608e-02 2 -2000006 4 # br(glu -> fu_2 su_6^* )
      3.631608e-02 2 -4 2000006 # br(glu -> fu_2^* su_6 )
      5.905347e-02 2 -1000002 6 # br(glu -> fu_3 su_1^* )
      5.905347e-02 2 -6 1000002 # br(glu -> fu_3^* su_1 )
      4.240964e-02 2 -1000004 6 # br(glu -> fu_3 su_2^* )
      4.240964e-02 2 -6 1000004 # br(glu -> fu_3^* su_2 )
      6.543294e-05 2 -2000006 6 # br(glu -> fu_3 su_6^* )
      6.543294e-05 2 -6 2000006 # br(glu -> fu_3^* su_6 )

DECAY 1000022 0.000000e+00 # chi_1
DECAY 1000023 0.000000e+00 # chi_2
DECAY 1000025 2.713758e+00 # chi_3
      1.601882e-01 2 -1000024 24 # br(chi_3 -> cha_1 vwm^* )
      1.601882e-01 2 -24 1000024 # br(chi_3 -> cha_1^* vwm )
      1.434793e-01 2 25 1000022 # br(chi_3 -> chi_1 hh_1 )
      4.750025e-03 2 25 1000023 # br(chi_3 -> chi_2 hh_1 )
      6.979123e-03 2 23 1000022 # br(chi_3 -> chi_1 vz )
      1.410377e-01 2 23 1000023 # br(chi_3 -> chi_2 vz )
      1.916830e-01 2 -1000002 6 # br(chi_3 -> fu_3 su_1^* )
      1.916830e-01 2 -6 1000002 # br(chi_3 -> fu_3^* su_1 )

DECAY 1000035 2.597220e+01 # chi_4
      8.224471e-03 2 36 1000022 # br(chi_4 -> chi_1 ah_2 )
      5.184906e-02 2 36 1000023 # br(chi_4 -> chi_2 ah_2 )
      2.576553e-02 2 -1000024 37 # br(chi_4 -> cha_1 hpm_2^* )
      2.576553e-02 2 -37 1000024 # br(chi_4 -> cha_1^* hpm_2 )
      1.153925e-01 2 -1000024 24 # br(chi_4 -> cha_1 vwm^* )
      1.153925e-01 2 -24 1000024 # br(chi_4 -> cha_1^* vwm )
      9.888102e-02 2 25 1000022 # br(chi_4 -> chi_1 hh_1 )
      5.122850e-02 2 35 1000022 # br(chi_4 -> chi_1 hh_2 )
      1.799445e-02 2 25 1000023 # br(chi_4 -> chi_2 hh_1 )
      8.008910e-03 2 35 1000023 # br(chi_4 -> chi_2 hh_2 )
      3.025327e-03 2 25 1000025 # br(chi_4 -> chi_3 hh_1 )
      1.797172e-02 2 23 1000022 # br(chi_4 -> chi_1 vz )
      9.728233e-02 2 23 1000023 # br(chi_4 -> chi_2 vz )
      2.126104e-04 2 23 1000025 # br(chi_4 -> chi_3 vz )
      7.606472e-02 2 -1000001 5 # br(chi_4 -> fd_3 sd_1^* )
      7.606472e-02 2 -5 1000001 # br(chi_4 -> fd_3^* sd_1 )
      1.713355e-03 2 -2000011 11 # br(chi_4 -> fe_1 se_4^* )
      1.713355e-03 2 -11 2000011 # br(chi_4 -> fe_1^* se_4 )
      1.694377e-03 2 -2000013 13 # br(chi_4 -> fe_2 se_5^* )
      1.694377e-03 2 -13 2000013 # br(chi_4 -> fe_2^* se_5 )
      7.037564e-04 2 -1000011 15 # br(chi_4 -> fe_3 se_1^* )
      7.037564e-04 2 -15 1000011 # br(chi_4 -> fe_3^* se_1 )
      1.027701e-03 2 -2000015 15 # br(chi_4 -> fe_3 se_6^* )
      1.027701e-03 2 -15 2000015 # br(chi_4 -> fe_3^* se_6 )
      7.331088e-05 2 -1000002 4 # br(chi_4 -> fu_2 su_1^* )
      7.331088e-05 2 -4 1000002 # br(chi_4 -> fu_2^* su_1 )
      7.079160e-05 2 -1000004 4 # br(chi_4 -> fu_2 su_2^* )
      7.079160e-05 2 -4 1000004 # br(chi_4 -> fu_2^* su_2 )
      6.795689e-02 2 -1000002 6 # br(chi_4 -> fu_3 su_1^* )
      6.795689e-02 2 -6 1000002 # br(chi_4 -> fu_3^* su_1 )
      2.670127e-02 2 -1000004 6 # br(chi_4 -> fu_3 su_2^* )
      2.670127e-02 2 -6 1000004 # br(chi_4 -> fu_3^* su_2 )
      1.820475e-03 2 -1000016 12 # br(chi_4 -> fv_1 sv_3^* )
      1.820475e-03 2 -12 1000016 # br(chi_4 -> fv_1^* sv_3 )
      1.820527e-03 2 -1000014 14 # br(chi_4 -> fv_2 sv_2^* )
      1.820527e-03 2 -14 1000014 # br(chi_4 -> fv_2^* sv_2 )
      1.835089e-03 2 -1000012 16 # br(chi_4 -> fv_3 sv_1^* )
      1.835089e-03 2 -16 1000012 # br(chi_4 -> fv_3^* sv_1 )

DECAY 1000024 0.000000e+00 # cha_1
DECAY 1000037 2.600378e+01 # cha_2
      5.979104e-02 2 36 1000024 # br(cha_2^* -> cha_1^* ah_2 )
      1.200565e-01 2 25 1000024 # br(cha_2^* -> cha_1^* hh_1 )
      5.901461e-02 2 35 1000024 # br(cha_2^* -> cha_1^* hh_2 )
      1.151512e-01 2 23 1000024 # br(cha_2^* -> cha_1^* vz )
      2.657471e-02 2 37 1000022 # br(cha_2^* -> chi_1 hpm_2^* )
      2.536651e-02 2 37 1000023 # br(cha_2^* -> chi_2 hpm_2^* )
      1.123044e-01 2 24 1000022 # br(cha_2^* -> chi_1 vwm^* )
      1.156022e-01 2 24 1000023 # br(cha_2^* -> chi_2 vwm^* )
      3.313053e-03 2 24 1000025 # br(cha_2^* -> chi_3 vwm^* )
      1.425824e-01 2 -5 1000002 # br(cha_2^* -> fd_3^* su_1 )
      7.093579e-02 2 -5 1000004 # br(cha_2^* -> fd_3^* su_2 )
      3.629266e-03 2 -11 1000016 # br(cha_2^* -> fe_1^* sv_3 )
      3.629363e-03 2 -13 1000014 # br(cha_2^* -> fe_2^* sv_2 )
      3.656681e-03 2 -15 1000012 # br(cha_2^* -> fe_3^* sv_1 )
      2.482888e-04 2 -1000001 4 # br(cha_2^* -> fu_2 sd_1^* )
      1.276766e-01 2 -1000001 6 # br(cha_2^* -> fu_3 sd_1^* )
      3.470370e-03 2 -2000011 12 # br(cha_2^* -> fv_1 se_4^* )
      3.431943e-03 2 -2000013 14 # br(cha_2^* -> fv_2 se_5^* )
      1.425221e-03 2 -1000011 16 # br(cha_2^* -> fv_3 se_1^* )
      2.083247e-03 2 -2000015 16 # br(cha_2^* -> fv_3 se_6^* )

DECAY 2 0.000000e+00 # fu_1
DECAY 4 0.000000e+00 # fu_2
DECAY 6 1.607448e+00 # fu_3
      1.675949e-03 2 3 24 # br(fu_3 -> fd_2 vwm^* )
      9.982886e-01 2 5 24 # br(fu_3 -> fd_3 vwm^* )

DECAY 21 0.000000e+00 # vg
DECAY 22 0.000000e+00 # vp
DECAY 23 2.495200e+00 # vz
DECAY 24 2.141000e+00 # vwm
DECAY 12 0.000000e+00 # fv_1
DECAY 14 0.000000e+00 # fv_2
DECAY 16 0.000000e+00 # fv_3
DECAY 11 0.000000e+00 # fe_1
DECAY 13 0.000000e+00 # fe_2
DECAY 15 0.000000e+00 # fe_3
DECAY 1 0.000000e+00 # fd_1
DECAY 3 0.000000e+00 # fd_2
DECAY 5 0.000000e+00 # fd_3
</slha>
<MGGenerationInfo>
#  Number of Events        :       10
#  Integrated weight (pb)  :       6.899262816411421e-07
</MGGenerationInfo>
</header>
<init>
2212 2212 6.800000e+03 6.800000e+03 0 0 315800 315800 -4 1
6.899263e-07 4.362920e-08 6.899263e-07 1
<generator name='MadGraph5_aMC@NLO' version='3.2.0'>please cite 1405.0301 </generator>
</init>
<event>
 5      1 +6.8992628e-07 2.32338900e+03 7.81665300e-03 7.94865800e-02
       21 -1    0    0  503  501 +0.0000000000e+00 +0.0000000000e+00 +2.8194241366e+03 2.8194241366e+03 0.0000000000e+00 0.0000e+00 -1.0000e+00
       21 -1    0    0  501  502 -0.0000000000e+00 -0.0000000000e+00 -6.8835003069e+02 6.8835003069e+02 0.0000000000e+00 0.0000e+00 -1.0000e+00
  1000022  1    1    2    0    0 +7.2442463440e+02 +2.0356925247e+02 +1.5454396002e+03 1.8024270219e+03 5.4233580000e+02 0.0000e+00 1.0000e+00
  1000022  1    1    2    0    0 -7.3305913949e+02 +1.4306064425e+02 -1.0855061145e+02 9.2938334670e+02 5.4233580000e+02 0.0000e+00 1.0000e+00
       21  1    1    2  503  502 +8.6345050884e+00 -3.4662989673e+02 +6.9418511719e+02 7.7596379871e+02 0.0000000000e+00 0.0000e+00 -1.0000e+00
<mgrwt>
<rscale>  1 0.23233893E+04</rscale>
<asrwt>0</asrwt>
<pdfrwt beam="1">  1       21 0.41462119E+00 0.23233893E+04</pdfrwt>
<pdfrwt beam="2">  1       21 0.10122795E+00 0.23233893E+04</pdfrwt>
<totfact> 0.19724745E+00</totfact>
</mgrwt>
</event>
<event>
 5      1 +6.8992628e-07 1.03873600e+03 7.81665300e-03 8.64697800e-02
       -1 -1    0    0    0  501 -0.0000000000e+00 +0.0000000000e+00 +2.0291944165e+03 2.0291944165e+03 5.0000000000e-03 0.0000e+00 1.0000e+00
       21 -1    0    0  501  502 +0.0000000000e+00 -0.0000000000e+00 -1.1115879956e+03 1.1115879956e+03 0.0000000000e+00 0.0000e+00 1.0000e+00
  1000022  1    1    2    0    0 -4.2048035451e+02 +7.1245688564e+02 +9.5453291541e+02 1.3746489548e+03 5.4233580000e+02 0.0000e+00 -1.0000e+00
  1000022  1    1    2    0    0 +1.2914080280e+02 -1.1279200347e+03 -3.6283084695e+01 1.2586999379e+03 5.4233580000e+02 0.0000e+00 1.0000e+00
       -1  1    1    2    0  502 +2.9133955170e+02 +4.1546314902e+02 -6.4340988223e-01 5.0743351937e+02 5.0000000000e-03 0.0000e+00 1.0000e+00
<mgrwt>
<rscale>  1 0.10387362E+04</rscale>
<asrwt>0</asrwt>
<pdfrwt beam="2">  1       21 0.16346882E+00 0.10387362E+04</pdfrwt>
<pdfrwt beam="1">  1       -1 0.29841094E+00 0.10387362E+04</pdfrwt>
<totfact> 0.38731735E-01</totfact>
</mgrwt>
</event>
<event>
 5      1 +6.8992628e-07 1.27967300e+03 7.81665300e-03 8.58302500e-02
       21 -1    0    0  501  502 +0.0000000000e+00 +0.0000000000e+00 +1.2587879883e+03 1.2587879883e+03 0.0000000000e+00 0.0000e+00 1.0000e+00
        1 -1    0    0  502    0 -0.0000000000e+00 -0.0000000000e+00 -3.5987897990e+03 3.5987897990e+03 5.0000000000e-03 0.0000e+00 -1.0000e+00
  1000022  1    1    2    0    0 +3.2766195129e+02 +3.6188980546e+02 -7.0920846337e+02 1.0175614724e+03 5.4233580000e+02 0.0000e+00 1.0000e+00
  1000022  1    1    2    0    0 -1.3790225116e+03 -6.9139227020e+02 -2.0837566214e+03 2.6487536949e+03 5.4233580000e+02 0.0000e+00 1.0000e+00
        1  1    1    2  501    0 +1.0513605603e+03 +3.2950246474e+02 +4.5296327414e+02 1.1912626200e+03 5.0000000000e-03 0.0000e+00 -1.0000e+00
<mgrwt>
<rscale>  1 0.11120125E+04</rscale>
<asrwt>0</asrwt>
<pdfrwt beam="1">  1       21 0.18511588E+00 0.12796733E+04</pdfrwt>
<pdfrwt beam="2">  1        1 0.52923378E+00 0.12796733E+04</pdfrwt>
<totfact> 0.18541758E-01</totfact>
</mgrwt>
</event>
<event>
 5      1 +6.8992628e-07 1.63056900e+03 7.81665300e-03 8.24118000e-02
       21 -1    0    0  501  502 +0.0000000000e+00 +0.0000000000e+00 +1.9792539480e+03 1.9792539480e+03 0.0000000000e+00 0.0000e+00 -1.0000e+00
        1 -1    0    0  502    0 -0.0000000000e+00 -0.0000000000e+00 -9.3623605883e+02 9.3623605884e+02 5.0000000000e-03 0.0000e+00 -1.0000e+00
  1000022  1    1    2    0    0 -7.9682757609e+01 -3.2044395736e+02 +5.1009765580e+01 6.3699590879e+02 5.4233580000e+02 0.0000e+00 -1.0000e+00
  1000022  1    1    2    0    0 +2.9927077142e+01 -7.6940801642e+02 +6.1213571205e+02 1.1232642501e+03 5.4233580000e+02 0.0000e+00 -1.0000e+00
        1  1    1    2  501    0 +4.9755680467e+01 +1.0898519738e+03 +3.7987241156e+02 1.1552298479e+03 5.0000000000e-03 0.0000e+00 -1.0000e+00
<mgrwt>
<rscale>  1 0.16305686E+04</rscale>
<asrwt>0</asrwt>
<pdfrwt beam="1">  1       21 0.29106676E+00 0.16305686E+04</pdfrwt>
<pdfrwt beam="2">  1        1 0.13768177E+00 0.16305686E+04</pdfrwt>
<totfact> 0.39076372E+00</totfact>
</mgrwt>
</event>
<event>
 5      1 +6.8992628e-07 1.75278300e+03 7.81665300e-03 8.17972500e-02
       21 -1    0    0  501  502 +0.0000000000e+00 +0.0000000000e+00 +5.7626925957e+02 5.7626925957e+02 0.0000000000e+00 0.0000e+00 -1.0000e+00
        1 -1    0    0  502    0 -0.0000000000e+00 -0.0000000000e+00 -2.7889286641e+03 2.7889286641e+03 5.0000000000e-03 0.0000e+00 -1.0000e+00
  1000022  1    1    2    0    0 -5.8079843273e+02 +2.8862650623e+02 -7.7229817952e+02 1.1450784592e+03 5.4233580000e+02 0.0000e+00 1.0000e+00
  1000022  1    1    2    0    0 +5.8046860580e+02 +1.8972933651e+02 -1.3236921492e+02 8.2739999545e+02 5.4233580000e+02 0.0000e+00 -1.0000e+00
        1  1    1    2  501    0 +3.2982692788e-01 -4.7835584274e+02 -1.3079920101e+03 1.3927194691e+03 5.0000000000e-03 0.0000e+00 -1.0000e+00
<mgrwt>
<rscale>  1 0.17527830E+04</rscale>
<asrwt>0</asrwt>
<pdfrwt beam="1">  1       21 0.84745478E-01 0.17527830E+04</pdfrwt>
<pdfrwt beam="2">  1        1 0.41013657E+00 0.17527830E+04</pdfrwt>
<totfact> 0.88462102E+00</totfact>
</mgrwt>
</event>
<event>
 5      1 +6.8992628e-07 1.76170200e+03 7.81665300e-03 8.17544400e-02
       21 -1    0    0  502  501 +0.0000000000e+00 +0.0000000000e+00 +9.8787544605e+02 9.8787544605e+02 0.0000000000e+00 0.0000e+00 1.0000e+00
       21 -1    0    0  503  502 -0.0000000000e+00 -0.0000000000e+00 -9.8205843567e+02 9.8205843567e+02 0.0000000000e+00 0.0000e+00 1.0000e+00
  1000022  1    1    2    0    0 -7.4945867503e+01 +7.1339445560e+02 +2.2989870346e+02 9.2818643932e+02 5.4233580000e+02 0.0000e+00 -1.0000e+00
  1000022  1    1    2    0    0 +3.7241909656e-01 -5.4851930905e+02 -3.2214320429e+02 8.3592938405e+02 5.4233580000e+02 0.0000e+00 -1.0000e+00
       21  1    1    2  503  501 +7.4573448406e+01 -1.6487514655e+02 +9.8061511206e+01 2.0581805833e+02 0.0000000000e+00 0.0000e+00 1.0000e+00
<mgrwt>
<rscale>  1 0.17617025E+04</rscale>
<asrwt>0</asrwt>
<pdfrwt beam="1">  1       21 0.14527580E+00 0.17617025E+04</pdfrwt>
<pdfrwt beam="2">  1       21 0.14442036E+00 0.17617025E+04</pdfrwt>
<totfact> 0.57284743E+01</totfact>
</mgrwt>
</event>
<event>
 5      1 +6.8992628e-07 1.29460900e+03 7.81665300e-03 8.44387200e-02
       21 -1    0    0  501  502 +0.0000000000e+00 +0.0000000000e+00 +4.3968753249e+02 4.3968753249e+02 0.0000000000e+00 0.0000e+00 1.0000e+00
        2 -1    0    0  502    0 -0.0000000000e+00 -0.0000000000e+00 -2.8863123945e+03 2.8863123945e+03 2.5000000000e-03 0.0000e+00 1.0000e+00
  1000022  1    1    2    0    0 +2.2198824349e+02 -2.3521811147e+02 -2.2503094028e+02 6.7035317875e+02 5.4233580000e+02 0.0000e+00 1.0000e+00
  1000022  1    1    2    0    0 +1.6707999280e+02 -2.9815709585e+02 -5.0371172016e+02 8.1527111735e+02 5.4233580000e+02 0.0000e+00 -1.0000e+00
        2  1    1    2  501    0 -3.8906823630e+02 +5.3337520732e+02 -1.7178822016e+03 1.8403756309e+03 2.5000000000e-03 0.0000e+00 1.0000e+00
<mgrwt>
<rscale>  1 0.12946095E+04</rscale>
<asrwt>0</asrwt>
<pdfrwt beam="1">  1       21 0.64659930E-01 0.12946095E+04</pdfrwt>
<pdfrwt beam="2">  1        2 0.42445771E+00 0.12946095E+04</pdfrwt>
<totfact> 0.59805270E+01</totfact>
</mgrwt>
</event>
<event>
 5      1 +6.8992628e-07 1.78267200e+03 7.81665300e-03 8.16548300e-02
       21 -1    0    0  502  501 +0.0000000000e+00 +0.0000000000e+00 +1.0259232190e+03 1.0259232190e+03 0.0000000000e+00 0.0000e+00 1.0000e+00
       21 -1    0    0  503  502 -0.0000000000e+00 -0.0000000000e+00 -1.6527757460e+03 1.6527757460e+03 0.0000000000e+00 0.0000e+00 1.0000e+00
  1000022  1    1    2    0    0 -4.5037544117e+02 -1.3783122736e+02 -6.7605242143e+02 9.8641293672e+02 5.4233580000e+02 0.0000e+00 1.0000e+00
  1000022  1    1    2    0    0 -1.4691959699e+02 -3.7194254673e+02 +4.5037158080e+02 8.1048707997e+02 5.4233580000e+02 0.0000e+00 1.0000e+00
       21  1    1    2  503  501 +5.9729503816e+02 +5.0977377409e+02 -4.0117168627e+02 8.8179894830e+02 0.0000000000e+00 0.0000e+00 1.0000e+00
<mgrwt>
<rscale>  1 0.17826715E+04</rscale>
<asrwt>0</asrwt>
<pdfrwt beam="1">  1       21 0.15087106E+00 0.17826715E+04</pdfrwt>
<pdfrwt beam="2">  1       21 0.24305526E+00 0.17826715E+04</pdfrwt>
<totfact> 0.87989834E+00</totfact>
</mgrwt>
</event>
<event>
 5      1 +6.8992628e-07 2.03608800e+03 7.81665300e-03 8.05523100e-02
       21 -1    0    0  503  501 +0.0000000000e+00 +0.0000000000e+00 +8.5483539150e+02 8.5483539150e+02 0.0000000000e+00 0.0000e+00 -1.0000e+00
       21 -1    0    0  501  502 -0.0000000000e+00 -0.0000000000e+00 -1.7202676043e+03 1.7202676043e+03 0.0000000000e+00 0.0000e+00 1.0000e+00
  1000022  1    1    2    0    0 +4.3032511141e+02 +5.6857163455e+02 -6.5458380407e+02 1.1095321003e+03 5.4233580000e+02 0.0000e+00 1.0000e+00
  1000022  1    1    2    0    0 -2.6879031354e+02 -7.2147568665e+02 +2.3208085199e+02 9.6993043096e+02 5.4233580000e+02 0.0000e+00 1.0000e+00
       21  1    1    2  503  502 -1.6153479787e+02 +1.5290405210e+02 -4.4292926074e+02 4.9564046454e+02 0.0000000000e+00 0.0000e+00 1.0000e+00
<mgrwt>
<rscale>  1 0.20360883E+04</rscale>
<asrwt>0</asrwt>
<pdfrwt beam="1">  1       21 0.12571109E+00 0.20360883E+04</pdfrwt>
<pdfrwt beam="2">  1       21 0.25298053E+00 0.20360883E+04</pdfrwt>
<totfact> 0.12473632E+01</totfact>
</mgrwt>
</event>
<event>
 5      1 +6.8992628e-07 1.51287000e+03 7.81665300e-03 8.30590500e-02
       21 -1    0    0  502  501 +0.0000000000e+00 +0.0000000000e+00 +1.0775888506e+03 1.0775888506e+03 0.0000000000e+00 0.0000e+00 1.0000e+00
       21 -1    0    0  503  502 -0.0000000000e+00 -0.0000000000e+00 -9.1824079459e+02 9.1824079459e+02 0.0000000000e+00 0.0000e+00 1.0000e+00
  1000022  1    1    2    0    0 +5.7216504142e+02 -3.7389918080e+02 -7.7246101967e+00 8.7256015357e+02 5.4233580000e+02 0.0000e+00 -1.0000e+00
  1000022  1    1    2    0    0 -3.3863935485e+02 -2.4843704904e+01 +2.7070125500e+01 6.4043323928e+02 5.4233580000e+02 0.0000e+00 -1.0000e+00
       21  1    1    2  503  501 -2.3352568657e+02 +3.9874288570e+02 +1.4000254074e+02 4.8283625237e+02 0.0000000000e+00 0.0000e+00 1.0000e+00
<mgrwt>
<rscale>  1 0.15128697E+04</rscale>
<asrwt>0</asrwt>
<pdfrwt beam="1">  1       21 0.15846895E+00 0.15128697E+04</pdfrwt>
<pdfrwt beam="2">  1       21 0.13503541E+00 0.15128697E+04</pdfrwt>
<totfact> 0.55277051E+01</totfact>
</mgrwt>
</event>
</LesHouchesEvents>


Todo in src:
    1. Analysera vilka klasser och vilka massor där modellerna är bäst och sämst. (Diskutera varför i rapporten)
    1.5 Gör en analys av bayesian CNN, analysera sannolikheterna och de olika klasserna. Finns en bra medium.com inlägg för detta. Snyggt för rapporten samt ger förståelse för modellen.
    2. Gör classification och regression för monoz. Behöver ändra i data_prep, samt modifiera lite i model_name, samt plotting.py.
    3. Plotta snyggare plottar (använd calles mallar)
    4. Fixa och experimentera med data augmentation. Undersök vilka som är relevanta för oss (se Yong Shengs mail). Samt undersök hur många vi kan använda.
    5. Implementera grid search för learning rate (eftersom modellerna är väldigt känsliga för detta). Går att göra en wrapper i tensorflow för sk-learns gridsearch.
    6. Fixa allt hopp i classification:
        Möjliga anledningar och lösningar
        6.1 Debugga data preparation (både i den råa datan, data_prep filen samt hur modellerna och main.py använder datan)
        6.2 Debugga om det har med optimizers att göra (prova olika och olika learning rate). (Personligen (Edward) tror jag att det är detta som är problemet)
        6.3 Undersök om det har med complexiteten i modellen att göra (för komplex, för lite komplex).
        6.4 Undersök olika regularization techniques (kan vara att den overfittar/underfittar
    7. Implementera en Gaussian Process för regression. Den funkar inte och behövs skrivas om.
    8. Fixa statistik för hur många av varje klass vi har, hur mycket är augmented, osv
    9. Ändra i regressor så att det blir en för monoz och en för monojet, finns för lite data för att lära sig annars
